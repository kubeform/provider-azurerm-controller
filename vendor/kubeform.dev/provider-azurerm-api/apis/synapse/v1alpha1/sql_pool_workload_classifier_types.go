/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SqlPoolWorkloadClassifier struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SqlPoolWorkloadClassifierSpec   `json:"spec,omitempty"`
	Status            SqlPoolWorkloadClassifierStatus `json:"status,omitempty"`
}

type SqlPoolWorkloadClassifierSpec struct {
	State *SqlPoolWorkloadClassifierSpecResource `json:"state,omitempty" tf:"-"`

	Resource SqlPoolWorkloadClassifierSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type SqlPoolWorkloadClassifierSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Context *string `json:"context,omitempty" tf:"context"`
	// +optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time"`
	// +optional
	Importance *string `json:"importance,omitempty" tf:"importance"`
	// +optional
	Label      *string `json:"label,omitempty" tf:"label"`
	MemberName *string `json:"memberName" tf:"member_name"`
	Name       *string `json:"name" tf:"name"`
	// +optional
	StartTime       *string `json:"startTime,omitempty" tf:"start_time"`
	WorkloadGroupID *string `json:"workloadGroupID" tf:"workload_group_id"`
}

type SqlPoolWorkloadClassifierStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SqlPoolWorkloadClassifierList is a list of SqlPoolWorkloadClassifiers
type SqlPoolWorkloadClassifierList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SqlPoolWorkloadClassifier CRD objects
	Items []SqlPoolWorkloadClassifier `json:"items,omitempty"`
}
