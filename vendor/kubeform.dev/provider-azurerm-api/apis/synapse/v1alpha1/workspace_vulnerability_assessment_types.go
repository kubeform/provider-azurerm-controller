/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type WorkspaceVulnerabilityAssessment struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WorkspaceVulnerabilityAssessmentSpec   `json:"spec,omitempty"`
	Status            WorkspaceVulnerabilityAssessmentStatus `json:"status,omitempty"`
}

type WorkspaceVulnerabilityAssessmentSpecRecurringScans struct {
	// +optional
	EmailSubscriptionAdminsEnabled *bool `json:"emailSubscriptionAdminsEnabled,omitempty" tf:"email_subscription_admins_enabled"`
	// +optional
	Emails []string `json:"emails,omitempty" tf:"emails"`
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
}

type WorkspaceVulnerabilityAssessmentSpec struct {
	State *WorkspaceVulnerabilityAssessmentSpecResource `json:"state,omitempty" tf:"-"`

	Resource WorkspaceVulnerabilityAssessmentSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type WorkspaceVulnerabilityAssessmentSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	RecurringScans *WorkspaceVulnerabilityAssessmentSpecRecurringScans `json:"recurringScans,omitempty" tf:"recurring_scans"`
	// +optional
	StorageAccountAccessKey *string `json:"-" sensitive:"true" tf:"storage_account_access_key"`
	StorageContainerPath    *string `json:"storageContainerPath" tf:"storage_container_path"`
	// +optional
	StorageContainerSasKey         *string `json:"-" sensitive:"true" tf:"storage_container_sas_key"`
	WorkspaceSecurityAlertPolicyID *string `json:"workspaceSecurityAlertPolicyID" tf:"workspace_security_alert_policy_id"`
}

type WorkspaceVulnerabilityAssessmentStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// WorkspaceVulnerabilityAssessmentList is a list of WorkspaceVulnerabilityAssessments
type WorkspaceVulnerabilityAssessmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of WorkspaceVulnerabilityAssessment CRD objects
	Items []WorkspaceVulnerabilityAssessment `json:"items,omitempty"`
}
