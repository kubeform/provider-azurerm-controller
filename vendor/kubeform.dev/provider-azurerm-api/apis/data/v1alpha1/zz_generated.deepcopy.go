// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	corev1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Factory) DeepCopyInto(out *Factory) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Factory.
func (in *Factory) DeepCopy() *Factory {
	if in == nil {
		return nil
	}
	out := new(Factory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Factory) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetAzureBlob) DeepCopyInto(out *FactoryDatasetAzureBlob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetAzureBlob.
func (in *FactoryDatasetAzureBlob) DeepCopy() *FactoryDatasetAzureBlob {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetAzureBlob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetAzureBlob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetAzureBlobList) DeepCopyInto(out *FactoryDatasetAzureBlobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryDatasetAzureBlob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetAzureBlobList.
func (in *FactoryDatasetAzureBlobList) DeepCopy() *FactoryDatasetAzureBlobList {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetAzureBlobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetAzureBlobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetAzureBlobSpec) DeepCopyInto(out *FactoryDatasetAzureBlobSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryDatasetAzureBlobSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetAzureBlobSpec.
func (in *FactoryDatasetAzureBlobSpec) DeepCopy() *FactoryDatasetAzureBlobSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetAzureBlobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetAzureBlobSpecResource) DeepCopyInto(out *FactoryDatasetAzureBlobSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DynamicFilenameEnabled != nil {
		in, out := &in.DynamicFilenameEnabled, &out.DynamicFilenameEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DynamicPathEnabled != nil {
		in, out := &in.DynamicPathEnabled, &out.DynamicPathEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]FactoryDatasetAzureBlobSpecSchemaColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetAzureBlobSpecResource.
func (in *FactoryDatasetAzureBlobSpecResource) DeepCopy() *FactoryDatasetAzureBlobSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetAzureBlobSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetAzureBlobSpecSchemaColumn) DeepCopyInto(out *FactoryDatasetAzureBlobSpecSchemaColumn) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetAzureBlobSpecSchemaColumn.
func (in *FactoryDatasetAzureBlobSpecSchemaColumn) DeepCopy() *FactoryDatasetAzureBlobSpecSchemaColumn {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetAzureBlobSpecSchemaColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetAzureBlobStatus) DeepCopyInto(out *FactoryDatasetAzureBlobStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetAzureBlobStatus.
func (in *FactoryDatasetAzureBlobStatus) DeepCopy() *FactoryDatasetAzureBlobStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetAzureBlobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetCosmosdbSqlapi) DeepCopyInto(out *FactoryDatasetCosmosdbSqlapi) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetCosmosdbSqlapi.
func (in *FactoryDatasetCosmosdbSqlapi) DeepCopy() *FactoryDatasetCosmosdbSqlapi {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetCosmosdbSqlapi)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetCosmosdbSqlapi) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetCosmosdbSqlapiList) DeepCopyInto(out *FactoryDatasetCosmosdbSqlapiList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryDatasetCosmosdbSqlapi, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetCosmosdbSqlapiList.
func (in *FactoryDatasetCosmosdbSqlapiList) DeepCopy() *FactoryDatasetCosmosdbSqlapiList {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetCosmosdbSqlapiList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetCosmosdbSqlapiList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetCosmosdbSqlapiSpec) DeepCopyInto(out *FactoryDatasetCosmosdbSqlapiSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryDatasetCosmosdbSqlapiSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetCosmosdbSqlapiSpec.
func (in *FactoryDatasetCosmosdbSqlapiSpec) DeepCopy() *FactoryDatasetCosmosdbSqlapiSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetCosmosdbSqlapiSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetCosmosdbSqlapiSpecResource) DeepCopyInto(out *FactoryDatasetCosmosdbSqlapiSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]FactoryDatasetCosmosdbSqlapiSpecSchemaColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetCosmosdbSqlapiSpecResource.
func (in *FactoryDatasetCosmosdbSqlapiSpecResource) DeepCopy() *FactoryDatasetCosmosdbSqlapiSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetCosmosdbSqlapiSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetCosmosdbSqlapiSpecSchemaColumn) DeepCopyInto(out *FactoryDatasetCosmosdbSqlapiSpecSchemaColumn) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetCosmosdbSqlapiSpecSchemaColumn.
func (in *FactoryDatasetCosmosdbSqlapiSpecSchemaColumn) DeepCopy() *FactoryDatasetCosmosdbSqlapiSpecSchemaColumn {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetCosmosdbSqlapiSpecSchemaColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetCosmosdbSqlapiStatus) DeepCopyInto(out *FactoryDatasetCosmosdbSqlapiStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetCosmosdbSqlapiStatus.
func (in *FactoryDatasetCosmosdbSqlapiStatus) DeepCopy() *FactoryDatasetCosmosdbSqlapiStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetCosmosdbSqlapiStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetDelimitedText) DeepCopyInto(out *FactoryDatasetDelimitedText) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetDelimitedText.
func (in *FactoryDatasetDelimitedText) DeepCopy() *FactoryDatasetDelimitedText {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetDelimitedText)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetDelimitedText) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetDelimitedTextList) DeepCopyInto(out *FactoryDatasetDelimitedTextList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryDatasetDelimitedText, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetDelimitedTextList.
func (in *FactoryDatasetDelimitedTextList) DeepCopy() *FactoryDatasetDelimitedTextList {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetDelimitedTextList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetDelimitedTextList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetDelimitedTextSpec) DeepCopyInto(out *FactoryDatasetDelimitedTextSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryDatasetDelimitedTextSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetDelimitedTextSpec.
func (in *FactoryDatasetDelimitedTextSpec) DeepCopy() *FactoryDatasetDelimitedTextSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetDelimitedTextSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetDelimitedTextSpecAzureBlobFsLocation) DeepCopyInto(out *FactoryDatasetDelimitedTextSpecAzureBlobFsLocation) {
	*out = *in
	if in.FileSystem != nil {
		in, out := &in.FileSystem, &out.FileSystem
		*out = new(string)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetDelimitedTextSpecAzureBlobFsLocation.
func (in *FactoryDatasetDelimitedTextSpecAzureBlobFsLocation) DeepCopy() *FactoryDatasetDelimitedTextSpecAzureBlobFsLocation {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetDelimitedTextSpecAzureBlobFsLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetDelimitedTextSpecAzureBlobStorageLocation) DeepCopyInto(out *FactoryDatasetDelimitedTextSpecAzureBlobStorageLocation) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetDelimitedTextSpecAzureBlobStorageLocation.
func (in *FactoryDatasetDelimitedTextSpecAzureBlobStorageLocation) DeepCopy() *FactoryDatasetDelimitedTextSpecAzureBlobStorageLocation {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetDelimitedTextSpecAzureBlobStorageLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetDelimitedTextSpecHttpServerLocation) DeepCopyInto(out *FactoryDatasetDelimitedTextSpecHttpServerLocation) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RelativeURL != nil {
		in, out := &in.RelativeURL, &out.RelativeURL
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetDelimitedTextSpecHttpServerLocation.
func (in *FactoryDatasetDelimitedTextSpecHttpServerLocation) DeepCopy() *FactoryDatasetDelimitedTextSpecHttpServerLocation {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetDelimitedTextSpecHttpServerLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetDelimitedTextSpecResource) DeepCopyInto(out *FactoryDatasetDelimitedTextSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AzureBlobFsLocation != nil {
		in, out := &in.AzureBlobFsLocation, &out.AzureBlobFsLocation
		*out = new(FactoryDatasetDelimitedTextSpecAzureBlobFsLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.AzureBlobStorageLocation != nil {
		in, out := &in.AzureBlobStorageLocation, &out.AzureBlobStorageLocation
		*out = new(FactoryDatasetDelimitedTextSpecAzureBlobStorageLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.ColumnDelimiter != nil {
		in, out := &in.ColumnDelimiter, &out.ColumnDelimiter
		*out = new(string)
		**out = **in
	}
	if in.CompressionCodec != nil {
		in, out := &in.CompressionCodec, &out.CompressionCodec
		*out = new(string)
		**out = **in
	}
	if in.CompressionLevel != nil {
		in, out := &in.CompressionLevel, &out.CompressionLevel
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.EscapeCharacter != nil {
		in, out := &in.EscapeCharacter, &out.EscapeCharacter
		*out = new(string)
		**out = **in
	}
	if in.FirstRowAsHeader != nil {
		in, out := &in.FirstRowAsHeader, &out.FirstRowAsHeader
		*out = new(bool)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HttpServerLocation != nil {
		in, out := &in.HttpServerLocation, &out.HttpServerLocation
		*out = new(FactoryDatasetDelimitedTextSpecHttpServerLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NullValue != nil {
		in, out := &in.NullValue, &out.NullValue
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.QuoteCharacter != nil {
		in, out := &in.QuoteCharacter, &out.QuoteCharacter
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RowDelimiter != nil {
		in, out := &in.RowDelimiter, &out.RowDelimiter
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]FactoryDatasetDelimitedTextSpecSchemaColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetDelimitedTextSpecResource.
func (in *FactoryDatasetDelimitedTextSpecResource) DeepCopy() *FactoryDatasetDelimitedTextSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetDelimitedTextSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetDelimitedTextSpecSchemaColumn) DeepCopyInto(out *FactoryDatasetDelimitedTextSpecSchemaColumn) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetDelimitedTextSpecSchemaColumn.
func (in *FactoryDatasetDelimitedTextSpecSchemaColumn) DeepCopy() *FactoryDatasetDelimitedTextSpecSchemaColumn {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetDelimitedTextSpecSchemaColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetDelimitedTextStatus) DeepCopyInto(out *FactoryDatasetDelimitedTextStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetDelimitedTextStatus.
func (in *FactoryDatasetDelimitedTextStatus) DeepCopy() *FactoryDatasetDelimitedTextStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetDelimitedTextStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetHTTP) DeepCopyInto(out *FactoryDatasetHTTP) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetHTTP.
func (in *FactoryDatasetHTTP) DeepCopy() *FactoryDatasetHTTP {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetHTTP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetHTTP) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetHTTPList) DeepCopyInto(out *FactoryDatasetHTTPList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryDatasetHTTP, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetHTTPList.
func (in *FactoryDatasetHTTPList) DeepCopy() *FactoryDatasetHTTPList {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetHTTPList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetHTTPList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetHTTPSpec) DeepCopyInto(out *FactoryDatasetHTTPSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryDatasetHTTPSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetHTTPSpec.
func (in *FactoryDatasetHTTPSpec) DeepCopy() *FactoryDatasetHTTPSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetHTTPSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetHTTPSpecResource) DeepCopyInto(out *FactoryDatasetHTTPSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.RelativeURL != nil {
		in, out := &in.RelativeURL, &out.RelativeURL
		*out = new(string)
		**out = **in
	}
	if in.RequestBody != nil {
		in, out := &in.RequestBody, &out.RequestBody
		*out = new(string)
		**out = **in
	}
	if in.RequestMethod != nil {
		in, out := &in.RequestMethod, &out.RequestMethod
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]FactoryDatasetHTTPSpecSchemaColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetHTTPSpecResource.
func (in *FactoryDatasetHTTPSpecResource) DeepCopy() *FactoryDatasetHTTPSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetHTTPSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetHTTPSpecSchemaColumn) DeepCopyInto(out *FactoryDatasetHTTPSpecSchemaColumn) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetHTTPSpecSchemaColumn.
func (in *FactoryDatasetHTTPSpecSchemaColumn) DeepCopy() *FactoryDatasetHTTPSpecSchemaColumn {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetHTTPSpecSchemaColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetHTTPStatus) DeepCopyInto(out *FactoryDatasetHTTPStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetHTTPStatus.
func (in *FactoryDatasetHTTPStatus) DeepCopy() *FactoryDatasetHTTPStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetHTTPStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetJSON) DeepCopyInto(out *FactoryDatasetJSON) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetJSON.
func (in *FactoryDatasetJSON) DeepCopy() *FactoryDatasetJSON {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetJSON)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetJSON) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetJSONList) DeepCopyInto(out *FactoryDatasetJSONList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryDatasetJSON, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetJSONList.
func (in *FactoryDatasetJSONList) DeepCopy() *FactoryDatasetJSONList {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetJSONList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetJSONList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetJSONSpec) DeepCopyInto(out *FactoryDatasetJSONSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryDatasetJSONSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetJSONSpec.
func (in *FactoryDatasetJSONSpec) DeepCopy() *FactoryDatasetJSONSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetJSONSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetJSONSpecAzureBlobStorageLocation) DeepCopyInto(out *FactoryDatasetJSONSpecAzureBlobStorageLocation) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetJSONSpecAzureBlobStorageLocation.
func (in *FactoryDatasetJSONSpecAzureBlobStorageLocation) DeepCopy() *FactoryDatasetJSONSpecAzureBlobStorageLocation {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetJSONSpecAzureBlobStorageLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetJSONSpecHttpServerLocation) DeepCopyInto(out *FactoryDatasetJSONSpecHttpServerLocation) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RelativeURL != nil {
		in, out := &in.RelativeURL, &out.RelativeURL
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetJSONSpecHttpServerLocation.
func (in *FactoryDatasetJSONSpecHttpServerLocation) DeepCopy() *FactoryDatasetJSONSpecHttpServerLocation {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetJSONSpecHttpServerLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetJSONSpecResource) DeepCopyInto(out *FactoryDatasetJSONSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AzureBlobStorageLocation != nil {
		in, out := &in.AzureBlobStorageLocation, &out.AzureBlobStorageLocation
		*out = new(FactoryDatasetJSONSpecAzureBlobStorageLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HttpServerLocation != nil {
		in, out := &in.HttpServerLocation, &out.HttpServerLocation
		*out = new(FactoryDatasetJSONSpecHttpServerLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]FactoryDatasetJSONSpecSchemaColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetJSONSpecResource.
func (in *FactoryDatasetJSONSpecResource) DeepCopy() *FactoryDatasetJSONSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetJSONSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetJSONSpecSchemaColumn) DeepCopyInto(out *FactoryDatasetJSONSpecSchemaColumn) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetJSONSpecSchemaColumn.
func (in *FactoryDatasetJSONSpecSchemaColumn) DeepCopy() *FactoryDatasetJSONSpecSchemaColumn {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetJSONSpecSchemaColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetJSONStatus) DeepCopyInto(out *FactoryDatasetJSONStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetJSONStatus.
func (in *FactoryDatasetJSONStatus) DeepCopy() *FactoryDatasetJSONStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetJSONStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetMysql) DeepCopyInto(out *FactoryDatasetMysql) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetMysql.
func (in *FactoryDatasetMysql) DeepCopy() *FactoryDatasetMysql {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetMysql)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetMysql) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetMysqlList) DeepCopyInto(out *FactoryDatasetMysqlList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryDatasetMysql, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetMysqlList.
func (in *FactoryDatasetMysqlList) DeepCopy() *FactoryDatasetMysqlList {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetMysqlList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetMysqlList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetMysqlSpec) DeepCopyInto(out *FactoryDatasetMysqlSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryDatasetMysqlSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetMysqlSpec.
func (in *FactoryDatasetMysqlSpec) DeepCopy() *FactoryDatasetMysqlSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetMysqlSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetMysqlSpecResource) DeepCopyInto(out *FactoryDatasetMysqlSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]FactoryDatasetMysqlSpecSchemaColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetMysqlSpecResource.
func (in *FactoryDatasetMysqlSpecResource) DeepCopy() *FactoryDatasetMysqlSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetMysqlSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetMysqlSpecSchemaColumn) DeepCopyInto(out *FactoryDatasetMysqlSpecSchemaColumn) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetMysqlSpecSchemaColumn.
func (in *FactoryDatasetMysqlSpecSchemaColumn) DeepCopy() *FactoryDatasetMysqlSpecSchemaColumn {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetMysqlSpecSchemaColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetMysqlStatus) DeepCopyInto(out *FactoryDatasetMysqlStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetMysqlStatus.
func (in *FactoryDatasetMysqlStatus) DeepCopy() *FactoryDatasetMysqlStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetMysqlStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetParquet) DeepCopyInto(out *FactoryDatasetParquet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetParquet.
func (in *FactoryDatasetParquet) DeepCopy() *FactoryDatasetParquet {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetParquet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetParquet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetParquetList) DeepCopyInto(out *FactoryDatasetParquetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryDatasetParquet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetParquetList.
func (in *FactoryDatasetParquetList) DeepCopy() *FactoryDatasetParquetList {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetParquetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetParquetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetParquetSpec) DeepCopyInto(out *FactoryDatasetParquetSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryDatasetParquetSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetParquetSpec.
func (in *FactoryDatasetParquetSpec) DeepCopy() *FactoryDatasetParquetSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetParquetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetParquetSpecAzureBlobStorageLocation) DeepCopyInto(out *FactoryDatasetParquetSpecAzureBlobStorageLocation) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetParquetSpecAzureBlobStorageLocation.
func (in *FactoryDatasetParquetSpecAzureBlobStorageLocation) DeepCopy() *FactoryDatasetParquetSpecAzureBlobStorageLocation {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetParquetSpecAzureBlobStorageLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetParquetSpecHttpServerLocation) DeepCopyInto(out *FactoryDatasetParquetSpecHttpServerLocation) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RelativeURL != nil {
		in, out := &in.RelativeURL, &out.RelativeURL
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetParquetSpecHttpServerLocation.
func (in *FactoryDatasetParquetSpecHttpServerLocation) DeepCopy() *FactoryDatasetParquetSpecHttpServerLocation {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetParquetSpecHttpServerLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetParquetSpecResource) DeepCopyInto(out *FactoryDatasetParquetSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AzureBlobStorageLocation != nil {
		in, out := &in.AzureBlobStorageLocation, &out.AzureBlobStorageLocation
		*out = new(FactoryDatasetParquetSpecAzureBlobStorageLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.CompressionCodec != nil {
		in, out := &in.CompressionCodec, &out.CompressionCodec
		*out = new(string)
		**out = **in
	}
	if in.CompressionLevel != nil {
		in, out := &in.CompressionLevel, &out.CompressionLevel
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HttpServerLocation != nil {
		in, out := &in.HttpServerLocation, &out.HttpServerLocation
		*out = new(FactoryDatasetParquetSpecHttpServerLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]FactoryDatasetParquetSpecSchemaColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetParquetSpecResource.
func (in *FactoryDatasetParquetSpecResource) DeepCopy() *FactoryDatasetParquetSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetParquetSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetParquetSpecSchemaColumn) DeepCopyInto(out *FactoryDatasetParquetSpecSchemaColumn) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetParquetSpecSchemaColumn.
func (in *FactoryDatasetParquetSpecSchemaColumn) DeepCopy() *FactoryDatasetParquetSpecSchemaColumn {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetParquetSpecSchemaColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetParquetStatus) DeepCopyInto(out *FactoryDatasetParquetStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetParquetStatus.
func (in *FactoryDatasetParquetStatus) DeepCopy() *FactoryDatasetParquetStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetParquetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetPostgresql) DeepCopyInto(out *FactoryDatasetPostgresql) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetPostgresql.
func (in *FactoryDatasetPostgresql) DeepCopy() *FactoryDatasetPostgresql {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetPostgresql)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetPostgresql) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetPostgresqlList) DeepCopyInto(out *FactoryDatasetPostgresqlList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryDatasetPostgresql, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetPostgresqlList.
func (in *FactoryDatasetPostgresqlList) DeepCopy() *FactoryDatasetPostgresqlList {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetPostgresqlList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetPostgresqlList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetPostgresqlSpec) DeepCopyInto(out *FactoryDatasetPostgresqlSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryDatasetPostgresqlSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetPostgresqlSpec.
func (in *FactoryDatasetPostgresqlSpec) DeepCopy() *FactoryDatasetPostgresqlSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetPostgresqlSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetPostgresqlSpecResource) DeepCopyInto(out *FactoryDatasetPostgresqlSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]FactoryDatasetPostgresqlSpecSchemaColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetPostgresqlSpecResource.
func (in *FactoryDatasetPostgresqlSpecResource) DeepCopy() *FactoryDatasetPostgresqlSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetPostgresqlSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetPostgresqlSpecSchemaColumn) DeepCopyInto(out *FactoryDatasetPostgresqlSpecSchemaColumn) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetPostgresqlSpecSchemaColumn.
func (in *FactoryDatasetPostgresqlSpecSchemaColumn) DeepCopy() *FactoryDatasetPostgresqlSpecSchemaColumn {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetPostgresqlSpecSchemaColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetPostgresqlStatus) DeepCopyInto(out *FactoryDatasetPostgresqlStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetPostgresqlStatus.
func (in *FactoryDatasetPostgresqlStatus) DeepCopy() *FactoryDatasetPostgresqlStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetPostgresqlStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetSQLServerTable) DeepCopyInto(out *FactoryDatasetSQLServerTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetSQLServerTable.
func (in *FactoryDatasetSQLServerTable) DeepCopy() *FactoryDatasetSQLServerTable {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetSQLServerTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetSQLServerTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetSQLServerTableList) DeepCopyInto(out *FactoryDatasetSQLServerTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryDatasetSQLServerTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetSQLServerTableList.
func (in *FactoryDatasetSQLServerTableList) DeepCopy() *FactoryDatasetSQLServerTableList {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetSQLServerTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetSQLServerTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetSQLServerTableSpec) DeepCopyInto(out *FactoryDatasetSQLServerTableSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryDatasetSQLServerTableSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetSQLServerTableSpec.
func (in *FactoryDatasetSQLServerTableSpec) DeepCopy() *FactoryDatasetSQLServerTableSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetSQLServerTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetSQLServerTableSpecResource) DeepCopyInto(out *FactoryDatasetSQLServerTableSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]FactoryDatasetSQLServerTableSpecSchemaColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetSQLServerTableSpecResource.
func (in *FactoryDatasetSQLServerTableSpecResource) DeepCopy() *FactoryDatasetSQLServerTableSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetSQLServerTableSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetSQLServerTableSpecSchemaColumn) DeepCopyInto(out *FactoryDatasetSQLServerTableSpecSchemaColumn) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetSQLServerTableSpecSchemaColumn.
func (in *FactoryDatasetSQLServerTableSpecSchemaColumn) DeepCopy() *FactoryDatasetSQLServerTableSpecSchemaColumn {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetSQLServerTableSpecSchemaColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetSQLServerTableStatus) DeepCopyInto(out *FactoryDatasetSQLServerTableStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetSQLServerTableStatus.
func (in *FactoryDatasetSQLServerTableStatus) DeepCopy() *FactoryDatasetSQLServerTableStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetSQLServerTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetSnowflake) DeepCopyInto(out *FactoryDatasetSnowflake) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetSnowflake.
func (in *FactoryDatasetSnowflake) DeepCopy() *FactoryDatasetSnowflake {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetSnowflake)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetSnowflake) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetSnowflakeList) DeepCopyInto(out *FactoryDatasetSnowflakeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryDatasetSnowflake, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetSnowflakeList.
func (in *FactoryDatasetSnowflakeList) DeepCopy() *FactoryDatasetSnowflakeList {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetSnowflakeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryDatasetSnowflakeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetSnowflakeSpec) DeepCopyInto(out *FactoryDatasetSnowflakeSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryDatasetSnowflakeSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetSnowflakeSpec.
func (in *FactoryDatasetSnowflakeSpec) DeepCopy() *FactoryDatasetSnowflakeSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetSnowflakeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetSnowflakeSpecResource) DeepCopyInto(out *FactoryDatasetSnowflakeSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SchemaColumn != nil {
		in, out := &in.SchemaColumn, &out.SchemaColumn
		*out = make([]FactoryDatasetSnowflakeSpecSchemaColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetSnowflakeSpecResource.
func (in *FactoryDatasetSnowflakeSpecResource) DeepCopy() *FactoryDatasetSnowflakeSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetSnowflakeSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetSnowflakeSpecSchemaColumn) DeepCopyInto(out *FactoryDatasetSnowflakeSpecSchemaColumn) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetSnowflakeSpecSchemaColumn.
func (in *FactoryDatasetSnowflakeSpecSchemaColumn) DeepCopy() *FactoryDatasetSnowflakeSpecSchemaColumn {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetSnowflakeSpecSchemaColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryDatasetSnowflakeStatus) DeepCopyInto(out *FactoryDatasetSnowflakeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryDatasetSnowflakeStatus.
func (in *FactoryDatasetSnowflakeStatus) DeepCopy() *FactoryDatasetSnowflakeStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryDatasetSnowflakeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzure) DeepCopyInto(out *FactoryIntegrationRuntimeAzure) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzure.
func (in *FactoryIntegrationRuntimeAzure) DeepCopy() *FactoryIntegrationRuntimeAzure {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryIntegrationRuntimeAzure) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzureList) DeepCopyInto(out *FactoryIntegrationRuntimeAzureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryIntegrationRuntimeAzure, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzureList.
func (in *FactoryIntegrationRuntimeAzureList) DeepCopy() *FactoryIntegrationRuntimeAzureList {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryIntegrationRuntimeAzureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzureSpec) DeepCopyInto(out *FactoryIntegrationRuntimeAzureSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryIntegrationRuntimeAzureSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzureSpec.
func (in *FactoryIntegrationRuntimeAzureSpec) DeepCopy() *FactoryIntegrationRuntimeAzureSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzureSpecResource) DeepCopyInto(out *FactoryIntegrationRuntimeAzureSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ComputeType != nil {
		in, out := &in.ComputeType, &out.ComputeType
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(int64)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.TimeToLiveMin != nil {
		in, out := &in.TimeToLiveMin, &out.TimeToLiveMin
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzureSpecResource.
func (in *FactoryIntegrationRuntimeAzureSpecResource) DeepCopy() *FactoryIntegrationRuntimeAzureSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzureSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzureSsis) DeepCopyInto(out *FactoryIntegrationRuntimeAzureSsis) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzureSsis.
func (in *FactoryIntegrationRuntimeAzureSsis) DeepCopy() *FactoryIntegrationRuntimeAzureSsis {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzureSsis)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryIntegrationRuntimeAzureSsis) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzureSsisList) DeepCopyInto(out *FactoryIntegrationRuntimeAzureSsisList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryIntegrationRuntimeAzureSsis, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzureSsisList.
func (in *FactoryIntegrationRuntimeAzureSsisList) DeepCopy() *FactoryIntegrationRuntimeAzureSsisList {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzureSsisList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryIntegrationRuntimeAzureSsisList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzureSsisSpec) DeepCopyInto(out *FactoryIntegrationRuntimeAzureSsisSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryIntegrationRuntimeAzureSsisSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzureSsisSpec.
func (in *FactoryIntegrationRuntimeAzureSsisSpec) DeepCopy() *FactoryIntegrationRuntimeAzureSsisSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzureSsisSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzureSsisSpecCatalogInfo) DeepCopyInto(out *FactoryIntegrationRuntimeAzureSsisSpecCatalogInfo) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	if in.AdministratorPassword != nil {
		in, out := &in.AdministratorPassword, &out.AdministratorPassword
		*out = new(string)
		**out = **in
	}
	if in.PricingTier != nil {
		in, out := &in.PricingTier, &out.PricingTier
		*out = new(string)
		**out = **in
	}
	if in.ServerEndpoint != nil {
		in, out := &in.ServerEndpoint, &out.ServerEndpoint
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzureSsisSpecCatalogInfo.
func (in *FactoryIntegrationRuntimeAzureSsisSpecCatalogInfo) DeepCopy() *FactoryIntegrationRuntimeAzureSsisSpecCatalogInfo {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzureSsisSpecCatalogInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzureSsisSpecCustomSetupScript) DeepCopyInto(out *FactoryIntegrationRuntimeAzureSsisSpecCustomSetupScript) {
	*out = *in
	if in.BlobContainerURI != nil {
		in, out := &in.BlobContainerURI, &out.BlobContainerURI
		*out = new(string)
		**out = **in
	}
	if in.SasToken != nil {
		in, out := &in.SasToken, &out.SasToken
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzureSsisSpecCustomSetupScript.
func (in *FactoryIntegrationRuntimeAzureSsisSpecCustomSetupScript) DeepCopy() *FactoryIntegrationRuntimeAzureSsisSpecCustomSetupScript {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzureSsisSpecCustomSetupScript)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzureSsisSpecResource) DeepCopyInto(out *FactoryIntegrationRuntimeAzureSsisSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CatalogInfo != nil {
		in, out := &in.CatalogInfo, &out.CatalogInfo
		*out = new(FactoryIntegrationRuntimeAzureSsisSpecCatalogInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSetupScript != nil {
		in, out := &in.CustomSetupScript, &out.CustomSetupScript
		*out = new(FactoryIntegrationRuntimeAzureSsisSpecCustomSetupScript)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxParallelExecutionsPerNode != nil {
		in, out := &in.MaxParallelExecutionsPerNode, &out.MaxParallelExecutionsPerNode
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeSize != nil {
		in, out := &in.NodeSize, &out.NodeSize
		*out = new(string)
		**out = **in
	}
	if in.NumberOfNodes != nil {
		in, out := &in.NumberOfNodes, &out.NumberOfNodes
		*out = new(int64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.VnetIntegration != nil {
		in, out := &in.VnetIntegration, &out.VnetIntegration
		*out = new(FactoryIntegrationRuntimeAzureSsisSpecVnetIntegration)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzureSsisSpecResource.
func (in *FactoryIntegrationRuntimeAzureSsisSpecResource) DeepCopy() *FactoryIntegrationRuntimeAzureSsisSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzureSsisSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzureSsisSpecVnetIntegration) DeepCopyInto(out *FactoryIntegrationRuntimeAzureSsisSpecVnetIntegration) {
	*out = *in
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetID != nil {
		in, out := &in.VnetID, &out.VnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzureSsisSpecVnetIntegration.
func (in *FactoryIntegrationRuntimeAzureSsisSpecVnetIntegration) DeepCopy() *FactoryIntegrationRuntimeAzureSsisSpecVnetIntegration {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzureSsisSpecVnetIntegration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzureSsisStatus) DeepCopyInto(out *FactoryIntegrationRuntimeAzureSsisStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzureSsisStatus.
func (in *FactoryIntegrationRuntimeAzureSsisStatus) DeepCopy() *FactoryIntegrationRuntimeAzureSsisStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzureSsisStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeAzureStatus) DeepCopyInto(out *FactoryIntegrationRuntimeAzureStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeAzureStatus.
func (in *FactoryIntegrationRuntimeAzureStatus) DeepCopy() *FactoryIntegrationRuntimeAzureStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeAzureStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeManaged) DeepCopyInto(out *FactoryIntegrationRuntimeManaged) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeManaged.
func (in *FactoryIntegrationRuntimeManaged) DeepCopy() *FactoryIntegrationRuntimeManaged {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeManaged)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryIntegrationRuntimeManaged) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeManagedList) DeepCopyInto(out *FactoryIntegrationRuntimeManagedList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryIntegrationRuntimeManaged, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeManagedList.
func (in *FactoryIntegrationRuntimeManagedList) DeepCopy() *FactoryIntegrationRuntimeManagedList {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeManagedList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryIntegrationRuntimeManagedList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeManagedSpec) DeepCopyInto(out *FactoryIntegrationRuntimeManagedSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryIntegrationRuntimeManagedSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeManagedSpec.
func (in *FactoryIntegrationRuntimeManagedSpec) DeepCopy() *FactoryIntegrationRuntimeManagedSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeManagedSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeManagedSpecCatalogInfo) DeepCopyInto(out *FactoryIntegrationRuntimeManagedSpecCatalogInfo) {
	*out = *in
	if in.AdministratorLogin != nil {
		in, out := &in.AdministratorLogin, &out.AdministratorLogin
		*out = new(string)
		**out = **in
	}
	if in.AdministratorPassword != nil {
		in, out := &in.AdministratorPassword, &out.AdministratorPassword
		*out = new(string)
		**out = **in
	}
	if in.PricingTier != nil {
		in, out := &in.PricingTier, &out.PricingTier
		*out = new(string)
		**out = **in
	}
	if in.ServerEndpoint != nil {
		in, out := &in.ServerEndpoint, &out.ServerEndpoint
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeManagedSpecCatalogInfo.
func (in *FactoryIntegrationRuntimeManagedSpecCatalogInfo) DeepCopy() *FactoryIntegrationRuntimeManagedSpecCatalogInfo {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeManagedSpecCatalogInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeManagedSpecCustomSetupScript) DeepCopyInto(out *FactoryIntegrationRuntimeManagedSpecCustomSetupScript) {
	*out = *in
	if in.BlobContainerURI != nil {
		in, out := &in.BlobContainerURI, &out.BlobContainerURI
		*out = new(string)
		**out = **in
	}
	if in.SasToken != nil {
		in, out := &in.SasToken, &out.SasToken
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeManagedSpecCustomSetupScript.
func (in *FactoryIntegrationRuntimeManagedSpecCustomSetupScript) DeepCopy() *FactoryIntegrationRuntimeManagedSpecCustomSetupScript {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeManagedSpecCustomSetupScript)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeManagedSpecResource) DeepCopyInto(out *FactoryIntegrationRuntimeManagedSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CatalogInfo != nil {
		in, out := &in.CatalogInfo, &out.CatalogInfo
		*out = new(FactoryIntegrationRuntimeManagedSpecCatalogInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSetupScript != nil {
		in, out := &in.CustomSetupScript, &out.CustomSetupScript
		*out = new(FactoryIntegrationRuntimeManagedSpecCustomSetupScript)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxParallelExecutionsPerNode != nil {
		in, out := &in.MaxParallelExecutionsPerNode, &out.MaxParallelExecutionsPerNode
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeSize != nil {
		in, out := &in.NodeSize, &out.NodeSize
		*out = new(string)
		**out = **in
	}
	if in.NumberOfNodes != nil {
		in, out := &in.NumberOfNodes, &out.NumberOfNodes
		*out = new(int64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.VnetIntegration != nil {
		in, out := &in.VnetIntegration, &out.VnetIntegration
		*out = new(FactoryIntegrationRuntimeManagedSpecVnetIntegration)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeManagedSpecResource.
func (in *FactoryIntegrationRuntimeManagedSpecResource) DeepCopy() *FactoryIntegrationRuntimeManagedSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeManagedSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeManagedSpecVnetIntegration) DeepCopyInto(out *FactoryIntegrationRuntimeManagedSpecVnetIntegration) {
	*out = *in
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetID != nil {
		in, out := &in.VnetID, &out.VnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeManagedSpecVnetIntegration.
func (in *FactoryIntegrationRuntimeManagedSpecVnetIntegration) DeepCopy() *FactoryIntegrationRuntimeManagedSpecVnetIntegration {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeManagedSpecVnetIntegration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeManagedStatus) DeepCopyInto(out *FactoryIntegrationRuntimeManagedStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeManagedStatus.
func (in *FactoryIntegrationRuntimeManagedStatus) DeepCopy() *FactoryIntegrationRuntimeManagedStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeManagedStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeSelfHosted) DeepCopyInto(out *FactoryIntegrationRuntimeSelfHosted) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeSelfHosted.
func (in *FactoryIntegrationRuntimeSelfHosted) DeepCopy() *FactoryIntegrationRuntimeSelfHosted {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeSelfHosted)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryIntegrationRuntimeSelfHosted) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeSelfHostedList) DeepCopyInto(out *FactoryIntegrationRuntimeSelfHostedList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryIntegrationRuntimeSelfHosted, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeSelfHostedList.
func (in *FactoryIntegrationRuntimeSelfHostedList) DeepCopy() *FactoryIntegrationRuntimeSelfHostedList {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeSelfHostedList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryIntegrationRuntimeSelfHostedList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeSelfHostedSpec) DeepCopyInto(out *FactoryIntegrationRuntimeSelfHostedSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryIntegrationRuntimeSelfHostedSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeSelfHostedSpec.
func (in *FactoryIntegrationRuntimeSelfHostedSpec) DeepCopy() *FactoryIntegrationRuntimeSelfHostedSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeSelfHostedSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeSelfHostedSpecRbacAuthorization) DeepCopyInto(out *FactoryIntegrationRuntimeSelfHostedSpecRbacAuthorization) {
	*out = *in
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeSelfHostedSpecRbacAuthorization.
func (in *FactoryIntegrationRuntimeSelfHostedSpecRbacAuthorization) DeepCopy() *FactoryIntegrationRuntimeSelfHostedSpecRbacAuthorization {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeSelfHostedSpecRbacAuthorization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeSelfHostedSpecResource) DeepCopyInto(out *FactoryIntegrationRuntimeSelfHostedSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthKey1 != nil {
		in, out := &in.AuthKey1, &out.AuthKey1
		*out = new(string)
		**out = **in
	}
	if in.AuthKey2 != nil {
		in, out := &in.AuthKey2, &out.AuthKey2
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RbacAuthorization != nil {
		in, out := &in.RbacAuthorization, &out.RbacAuthorization
		*out = make([]FactoryIntegrationRuntimeSelfHostedSpecRbacAuthorization, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeSelfHostedSpecResource.
func (in *FactoryIntegrationRuntimeSelfHostedSpecResource) DeepCopy() *FactoryIntegrationRuntimeSelfHostedSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeSelfHostedSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryIntegrationRuntimeSelfHostedStatus) DeepCopyInto(out *FactoryIntegrationRuntimeSelfHostedStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryIntegrationRuntimeSelfHostedStatus.
func (in *FactoryIntegrationRuntimeSelfHostedStatus) DeepCopy() *FactoryIntegrationRuntimeSelfHostedStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryIntegrationRuntimeSelfHostedStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedCustomService) DeepCopyInto(out *FactoryLinkedCustomService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedCustomService.
func (in *FactoryLinkedCustomService) DeepCopy() *FactoryLinkedCustomService {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedCustomService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedCustomService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedCustomServiceList) DeepCopyInto(out *FactoryLinkedCustomServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedCustomService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedCustomServiceList.
func (in *FactoryLinkedCustomServiceList) DeepCopy() *FactoryLinkedCustomServiceList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedCustomServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedCustomServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedCustomServiceSpec) DeepCopyInto(out *FactoryLinkedCustomServiceSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedCustomServiceSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedCustomServiceSpec.
func (in *FactoryLinkedCustomServiceSpec) DeepCopy() *FactoryLinkedCustomServiceSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedCustomServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedCustomServiceSpecIntegrationRuntime) DeepCopyInto(out *FactoryLinkedCustomServiceSpecIntegrationRuntime) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedCustomServiceSpecIntegrationRuntime.
func (in *FactoryLinkedCustomServiceSpecIntegrationRuntime) DeepCopy() *FactoryLinkedCustomServiceSpecIntegrationRuntime {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedCustomServiceSpecIntegrationRuntime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedCustomServiceSpecResource) DeepCopyInto(out *FactoryLinkedCustomServiceSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntime != nil {
		in, out := &in.IntegrationRuntime, &out.IntegrationRuntime
		*out = new(FactoryLinkedCustomServiceSpecIntegrationRuntime)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypePropertiesJSON != nil {
		in, out := &in.TypePropertiesJSON, &out.TypePropertiesJSON
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedCustomServiceSpecResource.
func (in *FactoryLinkedCustomServiceSpecResource) DeepCopy() *FactoryLinkedCustomServiceSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedCustomServiceSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedCustomServiceStatus) DeepCopyInto(out *FactoryLinkedCustomServiceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedCustomServiceStatus.
func (in *FactoryLinkedCustomServiceStatus) DeepCopy() *FactoryLinkedCustomServiceStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedCustomServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureBlobStorage) DeepCopyInto(out *FactoryLinkedServiceAzureBlobStorage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureBlobStorage.
func (in *FactoryLinkedServiceAzureBlobStorage) DeepCopy() *FactoryLinkedServiceAzureBlobStorage {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureBlobStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureBlobStorage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureBlobStorageList) DeepCopyInto(out *FactoryLinkedServiceAzureBlobStorageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceAzureBlobStorage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureBlobStorageList.
func (in *FactoryLinkedServiceAzureBlobStorageList) DeepCopy() *FactoryLinkedServiceAzureBlobStorageList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureBlobStorageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureBlobStorageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureBlobStorageSpec) DeepCopyInto(out *FactoryLinkedServiceAzureBlobStorageSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceAzureBlobStorageSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureBlobStorageSpec.
func (in *FactoryLinkedServiceAzureBlobStorageSpec) DeepCopy() *FactoryLinkedServiceAzureBlobStorageSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureBlobStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureBlobStorageSpecResource) DeepCopyInto(out *FactoryLinkedServiceAzureBlobStorageSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SasURI != nil {
		in, out := &in.SasURI, &out.SasURI
		*out = new(string)
		**out = **in
	}
	if in.ServiceEndpoint != nil {
		in, out := &in.ServiceEndpoint, &out.ServiceEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalKey != nil {
		in, out := &in.ServicePrincipalKey, &out.ServicePrincipalKey
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.UseManagedIdentity != nil {
		in, out := &in.UseManagedIdentity, &out.UseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureBlobStorageSpecResource.
func (in *FactoryLinkedServiceAzureBlobStorageSpecResource) DeepCopy() *FactoryLinkedServiceAzureBlobStorageSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureBlobStorageSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureBlobStorageStatus) DeepCopyInto(out *FactoryLinkedServiceAzureBlobStorageStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureBlobStorageStatus.
func (in *FactoryLinkedServiceAzureBlobStorageStatus) DeepCopy() *FactoryLinkedServiceAzureBlobStorageStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureBlobStorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureDatabricks) DeepCopyInto(out *FactoryLinkedServiceAzureDatabricks) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureDatabricks.
func (in *FactoryLinkedServiceAzureDatabricks) DeepCopy() *FactoryLinkedServiceAzureDatabricks {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureDatabricks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureDatabricks) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureDatabricksList) DeepCopyInto(out *FactoryLinkedServiceAzureDatabricksList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceAzureDatabricks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureDatabricksList.
func (in *FactoryLinkedServiceAzureDatabricksList) DeepCopy() *FactoryLinkedServiceAzureDatabricksList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureDatabricksList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureDatabricksList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureDatabricksSpec) DeepCopyInto(out *FactoryLinkedServiceAzureDatabricksSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceAzureDatabricksSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureDatabricksSpec.
func (in *FactoryLinkedServiceAzureDatabricksSpec) DeepCopy() *FactoryLinkedServiceAzureDatabricksSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureDatabricksSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureDatabricksSpecInstancePool) DeepCopyInto(out *FactoryLinkedServiceAzureDatabricksSpecInstancePool) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.MaxNumberOfWorkers != nil {
		in, out := &in.MaxNumberOfWorkers, &out.MaxNumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	if in.MinNumberOfWorkers != nil {
		in, out := &in.MinNumberOfWorkers, &out.MinNumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureDatabricksSpecInstancePool.
func (in *FactoryLinkedServiceAzureDatabricksSpecInstancePool) DeepCopy() *FactoryLinkedServiceAzureDatabricksSpecInstancePool {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureDatabricksSpecInstancePool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureDatabricksSpecKeyVaultPassword) DeepCopyInto(out *FactoryLinkedServiceAzureDatabricksSpecKeyVaultPassword) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureDatabricksSpecKeyVaultPassword.
func (in *FactoryLinkedServiceAzureDatabricksSpecKeyVaultPassword) DeepCopy() *FactoryLinkedServiceAzureDatabricksSpecKeyVaultPassword {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureDatabricksSpecKeyVaultPassword)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureDatabricksSpecNewClusterConfig) DeepCopyInto(out *FactoryLinkedServiceAzureDatabricksSpecNewClusterConfig) {
	*out = *in
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.DriverNodeType != nil {
		in, out := &in.DriverNodeType, &out.DriverNodeType
		*out = new(string)
		**out = **in
	}
	if in.InitScripts != nil {
		in, out := &in.InitScripts, &out.InitScripts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LogDestination != nil {
		in, out := &in.LogDestination, &out.LogDestination
		*out = new(string)
		**out = **in
	}
	if in.MaxNumberOfWorkers != nil {
		in, out := &in.MaxNumberOfWorkers, &out.MaxNumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	if in.MinNumberOfWorkers != nil {
		in, out := &in.MinNumberOfWorkers, &out.MinNumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	if in.NodeType != nil {
		in, out := &in.NodeType, &out.NodeType
		*out = new(string)
		**out = **in
	}
	if in.SparkConfig != nil {
		in, out := &in.SparkConfig, &out.SparkConfig
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.SparkEnvironmentVariables != nil {
		in, out := &in.SparkEnvironmentVariables, &out.SparkEnvironmentVariables
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureDatabricksSpecNewClusterConfig.
func (in *FactoryLinkedServiceAzureDatabricksSpecNewClusterConfig) DeepCopy() *FactoryLinkedServiceAzureDatabricksSpecNewClusterConfig {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureDatabricksSpecNewClusterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureDatabricksSpecResource) DeepCopyInto(out *FactoryLinkedServiceAzureDatabricksSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = new(string)
		**out = **in
	}
	if in.AdbDomain != nil {
		in, out := &in.AdbDomain, &out.AdbDomain
		*out = new(string)
		**out = **in
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExistingClusterID != nil {
		in, out := &in.ExistingClusterID, &out.ExistingClusterID
		*out = new(string)
		**out = **in
	}
	if in.InstancePool != nil {
		in, out := &in.InstancePool, &out.InstancePool
		*out = new(FactoryLinkedServiceAzureDatabricksSpecInstancePool)
		(*in).DeepCopyInto(*out)
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultPassword != nil {
		in, out := &in.KeyVaultPassword, &out.KeyVaultPassword
		*out = new(FactoryLinkedServiceAzureDatabricksSpecKeyVaultPassword)
		(*in).DeepCopyInto(*out)
	}
	if in.MsiWorkSpaceResourceID != nil {
		in, out := &in.MsiWorkSpaceResourceID, &out.MsiWorkSpaceResourceID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewClusterConfig != nil {
		in, out := &in.NewClusterConfig, &out.NewClusterConfig
		*out = new(FactoryLinkedServiceAzureDatabricksSpecNewClusterConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureDatabricksSpecResource.
func (in *FactoryLinkedServiceAzureDatabricksSpecResource) DeepCopy() *FactoryLinkedServiceAzureDatabricksSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureDatabricksSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureDatabricksStatus) DeepCopyInto(out *FactoryLinkedServiceAzureDatabricksStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureDatabricksStatus.
func (in *FactoryLinkedServiceAzureDatabricksStatus) DeepCopy() *FactoryLinkedServiceAzureDatabricksStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureDatabricksStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureFileStorage) DeepCopyInto(out *FactoryLinkedServiceAzureFileStorage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureFileStorage.
func (in *FactoryLinkedServiceAzureFileStorage) DeepCopy() *FactoryLinkedServiceAzureFileStorage {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureFileStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureFileStorage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureFileStorageList) DeepCopyInto(out *FactoryLinkedServiceAzureFileStorageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceAzureFileStorage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureFileStorageList.
func (in *FactoryLinkedServiceAzureFileStorageList) DeepCopy() *FactoryLinkedServiceAzureFileStorageList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureFileStorageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureFileStorageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureFileStorageSpec) DeepCopyInto(out *FactoryLinkedServiceAzureFileStorageSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceAzureFileStorageSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureFileStorageSpec.
func (in *FactoryLinkedServiceAzureFileStorageSpec) DeepCopy() *FactoryLinkedServiceAzureFileStorageSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureFileStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureFileStorageSpecKeyVaultPassword) DeepCopyInto(out *FactoryLinkedServiceAzureFileStorageSpecKeyVaultPassword) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureFileStorageSpecKeyVaultPassword.
func (in *FactoryLinkedServiceAzureFileStorageSpecKeyVaultPassword) DeepCopy() *FactoryLinkedServiceAzureFileStorageSpecKeyVaultPassword {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureFileStorageSpecKeyVaultPassword)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureFileStorageSpecResource) DeepCopyInto(out *FactoryLinkedServiceAzureFileStorageSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FileShare != nil {
		in, out := &in.FileShare, &out.FileShare
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultPassword != nil {
		in, out := &in.KeyVaultPassword, &out.KeyVaultPassword
		*out = new(FactoryLinkedServiceAzureFileStorageSpecKeyVaultPassword)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureFileStorageSpecResource.
func (in *FactoryLinkedServiceAzureFileStorageSpecResource) DeepCopy() *FactoryLinkedServiceAzureFileStorageSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureFileStorageSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureFileStorageStatus) DeepCopyInto(out *FactoryLinkedServiceAzureFileStorageStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureFileStorageStatus.
func (in *FactoryLinkedServiceAzureFileStorageStatus) DeepCopy() *FactoryLinkedServiceAzureFileStorageStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureFileStorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureFunction) DeepCopyInto(out *FactoryLinkedServiceAzureFunction) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureFunction.
func (in *FactoryLinkedServiceAzureFunction) DeepCopy() *FactoryLinkedServiceAzureFunction {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureFunction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureFunction) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureFunctionList) DeepCopyInto(out *FactoryLinkedServiceAzureFunctionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceAzureFunction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureFunctionList.
func (in *FactoryLinkedServiceAzureFunctionList) DeepCopy() *FactoryLinkedServiceAzureFunctionList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureFunctionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureFunctionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureFunctionSpec) DeepCopyInto(out *FactoryLinkedServiceAzureFunctionSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceAzureFunctionSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureFunctionSpec.
func (in *FactoryLinkedServiceAzureFunctionSpec) DeepCopy() *FactoryLinkedServiceAzureFunctionSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureFunctionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureFunctionSpecResource) DeepCopyInto(out *FactoryLinkedServiceAzureFunctionSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureFunctionSpecResource.
func (in *FactoryLinkedServiceAzureFunctionSpecResource) DeepCopy() *FactoryLinkedServiceAzureFunctionSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureFunctionSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureFunctionStatus) DeepCopyInto(out *FactoryLinkedServiceAzureFunctionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureFunctionStatus.
func (in *FactoryLinkedServiceAzureFunctionStatus) DeepCopy() *FactoryLinkedServiceAzureFunctionStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureFunctionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureSQLDatabase) DeepCopyInto(out *FactoryLinkedServiceAzureSQLDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureSQLDatabase.
func (in *FactoryLinkedServiceAzureSQLDatabase) DeepCopy() *FactoryLinkedServiceAzureSQLDatabase {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureSQLDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureSQLDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureSQLDatabaseList) DeepCopyInto(out *FactoryLinkedServiceAzureSQLDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceAzureSQLDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureSQLDatabaseList.
func (in *FactoryLinkedServiceAzureSQLDatabaseList) DeepCopy() *FactoryLinkedServiceAzureSQLDatabaseList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureSQLDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureSQLDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureSQLDatabaseSpec) DeepCopyInto(out *FactoryLinkedServiceAzureSQLDatabaseSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceAzureSQLDatabaseSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureSQLDatabaseSpec.
func (in *FactoryLinkedServiceAzureSQLDatabaseSpec) DeepCopy() *FactoryLinkedServiceAzureSQLDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureSQLDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultConnectionString) DeepCopyInto(out *FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultConnectionString) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultConnectionString.
func (in *FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultConnectionString) DeepCopy() *FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultConnectionString {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultConnectionString)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultPassword) DeepCopyInto(out *FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultPassword) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultPassword.
func (in *FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultPassword) DeepCopy() *FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultPassword {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultPassword)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureSQLDatabaseSpecResource) DeepCopyInto(out *FactoryLinkedServiceAzureSQLDatabaseSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultConnectionString != nil {
		in, out := &in.KeyVaultConnectionString, &out.KeyVaultConnectionString
		*out = new(FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultConnectionString)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultPassword != nil {
		in, out := &in.KeyVaultPassword, &out.KeyVaultPassword
		*out = new(FactoryLinkedServiceAzureSQLDatabaseSpecKeyVaultPassword)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalKey != nil {
		in, out := &in.ServicePrincipalKey, &out.ServicePrincipalKey
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.UseManagedIdentity != nil {
		in, out := &in.UseManagedIdentity, &out.UseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureSQLDatabaseSpecResource.
func (in *FactoryLinkedServiceAzureSQLDatabaseSpecResource) DeepCopy() *FactoryLinkedServiceAzureSQLDatabaseSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureSQLDatabaseSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureSQLDatabaseStatus) DeepCopyInto(out *FactoryLinkedServiceAzureSQLDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureSQLDatabaseStatus.
func (in *FactoryLinkedServiceAzureSQLDatabaseStatus) DeepCopy() *FactoryLinkedServiceAzureSQLDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureSQLDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureSearch) DeepCopyInto(out *FactoryLinkedServiceAzureSearch) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureSearch.
func (in *FactoryLinkedServiceAzureSearch) DeepCopy() *FactoryLinkedServiceAzureSearch {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureSearch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureSearch) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureSearchList) DeepCopyInto(out *FactoryLinkedServiceAzureSearchList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceAzureSearch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureSearchList.
func (in *FactoryLinkedServiceAzureSearchList) DeepCopy() *FactoryLinkedServiceAzureSearchList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureSearchList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureSearchList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureSearchSpec) DeepCopyInto(out *FactoryLinkedServiceAzureSearchSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceAzureSearchSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureSearchSpec.
func (in *FactoryLinkedServiceAzureSearchSpec) DeepCopy() *FactoryLinkedServiceAzureSearchSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureSearchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureSearchSpecResource) DeepCopyInto(out *FactoryLinkedServiceAzureSearchSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptedCredential != nil {
		in, out := &in.EncryptedCredential, &out.EncryptedCredential
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.SearchServiceKey != nil {
		in, out := &in.SearchServiceKey, &out.SearchServiceKey
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureSearchSpecResource.
func (in *FactoryLinkedServiceAzureSearchSpecResource) DeepCopy() *FactoryLinkedServiceAzureSearchSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureSearchSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureSearchStatus) DeepCopyInto(out *FactoryLinkedServiceAzureSearchStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureSearchStatus.
func (in *FactoryLinkedServiceAzureSearchStatus) DeepCopy() *FactoryLinkedServiceAzureSearchStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureSearchStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureTableStorage) DeepCopyInto(out *FactoryLinkedServiceAzureTableStorage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureTableStorage.
func (in *FactoryLinkedServiceAzureTableStorage) DeepCopy() *FactoryLinkedServiceAzureTableStorage {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureTableStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureTableStorage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureTableStorageList) DeepCopyInto(out *FactoryLinkedServiceAzureTableStorageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceAzureTableStorage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureTableStorageList.
func (in *FactoryLinkedServiceAzureTableStorageList) DeepCopy() *FactoryLinkedServiceAzureTableStorageList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureTableStorageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceAzureTableStorageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureTableStorageSpec) DeepCopyInto(out *FactoryLinkedServiceAzureTableStorageSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceAzureTableStorageSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureTableStorageSpec.
func (in *FactoryLinkedServiceAzureTableStorageSpec) DeepCopy() *FactoryLinkedServiceAzureTableStorageSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureTableStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureTableStorageSpecResource) DeepCopyInto(out *FactoryLinkedServiceAzureTableStorageSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureTableStorageSpecResource.
func (in *FactoryLinkedServiceAzureTableStorageSpecResource) DeepCopy() *FactoryLinkedServiceAzureTableStorageSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureTableStorageSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceAzureTableStorageStatus) DeepCopyInto(out *FactoryLinkedServiceAzureTableStorageStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceAzureTableStorageStatus.
func (in *FactoryLinkedServiceAzureTableStorageStatus) DeepCopy() *FactoryLinkedServiceAzureTableStorageStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceAzureTableStorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceCosmosdb) DeepCopyInto(out *FactoryLinkedServiceCosmosdb) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceCosmosdb.
func (in *FactoryLinkedServiceCosmosdb) DeepCopy() *FactoryLinkedServiceCosmosdb {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceCosmosdb)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceCosmosdb) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceCosmosdbList) DeepCopyInto(out *FactoryLinkedServiceCosmosdbList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceCosmosdb, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceCosmosdbList.
func (in *FactoryLinkedServiceCosmosdbList) DeepCopy() *FactoryLinkedServiceCosmosdbList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceCosmosdbList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceCosmosdbList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceCosmosdbSpec) DeepCopyInto(out *FactoryLinkedServiceCosmosdbSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceCosmosdbSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceCosmosdbSpec.
func (in *FactoryLinkedServiceCosmosdbSpec) DeepCopy() *FactoryLinkedServiceCosmosdbSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceCosmosdbSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceCosmosdbSpecResource) DeepCopyInto(out *FactoryLinkedServiceCosmosdbSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountEndpoint != nil {
		in, out := &in.AccountEndpoint, &out.AccountEndpoint
		*out = new(string)
		**out = **in
	}
	if in.AccountKey != nil {
		in, out := &in.AccountKey, &out.AccountKey
		*out = new(string)
		**out = **in
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceCosmosdbSpecResource.
func (in *FactoryLinkedServiceCosmosdbSpecResource) DeepCopy() *FactoryLinkedServiceCosmosdbSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceCosmosdbSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceCosmosdbStatus) DeepCopyInto(out *FactoryLinkedServiceCosmosdbStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceCosmosdbStatus.
func (in *FactoryLinkedServiceCosmosdbStatus) DeepCopy() *FactoryLinkedServiceCosmosdbStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceCosmosdbStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceDataLakeStorageGen2) DeepCopyInto(out *FactoryLinkedServiceDataLakeStorageGen2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceDataLakeStorageGen2.
func (in *FactoryLinkedServiceDataLakeStorageGen2) DeepCopy() *FactoryLinkedServiceDataLakeStorageGen2 {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceDataLakeStorageGen2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceDataLakeStorageGen2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceDataLakeStorageGen2List) DeepCopyInto(out *FactoryLinkedServiceDataLakeStorageGen2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceDataLakeStorageGen2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceDataLakeStorageGen2List.
func (in *FactoryLinkedServiceDataLakeStorageGen2List) DeepCopy() *FactoryLinkedServiceDataLakeStorageGen2List {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceDataLakeStorageGen2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceDataLakeStorageGen2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceDataLakeStorageGen2Spec) DeepCopyInto(out *FactoryLinkedServiceDataLakeStorageGen2Spec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceDataLakeStorageGen2SpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceDataLakeStorageGen2Spec.
func (in *FactoryLinkedServiceDataLakeStorageGen2Spec) DeepCopy() *FactoryLinkedServiceDataLakeStorageGen2Spec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceDataLakeStorageGen2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceDataLakeStorageGen2SpecResource) DeepCopyInto(out *FactoryLinkedServiceDataLakeStorageGen2SpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalKey != nil {
		in, out := &in.ServicePrincipalKey, &out.ServicePrincipalKey
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountKey != nil {
		in, out := &in.StorageAccountKey, &out.StorageAccountKey
		*out = new(string)
		**out = **in
	}
	if in.Tenant != nil {
		in, out := &in.Tenant, &out.Tenant
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	if in.UseManagedIdentity != nil {
		in, out := &in.UseManagedIdentity, &out.UseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceDataLakeStorageGen2SpecResource.
func (in *FactoryLinkedServiceDataLakeStorageGen2SpecResource) DeepCopy() *FactoryLinkedServiceDataLakeStorageGen2SpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceDataLakeStorageGen2SpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceDataLakeStorageGen2Status) DeepCopyInto(out *FactoryLinkedServiceDataLakeStorageGen2Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceDataLakeStorageGen2Status.
func (in *FactoryLinkedServiceDataLakeStorageGen2Status) DeepCopy() *FactoryLinkedServiceDataLakeStorageGen2Status {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceDataLakeStorageGen2Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceKeyVault) DeepCopyInto(out *FactoryLinkedServiceKeyVault) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceKeyVault.
func (in *FactoryLinkedServiceKeyVault) DeepCopy() *FactoryLinkedServiceKeyVault {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceKeyVault)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceKeyVault) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceKeyVaultList) DeepCopyInto(out *FactoryLinkedServiceKeyVaultList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceKeyVault, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceKeyVaultList.
func (in *FactoryLinkedServiceKeyVaultList) DeepCopy() *FactoryLinkedServiceKeyVaultList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceKeyVaultList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceKeyVaultList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceKeyVaultSpec) DeepCopyInto(out *FactoryLinkedServiceKeyVaultSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceKeyVaultSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceKeyVaultSpec.
func (in *FactoryLinkedServiceKeyVaultSpec) DeepCopy() *FactoryLinkedServiceKeyVaultSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceKeyVaultSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceKeyVaultSpecResource) DeepCopyInto(out *FactoryLinkedServiceKeyVaultSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceKeyVaultSpecResource.
func (in *FactoryLinkedServiceKeyVaultSpecResource) DeepCopy() *FactoryLinkedServiceKeyVaultSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceKeyVaultSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceKeyVaultStatus) DeepCopyInto(out *FactoryLinkedServiceKeyVaultStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceKeyVaultStatus.
func (in *FactoryLinkedServiceKeyVaultStatus) DeepCopy() *FactoryLinkedServiceKeyVaultStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceKeyVaultStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceKusto) DeepCopyInto(out *FactoryLinkedServiceKusto) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceKusto.
func (in *FactoryLinkedServiceKusto) DeepCopy() *FactoryLinkedServiceKusto {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceKusto)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceKusto) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceKustoList) DeepCopyInto(out *FactoryLinkedServiceKustoList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceKusto, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceKustoList.
func (in *FactoryLinkedServiceKustoList) DeepCopy() *FactoryLinkedServiceKustoList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceKustoList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceKustoList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceKustoSpec) DeepCopyInto(out *FactoryLinkedServiceKustoSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceKustoSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceKustoSpec.
func (in *FactoryLinkedServiceKustoSpec) DeepCopy() *FactoryLinkedServiceKustoSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceKustoSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceKustoSpecResource) DeepCopyInto(out *FactoryLinkedServiceKustoSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.KustoDatabaseName != nil {
		in, out := &in.KustoDatabaseName, &out.KustoDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.KustoEndpoint != nil {
		in, out := &in.KustoEndpoint, &out.KustoEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ServicePrincipalID != nil {
		in, out := &in.ServicePrincipalID, &out.ServicePrincipalID
		*out = new(string)
		**out = **in
	}
	if in.ServicePrincipalKey != nil {
		in, out := &in.ServicePrincipalKey, &out.ServicePrincipalKey
		*out = new(string)
		**out = **in
	}
	if in.Tenant != nil {
		in, out := &in.Tenant, &out.Tenant
		*out = new(string)
		**out = **in
	}
	if in.UseManagedIdentity != nil {
		in, out := &in.UseManagedIdentity, &out.UseManagedIdentity
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceKustoSpecResource.
func (in *FactoryLinkedServiceKustoSpecResource) DeepCopy() *FactoryLinkedServiceKustoSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceKustoSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceKustoStatus) DeepCopyInto(out *FactoryLinkedServiceKustoStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceKustoStatus.
func (in *FactoryLinkedServiceKustoStatus) DeepCopy() *FactoryLinkedServiceKustoStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceKustoStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceMysql) DeepCopyInto(out *FactoryLinkedServiceMysql) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceMysql.
func (in *FactoryLinkedServiceMysql) DeepCopy() *FactoryLinkedServiceMysql {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceMysql)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceMysql) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceMysqlList) DeepCopyInto(out *FactoryLinkedServiceMysqlList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceMysql, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceMysqlList.
func (in *FactoryLinkedServiceMysqlList) DeepCopy() *FactoryLinkedServiceMysqlList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceMysqlList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceMysqlList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceMysqlSpec) DeepCopyInto(out *FactoryLinkedServiceMysqlSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceMysqlSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceMysqlSpec.
func (in *FactoryLinkedServiceMysqlSpec) DeepCopy() *FactoryLinkedServiceMysqlSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceMysqlSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceMysqlSpecResource) DeepCopyInto(out *FactoryLinkedServiceMysqlSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceMysqlSpecResource.
func (in *FactoryLinkedServiceMysqlSpecResource) DeepCopy() *FactoryLinkedServiceMysqlSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceMysqlSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceMysqlStatus) DeepCopyInto(out *FactoryLinkedServiceMysqlStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceMysqlStatus.
func (in *FactoryLinkedServiceMysqlStatus) DeepCopy() *FactoryLinkedServiceMysqlStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceMysqlStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceOdata) DeepCopyInto(out *FactoryLinkedServiceOdata) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceOdata.
func (in *FactoryLinkedServiceOdata) DeepCopy() *FactoryLinkedServiceOdata {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceOdata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceOdata) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceOdataList) DeepCopyInto(out *FactoryLinkedServiceOdataList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceOdata, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceOdataList.
func (in *FactoryLinkedServiceOdataList) DeepCopy() *FactoryLinkedServiceOdataList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceOdataList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceOdataList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceOdataSpec) DeepCopyInto(out *FactoryLinkedServiceOdataSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceOdataSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceOdataSpec.
func (in *FactoryLinkedServiceOdataSpec) DeepCopy() *FactoryLinkedServiceOdataSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceOdataSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceOdataSpecBasicAuthentication) DeepCopyInto(out *FactoryLinkedServiceOdataSpecBasicAuthentication) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceOdataSpecBasicAuthentication.
func (in *FactoryLinkedServiceOdataSpecBasicAuthentication) DeepCopy() *FactoryLinkedServiceOdataSpecBasicAuthentication {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceOdataSpecBasicAuthentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceOdataSpecResource) DeepCopyInto(out *FactoryLinkedServiceOdataSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BasicAuthentication != nil {
		in, out := &in.BasicAuthentication, &out.BasicAuthentication
		*out = new(FactoryLinkedServiceOdataSpecBasicAuthentication)
		(*in).DeepCopyInto(*out)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceOdataSpecResource.
func (in *FactoryLinkedServiceOdataSpecResource) DeepCopy() *FactoryLinkedServiceOdataSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceOdataSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceOdataStatus) DeepCopyInto(out *FactoryLinkedServiceOdataStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceOdataStatus.
func (in *FactoryLinkedServiceOdataStatus) DeepCopy() *FactoryLinkedServiceOdataStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceOdataStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServicePostgresql) DeepCopyInto(out *FactoryLinkedServicePostgresql) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServicePostgresql.
func (in *FactoryLinkedServicePostgresql) DeepCopy() *FactoryLinkedServicePostgresql {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServicePostgresql)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServicePostgresql) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServicePostgresqlList) DeepCopyInto(out *FactoryLinkedServicePostgresqlList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServicePostgresql, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServicePostgresqlList.
func (in *FactoryLinkedServicePostgresqlList) DeepCopy() *FactoryLinkedServicePostgresqlList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServicePostgresqlList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServicePostgresqlList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServicePostgresqlSpec) DeepCopyInto(out *FactoryLinkedServicePostgresqlSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServicePostgresqlSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServicePostgresqlSpec.
func (in *FactoryLinkedServicePostgresqlSpec) DeepCopy() *FactoryLinkedServicePostgresqlSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServicePostgresqlSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServicePostgresqlSpecResource) DeepCopyInto(out *FactoryLinkedServicePostgresqlSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServicePostgresqlSpecResource.
func (in *FactoryLinkedServicePostgresqlSpecResource) DeepCopy() *FactoryLinkedServicePostgresqlSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServicePostgresqlSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServicePostgresqlStatus) DeepCopyInto(out *FactoryLinkedServicePostgresqlStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServicePostgresqlStatus.
func (in *FactoryLinkedServicePostgresqlStatus) DeepCopy() *FactoryLinkedServicePostgresqlStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServicePostgresqlStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSQLServer) DeepCopyInto(out *FactoryLinkedServiceSQLServer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSQLServer.
func (in *FactoryLinkedServiceSQLServer) DeepCopy() *FactoryLinkedServiceSQLServer {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSQLServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceSQLServer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSQLServerList) DeepCopyInto(out *FactoryLinkedServiceSQLServerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceSQLServer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSQLServerList.
func (in *FactoryLinkedServiceSQLServerList) DeepCopy() *FactoryLinkedServiceSQLServerList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSQLServerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceSQLServerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSQLServerSpec) DeepCopyInto(out *FactoryLinkedServiceSQLServerSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceSQLServerSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSQLServerSpec.
func (in *FactoryLinkedServiceSQLServerSpec) DeepCopy() *FactoryLinkedServiceSQLServerSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSQLServerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSQLServerSpecKeyVaultConnectionString) DeepCopyInto(out *FactoryLinkedServiceSQLServerSpecKeyVaultConnectionString) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSQLServerSpecKeyVaultConnectionString.
func (in *FactoryLinkedServiceSQLServerSpecKeyVaultConnectionString) DeepCopy() *FactoryLinkedServiceSQLServerSpecKeyVaultConnectionString {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSQLServerSpecKeyVaultConnectionString)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSQLServerSpecKeyVaultPassword) DeepCopyInto(out *FactoryLinkedServiceSQLServerSpecKeyVaultPassword) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSQLServerSpecKeyVaultPassword.
func (in *FactoryLinkedServiceSQLServerSpecKeyVaultPassword) DeepCopy() *FactoryLinkedServiceSQLServerSpecKeyVaultPassword {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSQLServerSpecKeyVaultPassword)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSQLServerSpecResource) DeepCopyInto(out *FactoryLinkedServiceSQLServerSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultConnectionString != nil {
		in, out := &in.KeyVaultConnectionString, &out.KeyVaultConnectionString
		*out = new(FactoryLinkedServiceSQLServerSpecKeyVaultConnectionString)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyVaultPassword != nil {
		in, out := &in.KeyVaultPassword, &out.KeyVaultPassword
		*out = new(FactoryLinkedServiceSQLServerSpecKeyVaultPassword)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSQLServerSpecResource.
func (in *FactoryLinkedServiceSQLServerSpecResource) DeepCopy() *FactoryLinkedServiceSQLServerSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSQLServerSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSQLServerStatus) DeepCopyInto(out *FactoryLinkedServiceSQLServerStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSQLServerStatus.
func (in *FactoryLinkedServiceSQLServerStatus) DeepCopy() *FactoryLinkedServiceSQLServerStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSQLServerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSftp) DeepCopyInto(out *FactoryLinkedServiceSftp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSftp.
func (in *FactoryLinkedServiceSftp) DeepCopy() *FactoryLinkedServiceSftp {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSftp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceSftp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSftpList) DeepCopyInto(out *FactoryLinkedServiceSftpList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceSftp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSftpList.
func (in *FactoryLinkedServiceSftpList) DeepCopy() *FactoryLinkedServiceSftpList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSftpList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceSftpList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSftpSpec) DeepCopyInto(out *FactoryLinkedServiceSftpSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceSftpSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSftpSpec.
func (in *FactoryLinkedServiceSftpSpec) DeepCopy() *FactoryLinkedServiceSftpSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSftpSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSftpSpecResource) DeepCopyInto(out *FactoryLinkedServiceSftpSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.HostKeyFingerprint != nil {
		in, out := &in.HostKeyFingerprint, &out.HostKeyFingerprint
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SkipHostKeyValidation != nil {
		in, out := &in.SkipHostKeyValidation, &out.SkipHostKeyValidation
		*out = new(bool)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSftpSpecResource.
func (in *FactoryLinkedServiceSftpSpecResource) DeepCopy() *FactoryLinkedServiceSftpSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSftpSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSftpStatus) DeepCopyInto(out *FactoryLinkedServiceSftpStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSftpStatus.
func (in *FactoryLinkedServiceSftpStatus) DeepCopy() *FactoryLinkedServiceSftpStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSftpStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSnowflake) DeepCopyInto(out *FactoryLinkedServiceSnowflake) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSnowflake.
func (in *FactoryLinkedServiceSnowflake) DeepCopy() *FactoryLinkedServiceSnowflake {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSnowflake)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceSnowflake) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSnowflakeList) DeepCopyInto(out *FactoryLinkedServiceSnowflakeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceSnowflake, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSnowflakeList.
func (in *FactoryLinkedServiceSnowflakeList) DeepCopy() *FactoryLinkedServiceSnowflakeList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSnowflakeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceSnowflakeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSnowflakeSpec) DeepCopyInto(out *FactoryLinkedServiceSnowflakeSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceSnowflakeSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSnowflakeSpec.
func (in *FactoryLinkedServiceSnowflakeSpec) DeepCopy() *FactoryLinkedServiceSnowflakeSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSnowflakeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSnowflakeSpecKeyVaultPassword) DeepCopyInto(out *FactoryLinkedServiceSnowflakeSpecKeyVaultPassword) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSnowflakeSpecKeyVaultPassword.
func (in *FactoryLinkedServiceSnowflakeSpecKeyVaultPassword) DeepCopy() *FactoryLinkedServiceSnowflakeSpecKeyVaultPassword {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSnowflakeSpecKeyVaultPassword)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSnowflakeSpecResource) DeepCopyInto(out *FactoryLinkedServiceSnowflakeSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultPassword != nil {
		in, out := &in.KeyVaultPassword, &out.KeyVaultPassword
		*out = new(FactoryLinkedServiceSnowflakeSpecKeyVaultPassword)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSnowflakeSpecResource.
func (in *FactoryLinkedServiceSnowflakeSpecResource) DeepCopy() *FactoryLinkedServiceSnowflakeSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSnowflakeSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSnowflakeStatus) DeepCopyInto(out *FactoryLinkedServiceSnowflakeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSnowflakeStatus.
func (in *FactoryLinkedServiceSnowflakeStatus) DeepCopy() *FactoryLinkedServiceSnowflakeStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSnowflakeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSynapse) DeepCopyInto(out *FactoryLinkedServiceSynapse) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSynapse.
func (in *FactoryLinkedServiceSynapse) DeepCopy() *FactoryLinkedServiceSynapse {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSynapse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceSynapse) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSynapseList) DeepCopyInto(out *FactoryLinkedServiceSynapseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceSynapse, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSynapseList.
func (in *FactoryLinkedServiceSynapseList) DeepCopy() *FactoryLinkedServiceSynapseList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSynapseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceSynapseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSynapseSpec) DeepCopyInto(out *FactoryLinkedServiceSynapseSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceSynapseSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSynapseSpec.
func (in *FactoryLinkedServiceSynapseSpec) DeepCopy() *FactoryLinkedServiceSynapseSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSynapseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSynapseSpecKeyVaultPassword) DeepCopyInto(out *FactoryLinkedServiceSynapseSpecKeyVaultPassword) {
	*out = *in
	if in.LinkedServiceName != nil {
		in, out := &in.LinkedServiceName, &out.LinkedServiceName
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSynapseSpecKeyVaultPassword.
func (in *FactoryLinkedServiceSynapseSpecKeyVaultPassword) DeepCopy() *FactoryLinkedServiceSynapseSpecKeyVaultPassword {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSynapseSpecKeyVaultPassword)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSynapseSpecResource) DeepCopyInto(out *FactoryLinkedServiceSynapseSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultPassword != nil {
		in, out := &in.KeyVaultPassword, &out.KeyVaultPassword
		*out = new(FactoryLinkedServiceSynapseSpecKeyVaultPassword)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSynapseSpecResource.
func (in *FactoryLinkedServiceSynapseSpecResource) DeepCopy() *FactoryLinkedServiceSynapseSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSynapseSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceSynapseStatus) DeepCopyInto(out *FactoryLinkedServiceSynapseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceSynapseStatus.
func (in *FactoryLinkedServiceSynapseStatus) DeepCopy() *FactoryLinkedServiceSynapseStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceSynapseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceWeb) DeepCopyInto(out *FactoryLinkedServiceWeb) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceWeb.
func (in *FactoryLinkedServiceWeb) DeepCopy() *FactoryLinkedServiceWeb {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceWeb)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceWeb) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceWebList) DeepCopyInto(out *FactoryLinkedServiceWebList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryLinkedServiceWeb, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceWebList.
func (in *FactoryLinkedServiceWebList) DeepCopy() *FactoryLinkedServiceWebList {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceWebList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryLinkedServiceWebList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceWebSpec) DeepCopyInto(out *FactoryLinkedServiceWebSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryLinkedServiceWebSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceWebSpec.
func (in *FactoryLinkedServiceWebSpec) DeepCopy() *FactoryLinkedServiceWebSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceWebSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceWebSpecResource) DeepCopyInto(out *FactoryLinkedServiceWebSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationRuntimeName != nil {
		in, out := &in.IntegrationRuntimeName, &out.IntegrationRuntimeName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceWebSpecResource.
func (in *FactoryLinkedServiceWebSpecResource) DeepCopy() *FactoryLinkedServiceWebSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceWebSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryLinkedServiceWebStatus) DeepCopyInto(out *FactoryLinkedServiceWebStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryLinkedServiceWebStatus.
func (in *FactoryLinkedServiceWebStatus) DeepCopy() *FactoryLinkedServiceWebStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryLinkedServiceWebStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryList) DeepCopyInto(out *FactoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Factory, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryList.
func (in *FactoryList) DeepCopy() *FactoryList {
	if in == nil {
		return nil
	}
	out := new(FactoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryPipeline) DeepCopyInto(out *FactoryPipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryPipeline.
func (in *FactoryPipeline) DeepCopy() *FactoryPipeline {
	if in == nil {
		return nil
	}
	out := new(FactoryPipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryPipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryPipelineList) DeepCopyInto(out *FactoryPipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryPipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryPipelineList.
func (in *FactoryPipelineList) DeepCopy() *FactoryPipelineList {
	if in == nil {
		return nil
	}
	out := new(FactoryPipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryPipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryPipelineSpec) DeepCopyInto(out *FactoryPipelineSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryPipelineSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryPipelineSpec.
func (in *FactoryPipelineSpec) DeepCopy() *FactoryPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryPipelineSpecResource) DeepCopyInto(out *FactoryPipelineSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ActivitiesJSON != nil {
		in, out := &in.ActivitiesJSON, &out.ActivitiesJSON
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryPipelineSpecResource.
func (in *FactoryPipelineSpecResource) DeepCopy() *FactoryPipelineSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryPipelineSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryPipelineStatus) DeepCopyInto(out *FactoryPipelineStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryPipelineStatus.
func (in *FactoryPipelineStatus) DeepCopy() *FactoryPipelineStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryPipelineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactorySpec) DeepCopyInto(out *FactorySpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactorySpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactorySpec.
func (in *FactorySpec) DeepCopy() *FactorySpec {
	if in == nil {
		return nil
	}
	out := new(FactorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactorySpecGithubConfiguration) DeepCopyInto(out *FactorySpecGithubConfiguration) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.BranchName != nil {
		in, out := &in.BranchName, &out.BranchName
		*out = new(string)
		**out = **in
	}
	if in.GitURL != nil {
		in, out := &in.GitURL, &out.GitURL
		*out = new(string)
		**out = **in
	}
	if in.RepositoryName != nil {
		in, out := &in.RepositoryName, &out.RepositoryName
		*out = new(string)
		**out = **in
	}
	if in.RootFolder != nil {
		in, out := &in.RootFolder, &out.RootFolder
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactorySpecGithubConfiguration.
func (in *FactorySpecGithubConfiguration) DeepCopy() *FactorySpecGithubConfiguration {
	if in == nil {
		return nil
	}
	out := new(FactorySpecGithubConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactorySpecGlobalParameter) DeepCopyInto(out *FactorySpecGlobalParameter) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactorySpecGlobalParameter.
func (in *FactorySpecGlobalParameter) DeepCopy() *FactorySpecGlobalParameter {
	if in == nil {
		return nil
	}
	out := new(FactorySpecGlobalParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactorySpecIdentity) DeepCopyInto(out *FactorySpecIdentity) {
	*out = *in
	if in.IdentityIDS != nil {
		in, out := &in.IdentityIDS, &out.IdentityIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactorySpecIdentity.
func (in *FactorySpecIdentity) DeepCopy() *FactorySpecIdentity {
	if in == nil {
		return nil
	}
	out := new(FactorySpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactorySpecResource) DeepCopyInto(out *FactorySpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomerManagedKeyID != nil {
		in, out := &in.CustomerManagedKeyID, &out.CustomerManagedKeyID
		*out = new(string)
		**out = **in
	}
	if in.GithubConfiguration != nil {
		in, out := &in.GithubConfiguration, &out.GithubConfiguration
		*out = new(FactorySpecGithubConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.GlobalParameter != nil {
		in, out := &in.GlobalParameter, &out.GlobalParameter
		*out = make([]FactorySpecGlobalParameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(FactorySpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkEnabled != nil {
		in, out := &in.PublicNetworkEnabled, &out.PublicNetworkEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.VstsConfiguration != nil {
		in, out := &in.VstsConfiguration, &out.VstsConfiguration
		*out = new(FactorySpecVstsConfiguration)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactorySpecResource.
func (in *FactorySpecResource) DeepCopy() *FactorySpecResource {
	if in == nil {
		return nil
	}
	out := new(FactorySpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactorySpecVstsConfiguration) DeepCopyInto(out *FactorySpecVstsConfiguration) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.BranchName != nil {
		in, out := &in.BranchName, &out.BranchName
		*out = new(string)
		**out = **in
	}
	if in.ProjectName != nil {
		in, out := &in.ProjectName, &out.ProjectName
		*out = new(string)
		**out = **in
	}
	if in.RepositoryName != nil {
		in, out := &in.RepositoryName, &out.RepositoryName
		*out = new(string)
		**out = **in
	}
	if in.RootFolder != nil {
		in, out := &in.RootFolder, &out.RootFolder
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactorySpecVstsConfiguration.
func (in *FactorySpecVstsConfiguration) DeepCopy() *FactorySpecVstsConfiguration {
	if in == nil {
		return nil
	}
	out := new(FactorySpecVstsConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryStatus) DeepCopyInto(out *FactoryStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryStatus.
func (in *FactoryStatus) DeepCopy() *FactoryStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryTriggerBlobEvent) DeepCopyInto(out *FactoryTriggerBlobEvent) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryTriggerBlobEvent.
func (in *FactoryTriggerBlobEvent) DeepCopy() *FactoryTriggerBlobEvent {
	if in == nil {
		return nil
	}
	out := new(FactoryTriggerBlobEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryTriggerBlobEvent) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryTriggerBlobEventList) DeepCopyInto(out *FactoryTriggerBlobEventList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryTriggerBlobEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryTriggerBlobEventList.
func (in *FactoryTriggerBlobEventList) DeepCopy() *FactoryTriggerBlobEventList {
	if in == nil {
		return nil
	}
	out := new(FactoryTriggerBlobEventList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryTriggerBlobEventList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryTriggerBlobEventSpec) DeepCopyInto(out *FactoryTriggerBlobEventSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryTriggerBlobEventSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryTriggerBlobEventSpec.
func (in *FactoryTriggerBlobEventSpec) DeepCopy() *FactoryTriggerBlobEventSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryTriggerBlobEventSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryTriggerBlobEventSpecPipeline) DeepCopyInto(out *FactoryTriggerBlobEventSpecPipeline) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryTriggerBlobEventSpecPipeline.
func (in *FactoryTriggerBlobEventSpecPipeline) DeepCopy() *FactoryTriggerBlobEventSpecPipeline {
	if in == nil {
		return nil
	}
	out := new(FactoryTriggerBlobEventSpecPipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryTriggerBlobEventSpecResource) DeepCopyInto(out *FactoryTriggerBlobEventSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalProperties != nil {
		in, out := &in.AdditionalProperties, &out.AdditionalProperties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BlobPathBeginsWith != nil {
		in, out := &in.BlobPathBeginsWith, &out.BlobPathBeginsWith
		*out = new(string)
		**out = **in
	}
	if in.BlobPathEndsWith != nil {
		in, out := &in.BlobPathEndsWith, &out.BlobPathEndsWith
		*out = new(string)
		**out = **in
	}
	if in.DataFactoryID != nil {
		in, out := &in.DataFactoryID, &out.DataFactoryID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IgnoreEmptyBlobs != nil {
		in, out := &in.IgnoreEmptyBlobs, &out.IgnoreEmptyBlobs
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = make([]FactoryTriggerBlobEventSpecPipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryTriggerBlobEventSpecResource.
func (in *FactoryTriggerBlobEventSpecResource) DeepCopy() *FactoryTriggerBlobEventSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryTriggerBlobEventSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryTriggerBlobEventStatus) DeepCopyInto(out *FactoryTriggerBlobEventStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryTriggerBlobEventStatus.
func (in *FactoryTriggerBlobEventStatus) DeepCopy() *FactoryTriggerBlobEventStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryTriggerBlobEventStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryTriggerSchedule) DeepCopyInto(out *FactoryTriggerSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryTriggerSchedule.
func (in *FactoryTriggerSchedule) DeepCopy() *FactoryTriggerSchedule {
	if in == nil {
		return nil
	}
	out := new(FactoryTriggerSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryTriggerSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryTriggerScheduleList) DeepCopyInto(out *FactoryTriggerScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FactoryTriggerSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryTriggerScheduleList.
func (in *FactoryTriggerScheduleList) DeepCopy() *FactoryTriggerScheduleList {
	if in == nil {
		return nil
	}
	out := new(FactoryTriggerScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FactoryTriggerScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryTriggerScheduleSpec) DeepCopyInto(out *FactoryTriggerScheduleSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(FactoryTriggerScheduleSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryTriggerScheduleSpec.
func (in *FactoryTriggerScheduleSpec) DeepCopy() *FactoryTriggerScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(FactoryTriggerScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryTriggerScheduleSpecResource) DeepCopyInto(out *FactoryTriggerScheduleSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DataFactoryName != nil {
		in, out := &in.DataFactoryName, &out.DataFactoryName
		*out = new(string)
		**out = **in
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PipelineName != nil {
		in, out := &in.PipelineName, &out.PipelineName
		*out = new(string)
		**out = **in
	}
	if in.PipelineParameters != nil {
		in, out := &in.PipelineParameters, &out.PipelineParameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryTriggerScheduleSpecResource.
func (in *FactoryTriggerScheduleSpecResource) DeepCopy() *FactoryTriggerScheduleSpecResource {
	if in == nil {
		return nil
	}
	out := new(FactoryTriggerScheduleSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FactoryTriggerScheduleStatus) DeepCopyInto(out *FactoryTriggerScheduleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FactoryTriggerScheduleStatus.
func (in *FactoryTriggerScheduleStatus) DeepCopy() *FactoryTriggerScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(FactoryTriggerScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeAnalyticsAccount) DeepCopyInto(out *LakeAnalyticsAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeAnalyticsAccount.
func (in *LakeAnalyticsAccount) DeepCopy() *LakeAnalyticsAccount {
	if in == nil {
		return nil
	}
	out := new(LakeAnalyticsAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeAnalyticsAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeAnalyticsAccountList) DeepCopyInto(out *LakeAnalyticsAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LakeAnalyticsAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeAnalyticsAccountList.
func (in *LakeAnalyticsAccountList) DeepCopy() *LakeAnalyticsAccountList {
	if in == nil {
		return nil
	}
	out := new(LakeAnalyticsAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeAnalyticsAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeAnalyticsAccountSpec) DeepCopyInto(out *LakeAnalyticsAccountSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LakeAnalyticsAccountSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeAnalyticsAccountSpec.
func (in *LakeAnalyticsAccountSpec) DeepCopy() *LakeAnalyticsAccountSpec {
	if in == nil {
		return nil
	}
	out := new(LakeAnalyticsAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeAnalyticsAccountSpecResource) DeepCopyInto(out *LakeAnalyticsAccountSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultStoreAccountName != nil {
		in, out := &in.DefaultStoreAccountName, &out.DefaultStoreAccountName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeAnalyticsAccountSpecResource.
func (in *LakeAnalyticsAccountSpecResource) DeepCopy() *LakeAnalyticsAccountSpecResource {
	if in == nil {
		return nil
	}
	out := new(LakeAnalyticsAccountSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeAnalyticsAccountStatus) DeepCopyInto(out *LakeAnalyticsAccountStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeAnalyticsAccountStatus.
func (in *LakeAnalyticsAccountStatus) DeepCopy() *LakeAnalyticsAccountStatus {
	if in == nil {
		return nil
	}
	out := new(LakeAnalyticsAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeAnalyticsFirewallRule) DeepCopyInto(out *LakeAnalyticsFirewallRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeAnalyticsFirewallRule.
func (in *LakeAnalyticsFirewallRule) DeepCopy() *LakeAnalyticsFirewallRule {
	if in == nil {
		return nil
	}
	out := new(LakeAnalyticsFirewallRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeAnalyticsFirewallRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeAnalyticsFirewallRuleList) DeepCopyInto(out *LakeAnalyticsFirewallRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LakeAnalyticsFirewallRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeAnalyticsFirewallRuleList.
func (in *LakeAnalyticsFirewallRuleList) DeepCopy() *LakeAnalyticsFirewallRuleList {
	if in == nil {
		return nil
	}
	out := new(LakeAnalyticsFirewallRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeAnalyticsFirewallRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeAnalyticsFirewallRuleSpec) DeepCopyInto(out *LakeAnalyticsFirewallRuleSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LakeAnalyticsFirewallRuleSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeAnalyticsFirewallRuleSpec.
func (in *LakeAnalyticsFirewallRuleSpec) DeepCopy() *LakeAnalyticsFirewallRuleSpec {
	if in == nil {
		return nil
	}
	out := new(LakeAnalyticsFirewallRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeAnalyticsFirewallRuleSpecResource) DeepCopyInto(out *LakeAnalyticsFirewallRuleSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.EndIPAddress != nil {
		in, out := &in.EndIPAddress, &out.EndIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.StartIPAddress != nil {
		in, out := &in.StartIPAddress, &out.StartIPAddress
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeAnalyticsFirewallRuleSpecResource.
func (in *LakeAnalyticsFirewallRuleSpecResource) DeepCopy() *LakeAnalyticsFirewallRuleSpecResource {
	if in == nil {
		return nil
	}
	out := new(LakeAnalyticsFirewallRuleSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeAnalyticsFirewallRuleStatus) DeepCopyInto(out *LakeAnalyticsFirewallRuleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeAnalyticsFirewallRuleStatus.
func (in *LakeAnalyticsFirewallRuleStatus) DeepCopy() *LakeAnalyticsFirewallRuleStatus {
	if in == nil {
		return nil
	}
	out := new(LakeAnalyticsFirewallRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStore) DeepCopyInto(out *LakeStore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStore.
func (in *LakeStore) DeepCopy() *LakeStore {
	if in == nil {
		return nil
	}
	out := new(LakeStore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeStore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreFile) DeepCopyInto(out *LakeStoreFile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreFile.
func (in *LakeStoreFile) DeepCopy() *LakeStoreFile {
	if in == nil {
		return nil
	}
	out := new(LakeStoreFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeStoreFile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreFileList) DeepCopyInto(out *LakeStoreFileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LakeStoreFile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreFileList.
func (in *LakeStoreFileList) DeepCopy() *LakeStoreFileList {
	if in == nil {
		return nil
	}
	out := new(LakeStoreFileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeStoreFileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreFileSpec) DeepCopyInto(out *LakeStoreFileSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LakeStoreFileSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreFileSpec.
func (in *LakeStoreFileSpec) DeepCopy() *LakeStoreFileSpec {
	if in == nil {
		return nil
	}
	out := new(LakeStoreFileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreFileSpecResource) DeepCopyInto(out *LakeStoreFileSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.LocalFilePath != nil {
		in, out := &in.LocalFilePath, &out.LocalFilePath
		*out = new(string)
		**out = **in
	}
	if in.RemoteFilePath != nil {
		in, out := &in.RemoteFilePath, &out.RemoteFilePath
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreFileSpecResource.
func (in *LakeStoreFileSpecResource) DeepCopy() *LakeStoreFileSpecResource {
	if in == nil {
		return nil
	}
	out := new(LakeStoreFileSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreFileStatus) DeepCopyInto(out *LakeStoreFileStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreFileStatus.
func (in *LakeStoreFileStatus) DeepCopy() *LakeStoreFileStatus {
	if in == nil {
		return nil
	}
	out := new(LakeStoreFileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreFirewallRule) DeepCopyInto(out *LakeStoreFirewallRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreFirewallRule.
func (in *LakeStoreFirewallRule) DeepCopy() *LakeStoreFirewallRule {
	if in == nil {
		return nil
	}
	out := new(LakeStoreFirewallRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeStoreFirewallRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreFirewallRuleList) DeepCopyInto(out *LakeStoreFirewallRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LakeStoreFirewallRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreFirewallRuleList.
func (in *LakeStoreFirewallRuleList) DeepCopy() *LakeStoreFirewallRuleList {
	if in == nil {
		return nil
	}
	out := new(LakeStoreFirewallRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeStoreFirewallRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreFirewallRuleSpec) DeepCopyInto(out *LakeStoreFirewallRuleSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LakeStoreFirewallRuleSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreFirewallRuleSpec.
func (in *LakeStoreFirewallRuleSpec) DeepCopy() *LakeStoreFirewallRuleSpec {
	if in == nil {
		return nil
	}
	out := new(LakeStoreFirewallRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreFirewallRuleSpecResource) DeepCopyInto(out *LakeStoreFirewallRuleSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.EndIPAddress != nil {
		in, out := &in.EndIPAddress, &out.EndIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.StartIPAddress != nil {
		in, out := &in.StartIPAddress, &out.StartIPAddress
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreFirewallRuleSpecResource.
func (in *LakeStoreFirewallRuleSpecResource) DeepCopy() *LakeStoreFirewallRuleSpecResource {
	if in == nil {
		return nil
	}
	out := new(LakeStoreFirewallRuleSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreFirewallRuleStatus) DeepCopyInto(out *LakeStoreFirewallRuleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreFirewallRuleStatus.
func (in *LakeStoreFirewallRuleStatus) DeepCopy() *LakeStoreFirewallRuleStatus {
	if in == nil {
		return nil
	}
	out := new(LakeStoreFirewallRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreList) DeepCopyInto(out *LakeStoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LakeStore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreList.
func (in *LakeStoreList) DeepCopy() *LakeStoreList {
	if in == nil {
		return nil
	}
	out := new(LakeStoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeStoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreSpec) DeepCopyInto(out *LakeStoreSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LakeStoreSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreSpec.
func (in *LakeStoreSpec) DeepCopy() *LakeStoreSpec {
	if in == nil {
		return nil
	}
	out := new(LakeStoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreSpecResource) DeepCopyInto(out *LakeStoreSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.EncryptionState != nil {
		in, out := &in.EncryptionState, &out.EncryptionState
		*out = new(string)
		**out = **in
	}
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.FirewallAllowAzureIPS != nil {
		in, out := &in.FirewallAllowAzureIPS, &out.FirewallAllowAzureIPS
		*out = new(string)
		**out = **in
	}
	if in.FirewallState != nil {
		in, out := &in.FirewallState, &out.FirewallState
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreSpecResource.
func (in *LakeStoreSpecResource) DeepCopy() *LakeStoreSpecResource {
	if in == nil {
		return nil
	}
	out := new(LakeStoreSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreStatus) DeepCopyInto(out *LakeStoreStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreStatus.
func (in *LakeStoreStatus) DeepCopy() *LakeStoreStatus {
	if in == nil {
		return nil
	}
	out := new(LakeStoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreVirtualNetworkRule) DeepCopyInto(out *LakeStoreVirtualNetworkRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreVirtualNetworkRule.
func (in *LakeStoreVirtualNetworkRule) DeepCopy() *LakeStoreVirtualNetworkRule {
	if in == nil {
		return nil
	}
	out := new(LakeStoreVirtualNetworkRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeStoreVirtualNetworkRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreVirtualNetworkRuleList) DeepCopyInto(out *LakeStoreVirtualNetworkRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LakeStoreVirtualNetworkRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreVirtualNetworkRuleList.
func (in *LakeStoreVirtualNetworkRuleList) DeepCopy() *LakeStoreVirtualNetworkRuleList {
	if in == nil {
		return nil
	}
	out := new(LakeStoreVirtualNetworkRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeStoreVirtualNetworkRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreVirtualNetworkRuleSpec) DeepCopyInto(out *LakeStoreVirtualNetworkRuleSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LakeStoreVirtualNetworkRuleSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreVirtualNetworkRuleSpec.
func (in *LakeStoreVirtualNetworkRuleSpec) DeepCopy() *LakeStoreVirtualNetworkRuleSpec {
	if in == nil {
		return nil
	}
	out := new(LakeStoreVirtualNetworkRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreVirtualNetworkRuleSpecResource) DeepCopyInto(out *LakeStoreVirtualNetworkRuleSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreVirtualNetworkRuleSpecResource.
func (in *LakeStoreVirtualNetworkRuleSpecResource) DeepCopy() *LakeStoreVirtualNetworkRuleSpecResource {
	if in == nil {
		return nil
	}
	out := new(LakeStoreVirtualNetworkRuleSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeStoreVirtualNetworkRuleStatus) DeepCopyInto(out *LakeStoreVirtualNetworkRuleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeStoreVirtualNetworkRuleStatus.
func (in *LakeStoreVirtualNetworkRuleStatus) DeepCopy() *LakeStoreVirtualNetworkRuleStatus {
	if in == nil {
		return nil
	}
	out := new(LakeStoreVirtualNetworkRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupInstancePostgresql) DeepCopyInto(out *ProtectionBackupInstancePostgresql) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupInstancePostgresql.
func (in *ProtectionBackupInstancePostgresql) DeepCopy() *ProtectionBackupInstancePostgresql {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupInstancePostgresql)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProtectionBackupInstancePostgresql) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupInstancePostgresqlList) DeepCopyInto(out *ProtectionBackupInstancePostgresqlList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProtectionBackupInstancePostgresql, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupInstancePostgresqlList.
func (in *ProtectionBackupInstancePostgresqlList) DeepCopy() *ProtectionBackupInstancePostgresqlList {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupInstancePostgresqlList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProtectionBackupInstancePostgresqlList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupInstancePostgresqlSpec) DeepCopyInto(out *ProtectionBackupInstancePostgresqlSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ProtectionBackupInstancePostgresqlSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupInstancePostgresqlSpec.
func (in *ProtectionBackupInstancePostgresqlSpec) DeepCopy() *ProtectionBackupInstancePostgresqlSpec {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupInstancePostgresqlSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupInstancePostgresqlSpecResource) DeepCopyInto(out *ProtectionBackupInstancePostgresqlSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VaultID != nil {
		in, out := &in.VaultID, &out.VaultID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupInstancePostgresqlSpecResource.
func (in *ProtectionBackupInstancePostgresqlSpecResource) DeepCopy() *ProtectionBackupInstancePostgresqlSpecResource {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupInstancePostgresqlSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupInstancePostgresqlStatus) DeepCopyInto(out *ProtectionBackupInstancePostgresqlStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupInstancePostgresqlStatus.
func (in *ProtectionBackupInstancePostgresqlStatus) DeepCopy() *ProtectionBackupInstancePostgresqlStatus {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupInstancePostgresqlStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupPolicyPostgresql) DeepCopyInto(out *ProtectionBackupPolicyPostgresql) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupPolicyPostgresql.
func (in *ProtectionBackupPolicyPostgresql) DeepCopy() *ProtectionBackupPolicyPostgresql {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupPolicyPostgresql)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProtectionBackupPolicyPostgresql) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupPolicyPostgresqlList) DeepCopyInto(out *ProtectionBackupPolicyPostgresqlList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProtectionBackupPolicyPostgresql, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupPolicyPostgresqlList.
func (in *ProtectionBackupPolicyPostgresqlList) DeepCopy() *ProtectionBackupPolicyPostgresqlList {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupPolicyPostgresqlList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProtectionBackupPolicyPostgresqlList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupPolicyPostgresqlSpec) DeepCopyInto(out *ProtectionBackupPolicyPostgresqlSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ProtectionBackupPolicyPostgresqlSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupPolicyPostgresqlSpec.
func (in *ProtectionBackupPolicyPostgresqlSpec) DeepCopy() *ProtectionBackupPolicyPostgresqlSpec {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupPolicyPostgresqlSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupPolicyPostgresqlSpecResource) DeepCopyInto(out *ProtectionBackupPolicyPostgresqlSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.BackupRepeatingTimeIntervals != nil {
		in, out := &in.BackupRepeatingTimeIntervals, &out.BackupRepeatingTimeIntervals
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DefaultRetentionDuration != nil {
		in, out := &in.DefaultRetentionDuration, &out.DefaultRetentionDuration
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RetentionRule != nil {
		in, out := &in.RetentionRule, &out.RetentionRule
		*out = make([]ProtectionBackupPolicyPostgresqlSpecRetentionRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VaultName != nil {
		in, out := &in.VaultName, &out.VaultName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupPolicyPostgresqlSpecResource.
func (in *ProtectionBackupPolicyPostgresqlSpecResource) DeepCopy() *ProtectionBackupPolicyPostgresqlSpecResource {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupPolicyPostgresqlSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupPolicyPostgresqlSpecRetentionRule) DeepCopyInto(out *ProtectionBackupPolicyPostgresqlSpecRetentionRule) {
	*out = *in
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = new(ProtectionBackupPolicyPostgresqlSpecRetentionRuleCriteria)
		(*in).DeepCopyInto(*out)
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupPolicyPostgresqlSpecRetentionRule.
func (in *ProtectionBackupPolicyPostgresqlSpecRetentionRule) DeepCopy() *ProtectionBackupPolicyPostgresqlSpecRetentionRule {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupPolicyPostgresqlSpecRetentionRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupPolicyPostgresqlSpecRetentionRuleCriteria) DeepCopyInto(out *ProtectionBackupPolicyPostgresqlSpecRetentionRuleCriteria) {
	*out = *in
	if in.AbsoluteCriteria != nil {
		in, out := &in.AbsoluteCriteria, &out.AbsoluteCriteria
		*out = new(string)
		**out = **in
	}
	if in.DaysOfWeek != nil {
		in, out := &in.DaysOfWeek, &out.DaysOfWeek
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MonthsOfYear != nil {
		in, out := &in.MonthsOfYear, &out.MonthsOfYear
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ScheduledBackupTimes != nil {
		in, out := &in.ScheduledBackupTimes, &out.ScheduledBackupTimes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.WeeksOfMonth != nil {
		in, out := &in.WeeksOfMonth, &out.WeeksOfMonth
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupPolicyPostgresqlSpecRetentionRuleCriteria.
func (in *ProtectionBackupPolicyPostgresqlSpecRetentionRuleCriteria) DeepCopy() *ProtectionBackupPolicyPostgresqlSpecRetentionRuleCriteria {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupPolicyPostgresqlSpecRetentionRuleCriteria)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupPolicyPostgresqlStatus) DeepCopyInto(out *ProtectionBackupPolicyPostgresqlStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupPolicyPostgresqlStatus.
func (in *ProtectionBackupPolicyPostgresqlStatus) DeepCopy() *ProtectionBackupPolicyPostgresqlStatus {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupPolicyPostgresqlStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupVault) DeepCopyInto(out *ProtectionBackupVault) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupVault.
func (in *ProtectionBackupVault) DeepCopy() *ProtectionBackupVault {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupVault)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProtectionBackupVault) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupVaultList) DeepCopyInto(out *ProtectionBackupVaultList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProtectionBackupVault, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupVaultList.
func (in *ProtectionBackupVaultList) DeepCopy() *ProtectionBackupVaultList {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupVaultList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProtectionBackupVaultList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupVaultSpec) DeepCopyInto(out *ProtectionBackupVaultSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ProtectionBackupVaultSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupVaultSpec.
func (in *ProtectionBackupVaultSpec) DeepCopy() *ProtectionBackupVaultSpec {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupVaultSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupVaultSpecIdentity) DeepCopyInto(out *ProtectionBackupVaultSpecIdentity) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupVaultSpecIdentity.
func (in *ProtectionBackupVaultSpecIdentity) DeepCopy() *ProtectionBackupVaultSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupVaultSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupVaultSpecResource) DeepCopyInto(out *ProtectionBackupVaultSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.DatastoreType != nil {
		in, out := &in.DatastoreType, &out.DatastoreType
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(ProtectionBackupVaultSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Redundancy != nil {
		in, out := &in.Redundancy, &out.Redundancy
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupVaultSpecResource.
func (in *ProtectionBackupVaultSpecResource) DeepCopy() *ProtectionBackupVaultSpecResource {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupVaultSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectionBackupVaultStatus) DeepCopyInto(out *ProtectionBackupVaultStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectionBackupVaultStatus.
func (in *ProtectionBackupVaultStatus) DeepCopy() *ProtectionBackupVaultStatus {
	if in == nil {
		return nil
	}
	out := new(ProtectionBackupVaultStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Share) DeepCopyInto(out *Share) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Share.
func (in *Share) DeepCopy() *Share {
	if in == nil {
		return nil
	}
	out := new(Share)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Share) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareAccount) DeepCopyInto(out *ShareAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareAccount.
func (in *ShareAccount) DeepCopy() *ShareAccount {
	if in == nil {
		return nil
	}
	out := new(ShareAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareAccountList) DeepCopyInto(out *ShareAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ShareAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareAccountList.
func (in *ShareAccountList) DeepCopy() *ShareAccountList {
	if in == nil {
		return nil
	}
	out := new(ShareAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareAccountSpec) DeepCopyInto(out *ShareAccountSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ShareAccountSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareAccountSpec.
func (in *ShareAccountSpec) DeepCopy() *ShareAccountSpec {
	if in == nil {
		return nil
	}
	out := new(ShareAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareAccountSpecIdentity) DeepCopyInto(out *ShareAccountSpecIdentity) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareAccountSpecIdentity.
func (in *ShareAccountSpecIdentity) DeepCopy() *ShareAccountSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(ShareAccountSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareAccountSpecResource) DeepCopyInto(out *ShareAccountSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(ShareAccountSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareAccountSpecResource.
func (in *ShareAccountSpecResource) DeepCopy() *ShareAccountSpecResource {
	if in == nil {
		return nil
	}
	out := new(ShareAccountSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareAccountStatus) DeepCopyInto(out *ShareAccountStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareAccountStatus.
func (in *ShareAccountStatus) DeepCopy() *ShareAccountStatus {
	if in == nil {
		return nil
	}
	out := new(ShareAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetBlobStorage) DeepCopyInto(out *ShareDatasetBlobStorage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetBlobStorage.
func (in *ShareDatasetBlobStorage) DeepCopy() *ShareDatasetBlobStorage {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetBlobStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareDatasetBlobStorage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetBlobStorageList) DeepCopyInto(out *ShareDatasetBlobStorageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ShareDatasetBlobStorage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetBlobStorageList.
func (in *ShareDatasetBlobStorageList) DeepCopy() *ShareDatasetBlobStorageList {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetBlobStorageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareDatasetBlobStorageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetBlobStorageSpec) DeepCopyInto(out *ShareDatasetBlobStorageSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ShareDatasetBlobStorageSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetBlobStorageSpec.
func (in *ShareDatasetBlobStorageSpec) DeepCopy() *ShareDatasetBlobStorageSpec {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetBlobStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetBlobStorageSpecResource) DeepCopyInto(out *ShareDatasetBlobStorageSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.DataShareID != nil {
		in, out := &in.DataShareID, &out.DataShareID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FilePath != nil {
		in, out := &in.FilePath, &out.FilePath
		*out = new(string)
		**out = **in
	}
	if in.FolderPath != nil {
		in, out := &in.FolderPath, &out.FolderPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = new(ShareDatasetBlobStorageSpecStorageAccount)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetBlobStorageSpecResource.
func (in *ShareDatasetBlobStorageSpecResource) DeepCopy() *ShareDatasetBlobStorageSpecResource {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetBlobStorageSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetBlobStorageSpecStorageAccount) DeepCopyInto(out *ShareDatasetBlobStorageSpecStorageAccount) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetBlobStorageSpecStorageAccount.
func (in *ShareDatasetBlobStorageSpecStorageAccount) DeepCopy() *ShareDatasetBlobStorageSpecStorageAccount {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetBlobStorageSpecStorageAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetBlobStorageStatus) DeepCopyInto(out *ShareDatasetBlobStorageStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetBlobStorageStatus.
func (in *ShareDatasetBlobStorageStatus) DeepCopy() *ShareDatasetBlobStorageStatus {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetBlobStorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetDataLakeGen1) DeepCopyInto(out *ShareDatasetDataLakeGen1) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetDataLakeGen1.
func (in *ShareDatasetDataLakeGen1) DeepCopy() *ShareDatasetDataLakeGen1 {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetDataLakeGen1)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareDatasetDataLakeGen1) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetDataLakeGen1List) DeepCopyInto(out *ShareDatasetDataLakeGen1List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ShareDatasetDataLakeGen1, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetDataLakeGen1List.
func (in *ShareDatasetDataLakeGen1List) DeepCopy() *ShareDatasetDataLakeGen1List {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetDataLakeGen1List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareDatasetDataLakeGen1List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetDataLakeGen1Spec) DeepCopyInto(out *ShareDatasetDataLakeGen1Spec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ShareDatasetDataLakeGen1SpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetDataLakeGen1Spec.
func (in *ShareDatasetDataLakeGen1Spec) DeepCopy() *ShareDatasetDataLakeGen1Spec {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetDataLakeGen1Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetDataLakeGen1SpecResource) DeepCopyInto(out *ShareDatasetDataLakeGen1SpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.DataLakeStoreID != nil {
		in, out := &in.DataLakeStoreID, &out.DataLakeStoreID
		*out = new(string)
		**out = **in
	}
	if in.DataShareID != nil {
		in, out := &in.DataShareID, &out.DataShareID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FileName != nil {
		in, out := &in.FileName, &out.FileName
		*out = new(string)
		**out = **in
	}
	if in.FolderPath != nil {
		in, out := &in.FolderPath, &out.FolderPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetDataLakeGen1SpecResource.
func (in *ShareDatasetDataLakeGen1SpecResource) DeepCopy() *ShareDatasetDataLakeGen1SpecResource {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetDataLakeGen1SpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetDataLakeGen1Status) DeepCopyInto(out *ShareDatasetDataLakeGen1Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetDataLakeGen1Status.
func (in *ShareDatasetDataLakeGen1Status) DeepCopy() *ShareDatasetDataLakeGen1Status {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetDataLakeGen1Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetDataLakeGen2) DeepCopyInto(out *ShareDatasetDataLakeGen2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetDataLakeGen2.
func (in *ShareDatasetDataLakeGen2) DeepCopy() *ShareDatasetDataLakeGen2 {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetDataLakeGen2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareDatasetDataLakeGen2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetDataLakeGen2List) DeepCopyInto(out *ShareDatasetDataLakeGen2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ShareDatasetDataLakeGen2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetDataLakeGen2List.
func (in *ShareDatasetDataLakeGen2List) DeepCopy() *ShareDatasetDataLakeGen2List {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetDataLakeGen2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareDatasetDataLakeGen2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetDataLakeGen2Spec) DeepCopyInto(out *ShareDatasetDataLakeGen2Spec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ShareDatasetDataLakeGen2SpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetDataLakeGen2Spec.
func (in *ShareDatasetDataLakeGen2Spec) DeepCopy() *ShareDatasetDataLakeGen2Spec {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetDataLakeGen2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetDataLakeGen2SpecResource) DeepCopyInto(out *ShareDatasetDataLakeGen2SpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FilePath != nil {
		in, out := &in.FilePath, &out.FilePath
		*out = new(string)
		**out = **in
	}
	if in.FileSystemName != nil {
		in, out := &in.FileSystemName, &out.FileSystemName
		*out = new(string)
		**out = **in
	}
	if in.FolderPath != nil {
		in, out := &in.FolderPath, &out.FolderPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareID != nil {
		in, out := &in.ShareID, &out.ShareID
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetDataLakeGen2SpecResource.
func (in *ShareDatasetDataLakeGen2SpecResource) DeepCopy() *ShareDatasetDataLakeGen2SpecResource {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetDataLakeGen2SpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetDataLakeGen2Status) DeepCopyInto(out *ShareDatasetDataLakeGen2Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetDataLakeGen2Status.
func (in *ShareDatasetDataLakeGen2Status) DeepCopy() *ShareDatasetDataLakeGen2Status {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetDataLakeGen2Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetKustoCluster) DeepCopyInto(out *ShareDatasetKustoCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetKustoCluster.
func (in *ShareDatasetKustoCluster) DeepCopy() *ShareDatasetKustoCluster {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetKustoCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareDatasetKustoCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetKustoClusterList) DeepCopyInto(out *ShareDatasetKustoClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ShareDatasetKustoCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetKustoClusterList.
func (in *ShareDatasetKustoClusterList) DeepCopy() *ShareDatasetKustoClusterList {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetKustoClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareDatasetKustoClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetKustoClusterSpec) DeepCopyInto(out *ShareDatasetKustoClusterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ShareDatasetKustoClusterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetKustoClusterSpec.
func (in *ShareDatasetKustoClusterSpec) DeepCopy() *ShareDatasetKustoClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetKustoClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetKustoClusterSpecResource) DeepCopyInto(out *ShareDatasetKustoClusterSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.KustoClusterID != nil {
		in, out := &in.KustoClusterID, &out.KustoClusterID
		*out = new(string)
		**out = **in
	}
	if in.KustoClusterLocation != nil {
		in, out := &in.KustoClusterLocation, &out.KustoClusterLocation
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareID != nil {
		in, out := &in.ShareID, &out.ShareID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetKustoClusterSpecResource.
func (in *ShareDatasetKustoClusterSpecResource) DeepCopy() *ShareDatasetKustoClusterSpecResource {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetKustoClusterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetKustoClusterStatus) DeepCopyInto(out *ShareDatasetKustoClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetKustoClusterStatus.
func (in *ShareDatasetKustoClusterStatus) DeepCopy() *ShareDatasetKustoClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetKustoClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetKustoDatabase) DeepCopyInto(out *ShareDatasetKustoDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetKustoDatabase.
func (in *ShareDatasetKustoDatabase) DeepCopy() *ShareDatasetKustoDatabase {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetKustoDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareDatasetKustoDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetKustoDatabaseList) DeepCopyInto(out *ShareDatasetKustoDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ShareDatasetKustoDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetKustoDatabaseList.
func (in *ShareDatasetKustoDatabaseList) DeepCopy() *ShareDatasetKustoDatabaseList {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetKustoDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareDatasetKustoDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetKustoDatabaseSpec) DeepCopyInto(out *ShareDatasetKustoDatabaseSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ShareDatasetKustoDatabaseSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetKustoDatabaseSpec.
func (in *ShareDatasetKustoDatabaseSpec) DeepCopy() *ShareDatasetKustoDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetKustoDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetKustoDatabaseSpecResource) DeepCopyInto(out *ShareDatasetKustoDatabaseSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.KustoClusterLocation != nil {
		in, out := &in.KustoClusterLocation, &out.KustoClusterLocation
		*out = new(string)
		**out = **in
	}
	if in.KustoDatabaseID != nil {
		in, out := &in.KustoDatabaseID, &out.KustoDatabaseID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareID != nil {
		in, out := &in.ShareID, &out.ShareID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetKustoDatabaseSpecResource.
func (in *ShareDatasetKustoDatabaseSpecResource) DeepCopy() *ShareDatasetKustoDatabaseSpecResource {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetKustoDatabaseSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareDatasetKustoDatabaseStatus) DeepCopyInto(out *ShareDatasetKustoDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareDatasetKustoDatabaseStatus.
func (in *ShareDatasetKustoDatabaseStatus) DeepCopy() *ShareDatasetKustoDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(ShareDatasetKustoDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareList) DeepCopyInto(out *ShareList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Share, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareList.
func (in *ShareList) DeepCopy() *ShareList {
	if in == nil {
		return nil
	}
	out := new(ShareList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShareList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareSpec) DeepCopyInto(out *ShareSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ShareSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareSpec.
func (in *ShareSpec) DeepCopy() *ShareSpec {
	if in == nil {
		return nil
	}
	out := new(ShareSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareSpecResource) DeepCopyInto(out *ShareSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SnapshotSchedule != nil {
		in, out := &in.SnapshotSchedule, &out.SnapshotSchedule
		*out = new(ShareSpecSnapshotSchedule)
		(*in).DeepCopyInto(*out)
	}
	if in.Terms != nil {
		in, out := &in.Terms, &out.Terms
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareSpecResource.
func (in *ShareSpecResource) DeepCopy() *ShareSpecResource {
	if in == nil {
		return nil
	}
	out := new(ShareSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareSpecSnapshotSchedule) DeepCopyInto(out *ShareSpecSnapshotSchedule) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareSpecSnapshotSchedule.
func (in *ShareSpecSnapshotSchedule) DeepCopy() *ShareSpecSnapshotSchedule {
	if in == nil {
		return nil
	}
	out := new(ShareSpecSnapshotSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShareStatus) DeepCopyInto(out *ShareStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShareStatus.
func (in *ShareStatus) DeepCopy() *ShareStatus {
	if in == nil {
		return nil
	}
	out := new(ShareStatus)
	in.DeepCopyInto(out)
	return out
}
