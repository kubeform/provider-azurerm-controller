/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ProtectionBackupPolicyPostgresql struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ProtectionBackupPolicyPostgresqlSpec   `json:"spec,omitempty"`
	Status            ProtectionBackupPolicyPostgresqlStatus `json:"status,omitempty"`
}

type ProtectionBackupPolicyPostgresqlSpecRetentionRuleCriteria struct {
	// +optional
	AbsoluteCriteria *string `json:"absoluteCriteria,omitempty" tf:"absolute_criteria"`
	// +optional
	// +kubebuilder:validation:MinItems=1
	DaysOfWeek []string `json:"daysOfWeek,omitempty" tf:"days_of_week"`
	// +optional
	// +kubebuilder:validation:MinItems=1
	MonthsOfYear []string `json:"monthsOfYear,omitempty" tf:"months_of_year"`
	// +optional
	// +kubebuilder:validation:MinItems=1
	ScheduledBackupTimes []string `json:"scheduledBackupTimes,omitempty" tf:"scheduled_backup_times"`
	// +optional
	// +kubebuilder:validation:MinItems=1
	WeeksOfMonth []string `json:"weeksOfMonth,omitempty" tf:"weeks_of_month"`
}

type ProtectionBackupPolicyPostgresqlSpecRetentionRule struct {
	Criteria *ProtectionBackupPolicyPostgresqlSpecRetentionRuleCriteria `json:"criteria" tf:"criteria"`
	Duration *string                                                    `json:"duration" tf:"duration"`
	Name     *string                                                    `json:"name" tf:"name"`
	Priority *int64                                                     `json:"priority" tf:"priority"`
}

type ProtectionBackupPolicyPostgresqlSpec struct {
	State *ProtectionBackupPolicyPostgresqlSpecResource `json:"state,omitempty" tf:"-"`

	Resource ProtectionBackupPolicyPostgresqlSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type ProtectionBackupPolicyPostgresqlSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:MinItems=1
	BackupRepeatingTimeIntervals []string `json:"backupRepeatingTimeIntervals" tf:"backup_repeating_time_intervals"`
	DefaultRetentionDuration     *string  `json:"defaultRetentionDuration" tf:"default_retention_duration"`
	Name                         *string  `json:"name" tf:"name"`
	ResourceGroupName            *string  `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	RetentionRule []ProtectionBackupPolicyPostgresqlSpecRetentionRule `json:"retentionRule,omitempty" tf:"retention_rule"`
	VaultName     *string                                             `json:"vaultName" tf:"vault_name"`
}

type ProtectionBackupPolicyPostgresqlStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ProtectionBackupPolicyPostgresqlList is a list of ProtectionBackupPolicyPostgresqls
type ProtectionBackupPolicyPostgresqlList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ProtectionBackupPolicyPostgresql CRD objects
	Items []ProtectionBackupPolicyPostgresql `json:"items,omitempty"`
}
