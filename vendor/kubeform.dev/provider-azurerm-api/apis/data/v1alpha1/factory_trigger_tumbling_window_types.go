/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type FactoryTriggerTumblingWindow struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FactoryTriggerTumblingWindowSpec   `json:"spec,omitempty"`
	Status            FactoryTriggerTumblingWindowStatus `json:"status,omitempty"`
}

type FactoryTriggerTumblingWindowSpecPipeline struct {
	Name *string `json:"name" tf:"name"`
	// +optional
	Parameters *map[string]string `json:"parameters,omitempty" tf:"parameters"`
}

type FactoryTriggerTumblingWindowSpecRetry struct {
	Count *int64 `json:"count" tf:"count"`
	// +optional
	Interval *int64 `json:"interval,omitempty" tf:"interval"`
}

type FactoryTriggerTumblingWindowSpecTriggerDependency struct {
	// +optional
	Offset *string `json:"offset,omitempty" tf:"offset"`
	// +optional
	Size *string `json:"size,omitempty" tf:"size"`
	// +optional
	TriggerName *string `json:"triggerName,omitempty" tf:"trigger_name"`
}

type FactoryTriggerTumblingWindowSpec struct {
	State *FactoryTriggerTumblingWindowSpecResource `json:"state,omitempty" tf:"-"`

	Resource FactoryTriggerTumblingWindowSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type FactoryTriggerTumblingWindowSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Activated *bool `json:"activated,omitempty" tf:"activated"`
	// +optional
	AdditionalProperties *map[string]string `json:"additionalProperties,omitempty" tf:"additional_properties"`
	// +optional
	Annotations   []string `json:"annotations,omitempty" tf:"annotations"`
	DataFactoryID *string  `json:"dataFactoryID" tf:"data_factory_id"`
	// +optional
	Delay *string `json:"delay,omitempty" tf:"delay"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	EndTime   *string `json:"endTime,omitempty" tf:"end_time"`
	Frequency *string `json:"frequency" tf:"frequency"`
	Interval  *int64  `json:"interval" tf:"interval"`
	// +optional
	MaxConcurrency *int64                                    `json:"maxConcurrency,omitempty" tf:"max_concurrency"`
	Name           *string                                   `json:"name" tf:"name"`
	Pipeline       *FactoryTriggerTumblingWindowSpecPipeline `json:"pipeline" tf:"pipeline"`
	// +optional
	Retry     *FactoryTriggerTumblingWindowSpecRetry `json:"retry,omitempty" tf:"retry"`
	StartTime *string                                `json:"startTime" tf:"start_time"`
	// +optional
	TriggerDependency []FactoryTriggerTumblingWindowSpecTriggerDependency `json:"triggerDependency,omitempty" tf:"trigger_dependency"`
}

type FactoryTriggerTumblingWindowStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FactoryTriggerTumblingWindowList is a list of FactoryTriggerTumblingWindows
type FactoryTriggerTumblingWindowList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of FactoryTriggerTumblingWindow CRD objects
	Items []FactoryTriggerTumblingWindow `json:"items,omitempty"`
}
