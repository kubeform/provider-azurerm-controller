/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ExternalEndpoint struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ExternalEndpointSpec   `json:"spec,omitempty"`
	Status            ExternalEndpointStatus `json:"status,omitempty"`
}

type ExternalEndpointSpecCustomHeader struct {
	Name  *string `json:"name" tf:"name"`
	Value *string `json:"value" tf:"value"`
}

type ExternalEndpointSpecSubnet struct {
	First *string `json:"first" tf:"first"`
	// +optional
	Last *string `json:"last,omitempty" tf:"last"`
	// +optional
	Scope *int64 `json:"scope,omitempty" tf:"scope"`
}

type ExternalEndpointSpec struct {
	State *ExternalEndpointSpecResource `json:"state,omitempty" tf:"-"`

	Resource ExternalEndpointSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ExternalEndpointSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	CustomHeader []ExternalEndpointSpecCustomHeader `json:"customHeader,omitempty" tf:"custom_header"`
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// +optional
	EndpointLocation *string `json:"endpointLocation,omitempty" tf:"endpoint_location"`
	// +optional
	GeoMappings []string `json:"geoMappings,omitempty" tf:"geo_mappings"`
	Name        *string  `json:"name" tf:"name"`
	// +optional
	Priority  *int64  `json:"priority,omitempty" tf:"priority"`
	ProfileID *string `json:"profileID" tf:"profile_id"`
	// +optional
	Subnet []ExternalEndpointSpecSubnet `json:"subnet,omitempty" tf:"subnet"`
	Target *string                      `json:"target" tf:"target"`
	Weight *int64                       `json:"weight" tf:"weight"`
}

type ExternalEndpointStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ExternalEndpointList is a list of ExternalEndpoints
type ExternalEndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ExternalEndpoint CRD objects
	Items []ExternalEndpoint `json:"items,omitempty"`
}
