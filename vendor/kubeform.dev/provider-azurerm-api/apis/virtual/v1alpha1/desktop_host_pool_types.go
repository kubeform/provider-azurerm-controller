/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DesktopHostPool struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DesktopHostPoolSpec   `json:"spec,omitempty"`
	Status            DesktopHostPoolStatus `json:"status,omitempty"`
}

type DesktopHostPoolSpecRegistrationInfo struct {
	// +optional
	// Deprecated
	ExpirationDate *string `json:"expirationDate,omitempty" tf:"expiration_date"`
	// +optional
	ResetToken *bool `json:"resetToken,omitempty" tf:"reset_token"`
	// +optional
	Token *string `json:"-" sensitive:"true" tf:"token"`
}

type DesktopHostPoolSpec struct {
	State *DesktopHostPoolSpecResource `json:"state,omitempty" tf:"-"`

	Resource DesktopHostPoolSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type DesktopHostPoolSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	CustomRdpProperties *string `json:"customRdpProperties,omitempty" tf:"custom_rdp_properties"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	FriendlyName     *string `json:"friendlyName,omitempty" tf:"friendly_name"`
	LoadBalancerType *string `json:"loadBalancerType" tf:"load_balancer_type"`
	Location         *string `json:"location" tf:"location"`
	// +optional
	MaximumSessionsAllowed *int64  `json:"maximumSessionsAllowed,omitempty" tf:"maximum_sessions_allowed"`
	Name                   *string `json:"name" tf:"name"`
	// +optional
	PersonalDesktopAssignmentType *string `json:"personalDesktopAssignmentType,omitempty" tf:"personal_desktop_assignment_type"`
	// Preferred App Group type to display
	// +optional
	PreferredAppGroupType *string `json:"preferredAppGroupType,omitempty" tf:"preferred_app_group_type"`
	// This block is now non-functional and will be removed in version 3.0 of the Azure Provider - use the `azurerm_virtual_desktop_host_pool_registration_info` resource instead.
	// +optional
	RegistrationInfo  *DesktopHostPoolSpecRegistrationInfo `json:"registrationInfo,omitempty" tf:"registration_info"`
	ResourceGroupName *string                              `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	StartVmOnConnect *bool `json:"startVmOnConnect,omitempty" tf:"start_vm_on_connect"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	Type *string            `json:"type" tf:"type"`
	// +optional
	ValidateEnvironment *bool `json:"validateEnvironment,omitempty" tf:"validate_environment"`
}

type DesktopHostPoolStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DesktopHostPoolList is a list of DesktopHostPools
type DesktopHostPoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DesktopHostPool CRD objects
	Items []DesktopHostPool `json:"items,omitempty"`
}
