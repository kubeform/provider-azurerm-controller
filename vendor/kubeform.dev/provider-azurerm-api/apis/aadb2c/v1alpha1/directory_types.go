/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Directory struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DirectorySpec   `json:"spec,omitempty"`
	Status            DirectoryStatus `json:"status,omitempty"`
}

type DirectorySpec struct {
	State *DirectorySpecResource `json:"state,omitempty" tf:"-"`

	Resource DirectorySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type DirectorySpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The type of billing for the B2C tenant. Possible values include: `MAU` or `Auths`.
	// +optional
	BillingType *string `json:"billingType,omitempty" tf:"billing_type"`
	// Country code of the B2C tenant. See https://aka.ms/B2CDataResidency for valid country codes.
	// +optional
	CountryCode *string `json:"countryCode,omitempty" tf:"country_code"`
	// Location in which the B2C tenant is hosted and data resides. See https://aka.ms/B2CDataResidency for more information.
	DataResidencyLocation *string `json:"dataResidencyLocation" tf:"data_residency_location"`
	// The initial display name of the B2C tenant.
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// Domain name of the B2C tenant, including onmicrosoft.com suffix.
	DomainName *string `json:"domainName" tf:"domain_name"`
	// The date from which the billing type took effect. May not be populated until after the first billing cycle.
	// +optional
	EffectiveStartDate *string `json:"effectiveStartDate,omitempty" tf:"effective_start_date"`
	ResourceGroupName  *string `json:"resourceGroupName" tf:"resource_group_name"`
	// Billing SKU for the B2C tenant. See https://aka.ms/b2cBilling for more information.
	SkuName *string `json:"skuName" tf:"sku_name"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// The Tenant ID for the B2C tenant.
	// +optional
	TenantID *string `json:"tenantID,omitempty" tf:"tenant_id"`
}

type DirectoryStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DirectoryList is a list of Directorys
type DirectoryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Directory CRD objects
	Items []Directory `json:"items,omitempty"`
}
