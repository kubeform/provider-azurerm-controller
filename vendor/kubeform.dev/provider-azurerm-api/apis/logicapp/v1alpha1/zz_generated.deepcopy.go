//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionCustom) DeepCopyInto(out *ActionCustom) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionCustom.
func (in *ActionCustom) DeepCopy() *ActionCustom {
	if in == nil {
		return nil
	}
	out := new(ActionCustom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActionCustom) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionCustomList) DeepCopyInto(out *ActionCustomList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActionCustom, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionCustomList.
func (in *ActionCustomList) DeepCopy() *ActionCustomList {
	if in == nil {
		return nil
	}
	out := new(ActionCustomList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActionCustomList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionCustomSpec) DeepCopyInto(out *ActionCustomSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ActionCustomSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionCustomSpec.
func (in *ActionCustomSpec) DeepCopy() *ActionCustomSpec {
	if in == nil {
		return nil
	}
	out := new(ActionCustomSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionCustomSpecResource) DeepCopyInto(out *ActionCustomSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.LogicAppID != nil {
		in, out := &in.LogicAppID, &out.LogicAppID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionCustomSpecResource.
func (in *ActionCustomSpecResource) DeepCopy() *ActionCustomSpecResource {
	if in == nil {
		return nil
	}
	out := new(ActionCustomSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionCustomStatus) DeepCopyInto(out *ActionCustomStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionCustomStatus.
func (in *ActionCustomStatus) DeepCopy() *ActionCustomStatus {
	if in == nil {
		return nil
	}
	out := new(ActionCustomStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionHTTP) DeepCopyInto(out *ActionHTTP) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionHTTP.
func (in *ActionHTTP) DeepCopy() *ActionHTTP {
	if in == nil {
		return nil
	}
	out := new(ActionHTTP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActionHTTP) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionHTTPList) DeepCopyInto(out *ActionHTTPList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActionHTTP, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionHTTPList.
func (in *ActionHTTPList) DeepCopy() *ActionHTTPList {
	if in == nil {
		return nil
	}
	out := new(ActionHTTPList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActionHTTPList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionHTTPSpec) DeepCopyInto(out *ActionHTTPSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ActionHTTPSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionHTTPSpec.
func (in *ActionHTTPSpec) DeepCopy() *ActionHTTPSpec {
	if in == nil {
		return nil
	}
	out := new(ActionHTTPSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionHTTPSpecResource) DeepCopyInto(out *ActionHTTPSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.LogicAppID != nil {
		in, out := &in.LogicAppID, &out.LogicAppID
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RunAfter != nil {
		in, out := &in.RunAfter, &out.RunAfter
		*out = make([]ActionHTTPSpecRunAfter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionHTTPSpecResource.
func (in *ActionHTTPSpecResource) DeepCopy() *ActionHTTPSpecResource {
	if in == nil {
		return nil
	}
	out := new(ActionHTTPSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionHTTPSpecRunAfter) DeepCopyInto(out *ActionHTTPSpecRunAfter) {
	*out = *in
	if in.ActionName != nil {
		in, out := &in.ActionName, &out.ActionName
		*out = new(string)
		**out = **in
	}
	if in.ActionResult != nil {
		in, out := &in.ActionResult, &out.ActionResult
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionHTTPSpecRunAfter.
func (in *ActionHTTPSpecRunAfter) DeepCopy() *ActionHTTPSpecRunAfter {
	if in == nil {
		return nil
	}
	out := new(ActionHTTPSpecRunAfter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionHTTPStatus) DeepCopyInto(out *ActionHTTPStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionHTTPStatus.
func (in *ActionHTTPStatus) DeepCopy() *ActionHTTPStatus {
	if in == nil {
		return nil
	}
	out := new(ActionHTTPStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccount) DeepCopyInto(out *IntegrationAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccount.
func (in *IntegrationAccount) DeepCopy() *IntegrationAccount {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountAgreement) DeepCopyInto(out *IntegrationAccountAgreement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountAgreement.
func (in *IntegrationAccountAgreement) DeepCopy() *IntegrationAccountAgreement {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountAgreement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountAgreement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountAgreementList) DeepCopyInto(out *IntegrationAccountAgreementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationAccountAgreement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountAgreementList.
func (in *IntegrationAccountAgreementList) DeepCopy() *IntegrationAccountAgreementList {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountAgreementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountAgreementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountAgreementSpec) DeepCopyInto(out *IntegrationAccountAgreementSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(IntegrationAccountAgreementSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountAgreementSpec.
func (in *IntegrationAccountAgreementSpec) DeepCopy() *IntegrationAccountAgreementSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountAgreementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountAgreementSpecGuestIdentity) DeepCopyInto(out *IntegrationAccountAgreementSpecGuestIdentity) {
	*out = *in
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountAgreementSpecGuestIdentity.
func (in *IntegrationAccountAgreementSpecGuestIdentity) DeepCopy() *IntegrationAccountAgreementSpecGuestIdentity {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountAgreementSpecGuestIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountAgreementSpecHostIdentity) DeepCopyInto(out *IntegrationAccountAgreementSpecHostIdentity) {
	*out = *in
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountAgreementSpecHostIdentity.
func (in *IntegrationAccountAgreementSpecHostIdentity) DeepCopy() *IntegrationAccountAgreementSpecHostIdentity {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountAgreementSpecHostIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountAgreementSpecResource) DeepCopyInto(out *IntegrationAccountAgreementSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AgreementType != nil {
		in, out := &in.AgreementType, &out.AgreementType
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.GuestIdentity != nil {
		in, out := &in.GuestIdentity, &out.GuestIdentity
		*out = new(IntegrationAccountAgreementSpecGuestIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.GuestPartnerName != nil {
		in, out := &in.GuestPartnerName, &out.GuestPartnerName
		*out = new(string)
		**out = **in
	}
	if in.HostIdentity != nil {
		in, out := &in.HostIdentity, &out.HostIdentity
		*out = new(IntegrationAccountAgreementSpecHostIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.HostPartnerName != nil {
		in, out := &in.HostPartnerName, &out.HostPartnerName
		*out = new(string)
		**out = **in
	}
	if in.IntegrationAccountName != nil {
		in, out := &in.IntegrationAccountName, &out.IntegrationAccountName
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountAgreementSpecResource.
func (in *IntegrationAccountAgreementSpecResource) DeepCopy() *IntegrationAccountAgreementSpecResource {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountAgreementSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountAgreementStatus) DeepCopyInto(out *IntegrationAccountAgreementStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountAgreementStatus.
func (in *IntegrationAccountAgreementStatus) DeepCopy() *IntegrationAccountAgreementStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountAgreementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountAssembly) DeepCopyInto(out *IntegrationAccountAssembly) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountAssembly.
func (in *IntegrationAccountAssembly) DeepCopy() *IntegrationAccountAssembly {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountAssembly)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountAssembly) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountAssemblyList) DeepCopyInto(out *IntegrationAccountAssemblyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationAccountAssembly, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountAssemblyList.
func (in *IntegrationAccountAssemblyList) DeepCopy() *IntegrationAccountAssemblyList {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountAssemblyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountAssemblyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountAssemblySpec) DeepCopyInto(out *IntegrationAccountAssemblySpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(IntegrationAccountAssemblySpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountAssemblySpec.
func (in *IntegrationAccountAssemblySpec) DeepCopy() *IntegrationAccountAssemblySpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountAssemblySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountAssemblySpecResource) DeepCopyInto(out *IntegrationAccountAssemblySpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AssemblyName != nil {
		in, out := &in.AssemblyName, &out.AssemblyName
		*out = new(string)
		**out = **in
	}
	if in.AssemblyVersion != nil {
		in, out := &in.AssemblyVersion, &out.AssemblyVersion
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.ContentLinkURI != nil {
		in, out := &in.ContentLinkURI, &out.ContentLinkURI
		*out = new(string)
		**out = **in
	}
	if in.IntegrationAccountName != nil {
		in, out := &in.IntegrationAccountName, &out.IntegrationAccountName
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountAssemblySpecResource.
func (in *IntegrationAccountAssemblySpecResource) DeepCopy() *IntegrationAccountAssemblySpecResource {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountAssemblySpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountAssemblyStatus) DeepCopyInto(out *IntegrationAccountAssemblyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountAssemblyStatus.
func (in *IntegrationAccountAssemblyStatus) DeepCopy() *IntegrationAccountAssemblyStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountAssemblyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountBatchConfiguration) DeepCopyInto(out *IntegrationAccountBatchConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountBatchConfiguration.
func (in *IntegrationAccountBatchConfiguration) DeepCopy() *IntegrationAccountBatchConfiguration {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountBatchConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountBatchConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountBatchConfigurationList) DeepCopyInto(out *IntegrationAccountBatchConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationAccountBatchConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountBatchConfigurationList.
func (in *IntegrationAccountBatchConfigurationList) DeepCopy() *IntegrationAccountBatchConfigurationList {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountBatchConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountBatchConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountBatchConfigurationSpec) DeepCopyInto(out *IntegrationAccountBatchConfigurationSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(IntegrationAccountBatchConfigurationSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountBatchConfigurationSpec.
func (in *IntegrationAccountBatchConfigurationSpec) DeepCopy() *IntegrationAccountBatchConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountBatchConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountBatchConfigurationSpecReleaseCriteria) DeepCopyInto(out *IntegrationAccountBatchConfigurationSpecReleaseCriteria) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(int64)
		**out = **in
	}
	if in.MessageCount != nil {
		in, out := &in.MessageCount, &out.MessageCount
		*out = new(int64)
		**out = **in
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = new(IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrence)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountBatchConfigurationSpecReleaseCriteria.
func (in *IntegrationAccountBatchConfigurationSpecReleaseCriteria) DeepCopy() *IntegrationAccountBatchConfigurationSpecReleaseCriteria {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountBatchConfigurationSpecReleaseCriteria)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrence) DeepCopyInto(out *IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrence) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(int64)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceSchedule)
		(*in).DeepCopyInto(*out)
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrence.
func (in *IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrence) DeepCopy() *IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrence {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceSchedule) DeepCopyInto(out *IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceSchedule) {
	*out = *in
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.MonthDays != nil {
		in, out := &in.MonthDays, &out.MonthDays
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.Monthly != nil {
		in, out := &in.Monthly, &out.Monthly
		*out = make([]IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceScheduleMonthly, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeekDays != nil {
		in, out := &in.WeekDays, &out.WeekDays
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceSchedule.
func (in *IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceSchedule) DeepCopy() *IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceSchedule {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceScheduleMonthly) DeepCopyInto(out *IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceScheduleMonthly) {
	*out = *in
	if in.Week != nil {
		in, out := &in.Week, &out.Week
		*out = new(int64)
		**out = **in
	}
	if in.Weekday != nil {
		in, out := &in.Weekday, &out.Weekday
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceScheduleMonthly.
func (in *IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceScheduleMonthly) DeepCopy() *IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceScheduleMonthly {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountBatchConfigurationSpecReleaseCriteriaRecurrenceScheduleMonthly)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountBatchConfigurationSpecResource) DeepCopyInto(out *IntegrationAccountBatchConfigurationSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.BatchGroupName != nil {
		in, out := &in.BatchGroupName, &out.BatchGroupName
		*out = new(string)
		**out = **in
	}
	if in.IntegrationAccountName != nil {
		in, out := &in.IntegrationAccountName, &out.IntegrationAccountName
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReleaseCriteria != nil {
		in, out := &in.ReleaseCriteria, &out.ReleaseCriteria
		*out = new(IntegrationAccountBatchConfigurationSpecReleaseCriteria)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountBatchConfigurationSpecResource.
func (in *IntegrationAccountBatchConfigurationSpecResource) DeepCopy() *IntegrationAccountBatchConfigurationSpecResource {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountBatchConfigurationSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountBatchConfigurationStatus) DeepCopyInto(out *IntegrationAccountBatchConfigurationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountBatchConfigurationStatus.
func (in *IntegrationAccountBatchConfigurationStatus) DeepCopy() *IntegrationAccountBatchConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountBatchConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountCertificate) DeepCopyInto(out *IntegrationAccountCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountCertificate.
func (in *IntegrationAccountCertificate) DeepCopy() *IntegrationAccountCertificate {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountCertificateList) DeepCopyInto(out *IntegrationAccountCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationAccountCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountCertificateList.
func (in *IntegrationAccountCertificateList) DeepCopy() *IntegrationAccountCertificateList {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountCertificateSpec) DeepCopyInto(out *IntegrationAccountCertificateSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(IntegrationAccountCertificateSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountCertificateSpec.
func (in *IntegrationAccountCertificateSpec) DeepCopy() *IntegrationAccountCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountCertificateSpecKeyVaultKey) DeepCopyInto(out *IntegrationAccountCertificateSpecKeyVaultKey) {
	*out = *in
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.KeyVersion != nil {
		in, out := &in.KeyVersion, &out.KeyVersion
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountCertificateSpecKeyVaultKey.
func (in *IntegrationAccountCertificateSpecKeyVaultKey) DeepCopy() *IntegrationAccountCertificateSpecKeyVaultKey {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountCertificateSpecKeyVaultKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountCertificateSpecResource) DeepCopyInto(out *IntegrationAccountCertificateSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.IntegrationAccountName != nil {
		in, out := &in.IntegrationAccountName, &out.IntegrationAccountName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultKey != nil {
		in, out := &in.KeyVaultKey, &out.KeyVaultKey
		*out = new(IntegrationAccountCertificateSpecKeyVaultKey)
		(*in).DeepCopyInto(*out)
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PublicCertificate != nil {
		in, out := &in.PublicCertificate, &out.PublicCertificate
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountCertificateSpecResource.
func (in *IntegrationAccountCertificateSpecResource) DeepCopy() *IntegrationAccountCertificateSpecResource {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountCertificateSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountCertificateStatus) DeepCopyInto(out *IntegrationAccountCertificateStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountCertificateStatus.
func (in *IntegrationAccountCertificateStatus) DeepCopy() *IntegrationAccountCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountList) DeepCopyInto(out *IntegrationAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountList.
func (in *IntegrationAccountList) DeepCopy() *IntegrationAccountList {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountMap) DeepCopyInto(out *IntegrationAccountMap) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountMap.
func (in *IntegrationAccountMap) DeepCopy() *IntegrationAccountMap {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountMap) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountMapList) DeepCopyInto(out *IntegrationAccountMapList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationAccountMap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountMapList.
func (in *IntegrationAccountMapList) DeepCopy() *IntegrationAccountMapList {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountMapList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountMapList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountMapSpec) DeepCopyInto(out *IntegrationAccountMapSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(IntegrationAccountMapSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountMapSpec.
func (in *IntegrationAccountMapSpec) DeepCopy() *IntegrationAccountMapSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountMapSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountMapSpecResource) DeepCopyInto(out *IntegrationAccountMapSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.IntegrationAccountName != nil {
		in, out := &in.IntegrationAccountName, &out.IntegrationAccountName
		*out = new(string)
		**out = **in
	}
	if in.MapType != nil {
		in, out := &in.MapType, &out.MapType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountMapSpecResource.
func (in *IntegrationAccountMapSpecResource) DeepCopy() *IntegrationAccountMapSpecResource {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountMapSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountMapStatus) DeepCopyInto(out *IntegrationAccountMapStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountMapStatus.
func (in *IntegrationAccountMapStatus) DeepCopy() *IntegrationAccountMapStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountMapStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountPartner) DeepCopyInto(out *IntegrationAccountPartner) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountPartner.
func (in *IntegrationAccountPartner) DeepCopy() *IntegrationAccountPartner {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountPartner)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountPartner) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountPartnerList) DeepCopyInto(out *IntegrationAccountPartnerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationAccountPartner, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountPartnerList.
func (in *IntegrationAccountPartnerList) DeepCopy() *IntegrationAccountPartnerList {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountPartnerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountPartnerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountPartnerSpec) DeepCopyInto(out *IntegrationAccountPartnerSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(IntegrationAccountPartnerSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountPartnerSpec.
func (in *IntegrationAccountPartnerSpec) DeepCopy() *IntegrationAccountPartnerSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountPartnerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountPartnerSpecBusinessIdentity) DeepCopyInto(out *IntegrationAccountPartnerSpecBusinessIdentity) {
	*out = *in
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountPartnerSpecBusinessIdentity.
func (in *IntegrationAccountPartnerSpecBusinessIdentity) DeepCopy() *IntegrationAccountPartnerSpecBusinessIdentity {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountPartnerSpecBusinessIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountPartnerSpecResource) DeepCopyInto(out *IntegrationAccountPartnerSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.BusinessIdentity != nil {
		in, out := &in.BusinessIdentity, &out.BusinessIdentity
		*out = make([]IntegrationAccountPartnerSpecBusinessIdentity, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IntegrationAccountName != nil {
		in, out := &in.IntegrationAccountName, &out.IntegrationAccountName
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountPartnerSpecResource.
func (in *IntegrationAccountPartnerSpecResource) DeepCopy() *IntegrationAccountPartnerSpecResource {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountPartnerSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountPartnerStatus) DeepCopyInto(out *IntegrationAccountPartnerStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountPartnerStatus.
func (in *IntegrationAccountPartnerStatus) DeepCopy() *IntegrationAccountPartnerStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountPartnerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountSchema) DeepCopyInto(out *IntegrationAccountSchema) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountSchema.
func (in *IntegrationAccountSchema) DeepCopy() *IntegrationAccountSchema {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountSchema) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountSchemaList) DeepCopyInto(out *IntegrationAccountSchemaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationAccountSchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountSchemaList.
func (in *IntegrationAccountSchemaList) DeepCopy() *IntegrationAccountSchemaList {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountSchemaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountSchemaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountSchemaSpec) DeepCopyInto(out *IntegrationAccountSchemaSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(IntegrationAccountSchemaSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountSchemaSpec.
func (in *IntegrationAccountSchemaSpec) DeepCopy() *IntegrationAccountSchemaSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountSchemaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountSchemaSpecResource) DeepCopyInto(out *IntegrationAccountSchemaSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.FileName != nil {
		in, out := &in.FileName, &out.FileName
		*out = new(string)
		**out = **in
	}
	if in.IntegrationAccountName != nil {
		in, out := &in.IntegrationAccountName, &out.IntegrationAccountName
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountSchemaSpecResource.
func (in *IntegrationAccountSchemaSpecResource) DeepCopy() *IntegrationAccountSchemaSpecResource {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountSchemaSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountSchemaStatus) DeepCopyInto(out *IntegrationAccountSchemaStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountSchemaStatus.
func (in *IntegrationAccountSchemaStatus) DeepCopy() *IntegrationAccountSchemaStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountSchemaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountSession) DeepCopyInto(out *IntegrationAccountSession) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountSession.
func (in *IntegrationAccountSession) DeepCopy() *IntegrationAccountSession {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountSession)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountSession) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountSessionList) DeepCopyInto(out *IntegrationAccountSessionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationAccountSession, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountSessionList.
func (in *IntegrationAccountSessionList) DeepCopy() *IntegrationAccountSessionList {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountSessionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationAccountSessionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountSessionSpec) DeepCopyInto(out *IntegrationAccountSessionSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(IntegrationAccountSessionSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountSessionSpec.
func (in *IntegrationAccountSessionSpec) DeepCopy() *IntegrationAccountSessionSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountSessionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountSessionSpecResource) DeepCopyInto(out *IntegrationAccountSessionSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.IntegrationAccountName != nil {
		in, out := &in.IntegrationAccountName, &out.IntegrationAccountName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountSessionSpecResource.
func (in *IntegrationAccountSessionSpecResource) DeepCopy() *IntegrationAccountSessionSpecResource {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountSessionSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountSessionStatus) DeepCopyInto(out *IntegrationAccountSessionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountSessionStatus.
func (in *IntegrationAccountSessionStatus) DeepCopy() *IntegrationAccountSessionStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountSessionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountSpec) DeepCopyInto(out *IntegrationAccountSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(IntegrationAccountSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountSpec.
func (in *IntegrationAccountSpec) DeepCopy() *IntegrationAccountSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountSpecResource) DeepCopyInto(out *IntegrationAccountSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.IntegrationServiceEnvironmentID != nil {
		in, out := &in.IntegrationServiceEnvironmentID, &out.IntegrationServiceEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountSpecResource.
func (in *IntegrationAccountSpecResource) DeepCopy() *IntegrationAccountSpecResource {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationAccountStatus) DeepCopyInto(out *IntegrationAccountStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationAccountStatus.
func (in *IntegrationAccountStatus) DeepCopy() *IntegrationAccountStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Standard) DeepCopyInto(out *Standard) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Standard.
func (in *Standard) DeepCopy() *Standard {
	if in == nil {
		return nil
	}
	out := new(Standard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Standard) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardList) DeepCopyInto(out *StandardList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Standard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardList.
func (in *StandardList) DeepCopy() *StandardList {
	if in == nil {
		return nil
	}
	out := new(StandardList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StandardList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSpec) DeepCopyInto(out *StandardSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(StandardSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSpec.
func (in *StandardSpec) DeepCopy() *StandardSpec {
	if in == nil {
		return nil
	}
	out := new(StandardSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSpecConnectionString) DeepCopyInto(out *StandardSpecConnectionString) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSpecConnectionString.
func (in *StandardSpecConnectionString) DeepCopy() *StandardSpecConnectionString {
	if in == nil {
		return nil
	}
	out := new(StandardSpecConnectionString)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSpecIdentity) DeepCopyInto(out *StandardSpecIdentity) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSpecIdentity.
func (in *StandardSpecIdentity) DeepCopy() *StandardSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(StandardSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSpecResource) DeepCopyInto(out *StandardSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AppServicePlanID != nil {
		in, out := &in.AppServicePlanID, &out.AppServicePlanID
		*out = new(string)
		**out = **in
	}
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.BundleVersion != nil {
		in, out := &in.BundleVersion, &out.BundleVersion
		*out = new(string)
		**out = **in
	}
	if in.ClientAffinityEnabled != nil {
		in, out := &in.ClientAffinityEnabled, &out.ClientAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateMode != nil {
		in, out := &in.ClientCertificateMode, &out.ClientCertificateMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = make([]StandardSpecConnectionString, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomDomainVerificationID != nil {
		in, out := &in.CustomDomainVerificationID, &out.CustomDomainVerificationID
		*out = new(string)
		**out = **in
	}
	if in.DefaultHostname != nil {
		in, out := &in.DefaultHostname, &out.DefaultHostname
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HttpsOnly != nil {
		in, out := &in.HttpsOnly, &out.HttpsOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(StandardSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutboundIPAddresses != nil {
		in, out := &in.OutboundIPAddresses, &out.OutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.PossibleOutboundIPAddresses != nil {
		in, out := &in.PossibleOutboundIPAddresses, &out.PossibleOutboundIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SiteConfig != nil {
		in, out := &in.SiteConfig, &out.SiteConfig
		*out = new(StandardSpecSiteConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SiteCredential != nil {
		in, out := &in.SiteCredential, &out.SiteCredential
		*out = make([]StandardSpecSiteCredential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountAccessKey != nil {
		in, out := &in.StorageAccountAccessKey, &out.StorageAccountAccessKey
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountShareName != nil {
		in, out := &in.StorageAccountShareName, &out.StorageAccountShareName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.UseExtensionBundle != nil {
		in, out := &in.UseExtensionBundle, &out.UseExtensionBundle
		*out = new(bool)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSpecResource.
func (in *StandardSpecResource) DeepCopy() *StandardSpecResource {
	if in == nil {
		return nil
	}
	out := new(StandardSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSpecSiteConfig) DeepCopyInto(out *StandardSpecSiteConfig) {
	*out = *in
	if in.AlwaysOn != nil {
		in, out := &in.AlwaysOn, &out.AlwaysOn
		*out = new(bool)
		**out = **in
	}
	if in.AppScaleLimit != nil {
		in, out := &in.AppScaleLimit, &out.AppScaleLimit
		*out = new(int64)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = new(StandardSpecSiteConfigCors)
		(*in).DeepCopyInto(*out)
	}
	if in.DotnetFrameworkVersion != nil {
		in, out := &in.DotnetFrameworkVersion, &out.DotnetFrameworkVersion
		*out = new(string)
		**out = **in
	}
	if in.ElasticInstanceMinimum != nil {
		in, out := &in.ElasticInstanceMinimum, &out.ElasticInstanceMinimum
		*out = new(int64)
		**out = **in
	}
	if in.FtpsState != nil {
		in, out := &in.FtpsState, &out.FtpsState
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IpRestriction != nil {
		in, out := &in.IpRestriction, &out.IpRestriction
		*out = make([]StandardSpecSiteConfigIpRestriction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LinuxFxVersion != nil {
		in, out := &in.LinuxFxVersion, &out.LinuxFxVersion
		*out = new(string)
		**out = **in
	}
	if in.MinTlsVersion != nil {
		in, out := &in.MinTlsVersion, &out.MinTlsVersion
		*out = new(string)
		**out = **in
	}
	if in.PreWarmedInstanceCount != nil {
		in, out := &in.PreWarmedInstanceCount, &out.PreWarmedInstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.RuntimeScaleMonitoringEnabled != nil {
		in, out := &in.RuntimeScaleMonitoringEnabled, &out.RuntimeScaleMonitoringEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Use32BitWorkerProcess != nil {
		in, out := &in.Use32BitWorkerProcess, &out.Use32BitWorkerProcess
		*out = new(bool)
		**out = **in
	}
	if in.VnetRouteAllEnabled != nil {
		in, out := &in.VnetRouteAllEnabled, &out.VnetRouteAllEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WebsocketsEnabled != nil {
		in, out := &in.WebsocketsEnabled, &out.WebsocketsEnabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSpecSiteConfig.
func (in *StandardSpecSiteConfig) DeepCopy() *StandardSpecSiteConfig {
	if in == nil {
		return nil
	}
	out := new(StandardSpecSiteConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSpecSiteConfigCors) DeepCopyInto(out *StandardSpecSiteConfigCors) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SupportCredentials != nil {
		in, out := &in.SupportCredentials, &out.SupportCredentials
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSpecSiteConfigCors.
func (in *StandardSpecSiteConfigCors) DeepCopy() *StandardSpecSiteConfigCors {
	if in == nil {
		return nil
	}
	out := new(StandardSpecSiteConfigCors)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSpecSiteConfigIpRestriction) DeepCopyInto(out *StandardSpecSiteConfigIpRestriction) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = new(StandardSpecSiteConfigIpRestrictionHeaders)
		(*in).DeepCopyInto(*out)
	}
	if in.IpAddress != nil {
		in, out := &in.IpAddress, &out.IpAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.ServiceTag != nil {
		in, out := &in.ServiceTag, &out.ServiceTag
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkSubnetID != nil {
		in, out := &in.VirtualNetworkSubnetID, &out.VirtualNetworkSubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSpecSiteConfigIpRestriction.
func (in *StandardSpecSiteConfigIpRestriction) DeepCopy() *StandardSpecSiteConfigIpRestriction {
	if in == nil {
		return nil
	}
	out := new(StandardSpecSiteConfigIpRestriction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSpecSiteConfigIpRestrictionHeaders) DeepCopyInto(out *StandardSpecSiteConfigIpRestrictionHeaders) {
	*out = *in
	if in.XAzureFdid != nil {
		in, out := &in.XAzureFdid, &out.XAzureFdid
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.XFdHealthProbe != nil {
		in, out := &in.XFdHealthProbe, &out.XFdHealthProbe
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.XForwardedFor != nil {
		in, out := &in.XForwardedFor, &out.XForwardedFor
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.XForwardedHost != nil {
		in, out := &in.XForwardedHost, &out.XForwardedHost
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSpecSiteConfigIpRestrictionHeaders.
func (in *StandardSpecSiteConfigIpRestrictionHeaders) DeepCopy() *StandardSpecSiteConfigIpRestrictionHeaders {
	if in == nil {
		return nil
	}
	out := new(StandardSpecSiteConfigIpRestrictionHeaders)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardSpecSiteCredential) DeepCopyInto(out *StandardSpecSiteCredential) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardSpecSiteCredential.
func (in *StandardSpecSiteCredential) DeepCopy() *StandardSpecSiteCredential {
	if in == nil {
		return nil
	}
	out := new(StandardSpecSiteCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardStatus) DeepCopyInto(out *StandardStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardStatus.
func (in *StandardStatus) DeepCopy() *StandardStatus {
	if in == nil {
		return nil
	}
	out := new(StandardStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerCustom) DeepCopyInto(out *TriggerCustom) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerCustom.
func (in *TriggerCustom) DeepCopy() *TriggerCustom {
	if in == nil {
		return nil
	}
	out := new(TriggerCustom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TriggerCustom) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerCustomList) DeepCopyInto(out *TriggerCustomList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TriggerCustom, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerCustomList.
func (in *TriggerCustomList) DeepCopy() *TriggerCustomList {
	if in == nil {
		return nil
	}
	out := new(TriggerCustomList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TriggerCustomList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerCustomSpec) DeepCopyInto(out *TriggerCustomSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(TriggerCustomSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerCustomSpec.
func (in *TriggerCustomSpec) DeepCopy() *TriggerCustomSpec {
	if in == nil {
		return nil
	}
	out := new(TriggerCustomSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerCustomSpecResource) DeepCopyInto(out *TriggerCustomSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.LogicAppID != nil {
		in, out := &in.LogicAppID, &out.LogicAppID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerCustomSpecResource.
func (in *TriggerCustomSpecResource) DeepCopy() *TriggerCustomSpecResource {
	if in == nil {
		return nil
	}
	out := new(TriggerCustomSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerCustomStatus) DeepCopyInto(out *TriggerCustomStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerCustomStatus.
func (in *TriggerCustomStatus) DeepCopy() *TriggerCustomStatus {
	if in == nil {
		return nil
	}
	out := new(TriggerCustomStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerHTTPRequest) DeepCopyInto(out *TriggerHTTPRequest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerHTTPRequest.
func (in *TriggerHTTPRequest) DeepCopy() *TriggerHTTPRequest {
	if in == nil {
		return nil
	}
	out := new(TriggerHTTPRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TriggerHTTPRequest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerHTTPRequestList) DeepCopyInto(out *TriggerHTTPRequestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TriggerHTTPRequest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerHTTPRequestList.
func (in *TriggerHTTPRequestList) DeepCopy() *TriggerHTTPRequestList {
	if in == nil {
		return nil
	}
	out := new(TriggerHTTPRequestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TriggerHTTPRequestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerHTTPRequestSpec) DeepCopyInto(out *TriggerHTTPRequestSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(TriggerHTTPRequestSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerHTTPRequestSpec.
func (in *TriggerHTTPRequestSpec) DeepCopy() *TriggerHTTPRequestSpec {
	if in == nil {
		return nil
	}
	out := new(TriggerHTTPRequestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerHTTPRequestSpecResource) DeepCopyInto(out *TriggerHTTPRequestSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CallbackURL != nil {
		in, out := &in.CallbackURL, &out.CallbackURL
		*out = new(string)
		**out = **in
	}
	if in.LogicAppID != nil {
		in, out := &in.LogicAppID, &out.LogicAppID
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RelativePath != nil {
		in, out := &in.RelativePath, &out.RelativePath
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerHTTPRequestSpecResource.
func (in *TriggerHTTPRequestSpecResource) DeepCopy() *TriggerHTTPRequestSpecResource {
	if in == nil {
		return nil
	}
	out := new(TriggerHTTPRequestSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerHTTPRequestStatus) DeepCopyInto(out *TriggerHTTPRequestStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerHTTPRequestStatus.
func (in *TriggerHTTPRequestStatus) DeepCopy() *TriggerHTTPRequestStatus {
	if in == nil {
		return nil
	}
	out := new(TriggerHTTPRequestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerRecurrence) DeepCopyInto(out *TriggerRecurrence) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerRecurrence.
func (in *TriggerRecurrence) DeepCopy() *TriggerRecurrence {
	if in == nil {
		return nil
	}
	out := new(TriggerRecurrence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TriggerRecurrence) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerRecurrenceList) DeepCopyInto(out *TriggerRecurrenceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TriggerRecurrence, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerRecurrenceList.
func (in *TriggerRecurrenceList) DeepCopy() *TriggerRecurrenceList {
	if in == nil {
		return nil
	}
	out := new(TriggerRecurrenceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TriggerRecurrenceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerRecurrenceSpec) DeepCopyInto(out *TriggerRecurrenceSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(TriggerRecurrenceSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerRecurrenceSpec.
func (in *TriggerRecurrenceSpec) DeepCopy() *TriggerRecurrenceSpec {
	if in == nil {
		return nil
	}
	out := new(TriggerRecurrenceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerRecurrenceSpecResource) DeepCopyInto(out *TriggerRecurrenceSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(int64)
		**out = **in
	}
	if in.LogicAppID != nil {
		in, out := &in.LogicAppID, &out.LogicAppID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(TriggerRecurrenceSpecSchedule)
		(*in).DeepCopyInto(*out)
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerRecurrenceSpecResource.
func (in *TriggerRecurrenceSpecResource) DeepCopy() *TriggerRecurrenceSpecResource {
	if in == nil {
		return nil
	}
	out := new(TriggerRecurrenceSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerRecurrenceSpecSchedule) DeepCopyInto(out *TriggerRecurrenceSpecSchedule) {
	*out = *in
	if in.AtTheseHours != nil {
		in, out := &in.AtTheseHours, &out.AtTheseHours
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.AtTheseMinutes != nil {
		in, out := &in.AtTheseMinutes, &out.AtTheseMinutes
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.OnTheseDays != nil {
		in, out := &in.OnTheseDays, &out.OnTheseDays
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerRecurrenceSpecSchedule.
func (in *TriggerRecurrenceSpecSchedule) DeepCopy() *TriggerRecurrenceSpecSchedule {
	if in == nil {
		return nil
	}
	out := new(TriggerRecurrenceSpecSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerRecurrenceStatus) DeepCopyInto(out *TriggerRecurrenceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerRecurrenceStatus.
func (in *TriggerRecurrenceStatus) DeepCopy() *TriggerRecurrenceStatus {
	if in == nil {
		return nil
	}
	out := new(TriggerRecurrenceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workflow) DeepCopyInto(out *Workflow) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workflow.
func (in *Workflow) DeepCopy() *Workflow {
	if in == nil {
		return nil
	}
	out := new(Workflow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Workflow) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowList) DeepCopyInto(out *WorkflowList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workflow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowList.
func (in *WorkflowList) DeepCopy() *WorkflowList {
	if in == nil {
		return nil
	}
	out := new(WorkflowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkflowList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpec) DeepCopyInto(out *WorkflowSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(WorkflowSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpec.
func (in *WorkflowSpec) DeepCopy() *WorkflowSpec {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpecAccessControl) DeepCopyInto(out *WorkflowSpecAccessControl) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(WorkflowSpecAccessControlAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(WorkflowSpecAccessControlContent)
		(*in).DeepCopyInto(*out)
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(WorkflowSpecAccessControlTrigger)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkflowManagement != nil {
		in, out := &in.WorkflowManagement, &out.WorkflowManagement
		*out = new(WorkflowSpecAccessControlWorkflowManagement)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpecAccessControl.
func (in *WorkflowSpecAccessControl) DeepCopy() *WorkflowSpecAccessControl {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpecAccessControl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpecAccessControlAction) DeepCopyInto(out *WorkflowSpecAccessControlAction) {
	*out = *in
	if in.AllowedCallerIPAddressRange != nil {
		in, out := &in.AllowedCallerIPAddressRange, &out.AllowedCallerIPAddressRange
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpecAccessControlAction.
func (in *WorkflowSpecAccessControlAction) DeepCopy() *WorkflowSpecAccessControlAction {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpecAccessControlAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpecAccessControlContent) DeepCopyInto(out *WorkflowSpecAccessControlContent) {
	*out = *in
	if in.AllowedCallerIPAddressRange != nil {
		in, out := &in.AllowedCallerIPAddressRange, &out.AllowedCallerIPAddressRange
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpecAccessControlContent.
func (in *WorkflowSpecAccessControlContent) DeepCopy() *WorkflowSpecAccessControlContent {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpecAccessControlContent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpecAccessControlTrigger) DeepCopyInto(out *WorkflowSpecAccessControlTrigger) {
	*out = *in
	if in.AllowedCallerIPAddressRange != nil {
		in, out := &in.AllowedCallerIPAddressRange, &out.AllowedCallerIPAddressRange
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OpenAuthenticationPolicy != nil {
		in, out := &in.OpenAuthenticationPolicy, &out.OpenAuthenticationPolicy
		*out = make([]WorkflowSpecAccessControlTriggerOpenAuthenticationPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpecAccessControlTrigger.
func (in *WorkflowSpecAccessControlTrigger) DeepCopy() *WorkflowSpecAccessControlTrigger {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpecAccessControlTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpecAccessControlTriggerOpenAuthenticationPolicy) DeepCopyInto(out *WorkflowSpecAccessControlTriggerOpenAuthenticationPolicy) {
	*out = *in
	if in.Claim != nil {
		in, out := &in.Claim, &out.Claim
		*out = make([]WorkflowSpecAccessControlTriggerOpenAuthenticationPolicyClaim, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpecAccessControlTriggerOpenAuthenticationPolicy.
func (in *WorkflowSpecAccessControlTriggerOpenAuthenticationPolicy) DeepCopy() *WorkflowSpecAccessControlTriggerOpenAuthenticationPolicy {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpecAccessControlTriggerOpenAuthenticationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpecAccessControlTriggerOpenAuthenticationPolicyClaim) DeepCopyInto(out *WorkflowSpecAccessControlTriggerOpenAuthenticationPolicyClaim) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpecAccessControlTriggerOpenAuthenticationPolicyClaim.
func (in *WorkflowSpecAccessControlTriggerOpenAuthenticationPolicyClaim) DeepCopy() *WorkflowSpecAccessControlTriggerOpenAuthenticationPolicyClaim {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpecAccessControlTriggerOpenAuthenticationPolicyClaim)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpecAccessControlWorkflowManagement) DeepCopyInto(out *WorkflowSpecAccessControlWorkflowManagement) {
	*out = *in
	if in.AllowedCallerIPAddressRange != nil {
		in, out := &in.AllowedCallerIPAddressRange, &out.AllowedCallerIPAddressRange
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpecAccessControlWorkflowManagement.
func (in *WorkflowSpecAccessControlWorkflowManagement) DeepCopy() *WorkflowSpecAccessControlWorkflowManagement {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpecAccessControlWorkflowManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpecIdentity) DeepCopyInto(out *WorkflowSpecIdentity) {
	*out = *in
	if in.IdentityIDS != nil {
		in, out := &in.IdentityIDS, &out.IdentityIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpecIdentity.
func (in *WorkflowSpecIdentity) DeepCopy() *WorkflowSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpecResource) DeepCopyInto(out *WorkflowSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AccessControl != nil {
		in, out := &in.AccessControl, &out.AccessControl
		*out = new(WorkflowSpecAccessControl)
		(*in).DeepCopyInto(*out)
	}
	if in.AccessEndpoint != nil {
		in, out := &in.AccessEndpoint, &out.AccessEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ConnectorEndpointIPAddresses != nil {
		in, out := &in.ConnectorEndpointIPAddresses, &out.ConnectorEndpointIPAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConnectorOutboundIPAddresses != nil {
		in, out := &in.ConnectorOutboundIPAddresses, &out.ConnectorOutboundIPAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(WorkflowSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.IntegrationServiceEnvironmentID != nil {
		in, out := &in.IntegrationServiceEnvironmentID, &out.IntegrationServiceEnvironmentID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.LogicAppIntegrationAccountID != nil {
		in, out := &in.LogicAppIntegrationAccountID, &out.LogicAppIntegrationAccountID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.WorkflowEndpointIPAddresses != nil {
		in, out := &in.WorkflowEndpointIPAddresses, &out.WorkflowEndpointIPAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.WorkflowOutboundIPAddresses != nil {
		in, out := &in.WorkflowOutboundIPAddresses, &out.WorkflowOutboundIPAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.WorkflowParameters != nil {
		in, out := &in.WorkflowParameters, &out.WorkflowParameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.WorkflowSchema != nil {
		in, out := &in.WorkflowSchema, &out.WorkflowSchema
		*out = new(string)
		**out = **in
	}
	if in.WorkflowVersion != nil {
		in, out := &in.WorkflowVersion, &out.WorkflowVersion
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpecResource.
func (in *WorkflowSpecResource) DeepCopy() *WorkflowSpecResource {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowStatus) DeepCopyInto(out *WorkflowStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowStatus.
func (in *WorkflowStatus) DeepCopy() *WorkflowStatus {
	if in == nil {
		return nil
	}
	out := new(WorkflowStatus)
	in.DeepCopyInto(out)
	return out
}
