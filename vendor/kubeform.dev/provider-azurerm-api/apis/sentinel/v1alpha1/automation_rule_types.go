/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AutomationRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AutomationRuleSpec   `json:"spec,omitempty"`
	Status            AutomationRuleStatus `json:"status,omitempty"`
}

type AutomationRuleSpecActionIncident struct {
	// +optional
	Classification *string `json:"classification,omitempty" tf:"classification"`
	// +optional
	ClassificationComment *string `json:"classificationComment,omitempty" tf:"classification_comment"`
	// +optional
	Labels []string `json:"labels,omitempty" tf:"labels"`
	Order  *int64   `json:"order" tf:"order"`
	// +optional
	OwnerID *string `json:"ownerID,omitempty" tf:"owner_id"`
	// +optional
	Severity *string `json:"severity,omitempty" tf:"severity"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
}

type AutomationRuleSpecActionPlaybook struct {
	LogicAppID *string `json:"logicAppID" tf:"logic_app_id"`
	Order      *int64  `json:"order" tf:"order"`
	// +optional
	TenantID *string `json:"tenantID,omitempty" tf:"tenant_id"`
}

type AutomationRuleSpecCondition struct {
	Operator *string  `json:"operator" tf:"operator"`
	Property *string  `json:"property" tf:"property"`
	Values   []string `json:"values" tf:"values"`
}

type AutomationRuleSpec struct {
	State *AutomationRuleSpecResource `json:"state,omitempty" tf:"-"`

	Resource AutomationRuleSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type AutomationRuleSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	ActionIncident []AutomationRuleSpecActionIncident `json:"actionIncident,omitempty" tf:"action_incident"`
	// +optional
	ActionPlaybook []AutomationRuleSpecActionPlaybook `json:"actionPlaybook,omitempty" tf:"action_playbook"`
	// +optional
	Condition   []AutomationRuleSpecCondition `json:"condition,omitempty" tf:"condition"`
	DisplayName *string                       `json:"displayName" tf:"display_name"`
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// +optional
	Expiration              *string `json:"expiration,omitempty" tf:"expiration"`
	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceID" tf:"log_analytics_workspace_id"`
	Name                    *string `json:"name" tf:"name"`
	Order                   *int64  `json:"order" tf:"order"`
}

type AutomationRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AutomationRuleList is a list of AutomationRules
type AutomationRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AutomationRule CRD objects
	Items []AutomationRule `json:"items,omitempty"`
}
