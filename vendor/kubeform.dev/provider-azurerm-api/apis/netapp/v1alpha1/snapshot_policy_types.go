/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SnapshotPolicy struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SnapshotPolicySpec   `json:"spec,omitempty"`
	Status            SnapshotPolicyStatus `json:"status,omitempty"`
}

type SnapshotPolicySpecDailySchedule struct {
	Hour            *int64 `json:"hour" tf:"hour"`
	Minute          *int64 `json:"minute" tf:"minute"`
	SnapshotsToKeep *int64 `json:"snapshotsToKeep" tf:"snapshots_to_keep"`
}

type SnapshotPolicySpecHourlySchedule struct {
	Minute          *int64 `json:"minute" tf:"minute"`
	SnapshotsToKeep *int64 `json:"snapshotsToKeep" tf:"snapshots_to_keep"`
}

type SnapshotPolicySpecMonthlySchedule struct {
	// +kubebuilder:validation:MaxItems=30
	DaysOfMonth     []int64 `json:"daysOfMonth" tf:"days_of_month"`
	Hour            *int64  `json:"hour" tf:"hour"`
	Minute          *int64  `json:"minute" tf:"minute"`
	SnapshotsToKeep *int64  `json:"snapshotsToKeep" tf:"snapshots_to_keep"`
}

type SnapshotPolicySpecWeeklySchedule struct {
	// +kubebuilder:validation:MaxItems=7
	DaysOfWeek      []string `json:"daysOfWeek" tf:"days_of_week"`
	Hour            *int64   `json:"hour" tf:"hour"`
	Minute          *int64   `json:"minute" tf:"minute"`
	SnapshotsToKeep *int64   `json:"snapshotsToKeep" tf:"snapshots_to_keep"`
}

type SnapshotPolicySpec struct {
	State *SnapshotPolicySpecResource `json:"state,omitempty" tf:"-"`

	Resource SnapshotPolicySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type SnapshotPolicySpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AccountName *string `json:"accountName" tf:"account_name"`
	// +optional
	DailySchedule *SnapshotPolicySpecDailySchedule `json:"dailySchedule,omitempty" tf:"daily_schedule"`
	Enabled       *bool                            `json:"enabled" tf:"enabled"`
	// +optional
	HourlySchedule *SnapshotPolicySpecHourlySchedule `json:"hourlySchedule,omitempty" tf:"hourly_schedule"`
	Location       *string                           `json:"location" tf:"location"`
	// +optional
	MonthlySchedule   *SnapshotPolicySpecMonthlySchedule `json:"monthlySchedule,omitempty" tf:"monthly_schedule"`
	Name              *string                            `json:"name" tf:"name"`
	ResourceGroupName *string                            `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	WeeklySchedule *SnapshotPolicySpecWeeklySchedule `json:"weeklySchedule,omitempty" tf:"weekly_schedule"`
}

type SnapshotPolicyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SnapshotPolicyList is a list of SnapshotPolicys
type SnapshotPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SnapshotPolicy CRD objects
	Items []SnapshotPolicy `json:"items,omitempty"`
}
