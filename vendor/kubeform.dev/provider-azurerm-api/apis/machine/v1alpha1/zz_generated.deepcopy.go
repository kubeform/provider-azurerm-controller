//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeCluster) DeepCopyInto(out *LearningComputeCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeCluster.
func (in *LearningComputeCluster) DeepCopy() *LearningComputeCluster {
	if in == nil {
		return nil
	}
	out := new(LearningComputeCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LearningComputeCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeClusterList) DeepCopyInto(out *LearningComputeClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LearningComputeCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeClusterList.
func (in *LearningComputeClusterList) DeepCopy() *LearningComputeClusterList {
	if in == nil {
		return nil
	}
	out := new(LearningComputeClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LearningComputeClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeClusterSpec) DeepCopyInto(out *LearningComputeClusterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LearningComputeClusterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeClusterSpec.
func (in *LearningComputeClusterSpec) DeepCopy() *LearningComputeClusterSpec {
	if in == nil {
		return nil
	}
	out := new(LearningComputeClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeClusterSpecIdentity) DeepCopyInto(out *LearningComputeClusterSpecIdentity) {
	*out = *in
	if in.IdentityIDS != nil {
		in, out := &in.IdentityIDS, &out.IdentityIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeClusterSpecIdentity.
func (in *LearningComputeClusterSpecIdentity) DeepCopy() *LearningComputeClusterSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(LearningComputeClusterSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeClusterSpecResource) DeepCopyInto(out *LearningComputeClusterSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(LearningComputeClusterSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalAuthEnabled != nil {
		in, out := &in.LocalAuthEnabled, &out.LocalAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MachineLearningWorkspaceID != nil {
		in, out := &in.MachineLearningWorkspaceID, &out.MachineLearningWorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScaleSettings != nil {
		in, out := &in.ScaleSettings, &out.ScaleSettings
		*out = new(LearningComputeClusterSpecScaleSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.Ssh != nil {
		in, out := &in.Ssh, &out.Ssh
		*out = new(LearningComputeClusterSpecSsh)
		(*in).DeepCopyInto(*out)
	}
	if in.SshPublicAccessEnabled != nil {
		in, out := &in.SshPublicAccessEnabled, &out.SshPublicAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SubnetResourceID != nil {
		in, out := &in.SubnetResourceID, &out.SubnetResourceID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.VmPriority != nil {
		in, out := &in.VmPriority, &out.VmPriority
		*out = new(string)
		**out = **in
	}
	if in.VmSize != nil {
		in, out := &in.VmSize, &out.VmSize
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeClusterSpecResource.
func (in *LearningComputeClusterSpecResource) DeepCopy() *LearningComputeClusterSpecResource {
	if in == nil {
		return nil
	}
	out := new(LearningComputeClusterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeClusterSpecScaleSettings) DeepCopyInto(out *LearningComputeClusterSpecScaleSettings) {
	*out = *in
	if in.MaxNodeCount != nil {
		in, out := &in.MaxNodeCount, &out.MaxNodeCount
		*out = new(int64)
		**out = **in
	}
	if in.MinNodeCount != nil {
		in, out := &in.MinNodeCount, &out.MinNodeCount
		*out = new(int64)
		**out = **in
	}
	if in.ScaleDownNodesAfterIdleDuration != nil {
		in, out := &in.ScaleDownNodesAfterIdleDuration, &out.ScaleDownNodesAfterIdleDuration
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeClusterSpecScaleSettings.
func (in *LearningComputeClusterSpecScaleSettings) DeepCopy() *LearningComputeClusterSpecScaleSettings {
	if in == nil {
		return nil
	}
	out := new(LearningComputeClusterSpecScaleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeClusterSpecSsh) DeepCopyInto(out *LearningComputeClusterSpecSsh) {
	*out = *in
	if in.AdminPassword != nil {
		in, out := &in.AdminPassword, &out.AdminPassword
		*out = new(string)
		**out = **in
	}
	if in.AdminUsername != nil {
		in, out := &in.AdminUsername, &out.AdminUsername
		*out = new(string)
		**out = **in
	}
	if in.KeyValue != nil {
		in, out := &in.KeyValue, &out.KeyValue
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeClusterSpecSsh.
func (in *LearningComputeClusterSpecSsh) DeepCopy() *LearningComputeClusterSpecSsh {
	if in == nil {
		return nil
	}
	out := new(LearningComputeClusterSpecSsh)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeClusterStatus) DeepCopyInto(out *LearningComputeClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeClusterStatus.
func (in *LearningComputeClusterStatus) DeepCopy() *LearningComputeClusterStatus {
	if in == nil {
		return nil
	}
	out := new(LearningComputeClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeInstance) DeepCopyInto(out *LearningComputeInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeInstance.
func (in *LearningComputeInstance) DeepCopy() *LearningComputeInstance {
	if in == nil {
		return nil
	}
	out := new(LearningComputeInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LearningComputeInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeInstanceList) DeepCopyInto(out *LearningComputeInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LearningComputeInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeInstanceList.
func (in *LearningComputeInstanceList) DeepCopy() *LearningComputeInstanceList {
	if in == nil {
		return nil
	}
	out := new(LearningComputeInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LearningComputeInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeInstanceSpec) DeepCopyInto(out *LearningComputeInstanceSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LearningComputeInstanceSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeInstanceSpec.
func (in *LearningComputeInstanceSpec) DeepCopy() *LearningComputeInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(LearningComputeInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeInstanceSpecAssignToUser) DeepCopyInto(out *LearningComputeInstanceSpecAssignToUser) {
	*out = *in
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeInstanceSpecAssignToUser.
func (in *LearningComputeInstanceSpecAssignToUser) DeepCopy() *LearningComputeInstanceSpecAssignToUser {
	if in == nil {
		return nil
	}
	out := new(LearningComputeInstanceSpecAssignToUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeInstanceSpecIdentity) DeepCopyInto(out *LearningComputeInstanceSpecIdentity) {
	*out = *in
	if in.IdentityIDS != nil {
		in, out := &in.IdentityIDS, &out.IdentityIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeInstanceSpecIdentity.
func (in *LearningComputeInstanceSpecIdentity) DeepCopy() *LearningComputeInstanceSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(LearningComputeInstanceSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeInstanceSpecResource) DeepCopyInto(out *LearningComputeInstanceSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AssignToUser != nil {
		in, out := &in.AssignToUser, &out.AssignToUser
		*out = new(LearningComputeInstanceSpecAssignToUser)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(LearningComputeInstanceSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalAuthEnabled != nil {
		in, out := &in.LocalAuthEnabled, &out.LocalAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MachineLearningWorkspaceID != nil {
		in, out := &in.MachineLearningWorkspaceID, &out.MachineLearningWorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ssh != nil {
		in, out := &in.Ssh, &out.Ssh
		*out = new(LearningComputeInstanceSpecSsh)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetResourceID != nil {
		in, out := &in.SubnetResourceID, &out.SubnetResourceID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.VirtualMachineSize != nil {
		in, out := &in.VirtualMachineSize, &out.VirtualMachineSize
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeInstanceSpecResource.
func (in *LearningComputeInstanceSpecResource) DeepCopy() *LearningComputeInstanceSpecResource {
	if in == nil {
		return nil
	}
	out := new(LearningComputeInstanceSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeInstanceSpecSsh) DeepCopyInto(out *LearningComputeInstanceSpecSsh) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeInstanceSpecSsh.
func (in *LearningComputeInstanceSpecSsh) DeepCopy() *LearningComputeInstanceSpecSsh {
	if in == nil {
		return nil
	}
	out := new(LearningComputeInstanceSpecSsh)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningComputeInstanceStatus) DeepCopyInto(out *LearningComputeInstanceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningComputeInstanceStatus.
func (in *LearningComputeInstanceStatus) DeepCopy() *LearningComputeInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(LearningComputeInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningInferenceCluster) DeepCopyInto(out *LearningInferenceCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningInferenceCluster.
func (in *LearningInferenceCluster) DeepCopy() *LearningInferenceCluster {
	if in == nil {
		return nil
	}
	out := new(LearningInferenceCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LearningInferenceCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningInferenceClusterList) DeepCopyInto(out *LearningInferenceClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LearningInferenceCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningInferenceClusterList.
func (in *LearningInferenceClusterList) DeepCopy() *LearningInferenceClusterList {
	if in == nil {
		return nil
	}
	out := new(LearningInferenceClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LearningInferenceClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningInferenceClusterSpec) DeepCopyInto(out *LearningInferenceClusterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LearningInferenceClusterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningInferenceClusterSpec.
func (in *LearningInferenceClusterSpec) DeepCopy() *LearningInferenceClusterSpec {
	if in == nil {
		return nil
	}
	out := new(LearningInferenceClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningInferenceClusterSpecIdentity) DeepCopyInto(out *LearningInferenceClusterSpecIdentity) {
	*out = *in
	if in.IdentityIDS != nil {
		in, out := &in.IdentityIDS, &out.IdentityIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningInferenceClusterSpecIdentity.
func (in *LearningInferenceClusterSpecIdentity) DeepCopy() *LearningInferenceClusterSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(LearningInferenceClusterSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningInferenceClusterSpecResource) DeepCopyInto(out *LearningInferenceClusterSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterPurpose != nil {
		in, out := &in.ClusterPurpose, &out.ClusterPurpose
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(LearningInferenceClusterSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.KubernetesClusterID != nil {
		in, out := &in.KubernetesClusterID, &out.KubernetesClusterID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MachineLearningWorkspaceID != nil {
		in, out := &in.MachineLearningWorkspaceID, &out.MachineLearningWorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ssl != nil {
		in, out := &in.Ssl, &out.Ssl
		*out = new(LearningInferenceClusterSpecSsl)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningInferenceClusterSpecResource.
func (in *LearningInferenceClusterSpecResource) DeepCopy() *LearningInferenceClusterSpecResource {
	if in == nil {
		return nil
	}
	out := new(LearningInferenceClusterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningInferenceClusterSpecSsl) DeepCopyInto(out *LearningInferenceClusterSpecSsl) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.LeafDomainLabel != nil {
		in, out := &in.LeafDomainLabel, &out.LeafDomainLabel
		*out = new(string)
		**out = **in
	}
	if in.OverwriteExistingDomain != nil {
		in, out := &in.OverwriteExistingDomain, &out.OverwriteExistingDomain
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningInferenceClusterSpecSsl.
func (in *LearningInferenceClusterSpecSsl) DeepCopy() *LearningInferenceClusterSpecSsl {
	if in == nil {
		return nil
	}
	out := new(LearningInferenceClusterSpecSsl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningInferenceClusterStatus) DeepCopyInto(out *LearningInferenceClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningInferenceClusterStatus.
func (in *LearningInferenceClusterStatus) DeepCopy() *LearningInferenceClusterStatus {
	if in == nil {
		return nil
	}
	out := new(LearningInferenceClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningSynapseSpark) DeepCopyInto(out *LearningSynapseSpark) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningSynapseSpark.
func (in *LearningSynapseSpark) DeepCopy() *LearningSynapseSpark {
	if in == nil {
		return nil
	}
	out := new(LearningSynapseSpark)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LearningSynapseSpark) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningSynapseSparkList) DeepCopyInto(out *LearningSynapseSparkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LearningSynapseSpark, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningSynapseSparkList.
func (in *LearningSynapseSparkList) DeepCopy() *LearningSynapseSparkList {
	if in == nil {
		return nil
	}
	out := new(LearningSynapseSparkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LearningSynapseSparkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningSynapseSparkSpec) DeepCopyInto(out *LearningSynapseSparkSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LearningSynapseSparkSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningSynapseSparkSpec.
func (in *LearningSynapseSparkSpec) DeepCopy() *LearningSynapseSparkSpec {
	if in == nil {
		return nil
	}
	out := new(LearningSynapseSparkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningSynapseSparkSpecIdentity) DeepCopyInto(out *LearningSynapseSparkSpecIdentity) {
	*out = *in
	if in.IdentityIDS != nil {
		in, out := &in.IdentityIDS, &out.IdentityIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningSynapseSparkSpecIdentity.
func (in *LearningSynapseSparkSpecIdentity) DeepCopy() *LearningSynapseSparkSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(LearningSynapseSparkSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningSynapseSparkSpecResource) DeepCopyInto(out *LearningSynapseSparkSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(LearningSynapseSparkSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalAuthEnabled != nil {
		in, out := &in.LocalAuthEnabled, &out.LocalAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MachineLearningWorkspaceID != nil {
		in, out := &in.MachineLearningWorkspaceID, &out.MachineLearningWorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SynapseSparkPoolID != nil {
		in, out := &in.SynapseSparkPoolID, &out.SynapseSparkPoolID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningSynapseSparkSpecResource.
func (in *LearningSynapseSparkSpecResource) DeepCopy() *LearningSynapseSparkSpecResource {
	if in == nil {
		return nil
	}
	out := new(LearningSynapseSparkSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningSynapseSparkStatus) DeepCopyInto(out *LearningSynapseSparkStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningSynapseSparkStatus.
func (in *LearningSynapseSparkStatus) DeepCopy() *LearningSynapseSparkStatus {
	if in == nil {
		return nil
	}
	out := new(LearningSynapseSparkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningWorkspace) DeepCopyInto(out *LearningWorkspace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningWorkspace.
func (in *LearningWorkspace) DeepCopy() *LearningWorkspace {
	if in == nil {
		return nil
	}
	out := new(LearningWorkspace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LearningWorkspace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningWorkspaceList) DeepCopyInto(out *LearningWorkspaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LearningWorkspace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningWorkspaceList.
func (in *LearningWorkspaceList) DeepCopy() *LearningWorkspaceList {
	if in == nil {
		return nil
	}
	out := new(LearningWorkspaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LearningWorkspaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningWorkspaceSpec) DeepCopyInto(out *LearningWorkspaceSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(LearningWorkspaceSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningWorkspaceSpec.
func (in *LearningWorkspaceSpec) DeepCopy() *LearningWorkspaceSpec {
	if in == nil {
		return nil
	}
	out := new(LearningWorkspaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningWorkspaceSpecEncryption) DeepCopyInto(out *LearningWorkspaceSpecEncryption) {
	*out = *in
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentityID != nil {
		in, out := &in.UserAssignedIdentityID, &out.UserAssignedIdentityID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningWorkspaceSpecEncryption.
func (in *LearningWorkspaceSpecEncryption) DeepCopy() *LearningWorkspaceSpecEncryption {
	if in == nil {
		return nil
	}
	out := new(LearningWorkspaceSpecEncryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningWorkspaceSpecIdentity) DeepCopyInto(out *LearningWorkspaceSpecIdentity) {
	*out = *in
	if in.IdentityIDS != nil {
		in, out := &in.IdentityIDS, &out.IdentityIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningWorkspaceSpecIdentity.
func (in *LearningWorkspaceSpecIdentity) DeepCopy() *LearningWorkspaceSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(LearningWorkspaceSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningWorkspaceSpecResource) DeepCopyInto(out *LearningWorkspaceSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ApplicationInsightsID != nil {
		in, out := &in.ApplicationInsightsID, &out.ApplicationInsightsID
		*out = new(string)
		**out = **in
	}
	if in.ContainerRegistryID != nil {
		in, out := &in.ContainerRegistryID, &out.ContainerRegistryID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoveryURL != nil {
		in, out := &in.DiscoveryURL, &out.DiscoveryURL
		*out = new(string)
		**out = **in
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(LearningWorkspaceSpecEncryption)
		(*in).DeepCopyInto(*out)
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.HighBusinessImpact != nil {
		in, out := &in.HighBusinessImpact, &out.HighBusinessImpact
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(LearningWorkspaceSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.ImageBuildComputeName != nil {
		in, out := &in.ImageBuildComputeName, &out.ImageBuildComputeName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrimaryUserAssignedIdentity != nil {
		in, out := &in.PrimaryUserAssignedIdentity, &out.PrimaryUserAssignedIdentity
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningWorkspaceSpecResource.
func (in *LearningWorkspaceSpecResource) DeepCopy() *LearningWorkspaceSpecResource {
	if in == nil {
		return nil
	}
	out := new(LearningWorkspaceSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningWorkspaceStatus) DeepCopyInto(out *LearningWorkspaceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningWorkspaceStatus.
func (in *LearningWorkspaceStatus) DeepCopy() *LearningWorkspaceStatus {
	if in == nil {
		return nil
	}
	out := new(LearningWorkspaceStatus)
	in.DeepCopyInto(out)
	return out
}
