/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BudgetManagementGroup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BudgetManagementGroupSpec   `json:"spec,omitempty"`
	Status            BudgetManagementGroupStatus `json:"status,omitempty"`
}

type BudgetManagementGroupSpecFilterDimension struct {
	Name *string `json:"name" tf:"name"`
	// +optional
	Operator *string `json:"operator,omitempty" tf:"operator"`
	// +kubebuilder:validation:MinItems=1
	Values []string `json:"values" tf:"values"`
}

type BudgetManagementGroupSpecFilterNotDimension struct {
	Name *string `json:"name" tf:"name"`
	// +optional
	Operator *string `json:"operator,omitempty" tf:"operator"`
	// +kubebuilder:validation:MinItems=1
	Values []string `json:"values" tf:"values"`
}

type BudgetManagementGroupSpecFilterNotTag struct {
	Name *string `json:"name" tf:"name"`
	// +optional
	Operator *string  `json:"operator,omitempty" tf:"operator"`
	Values   []string `json:"values" tf:"values"`
}

type BudgetManagementGroupSpecFilterNot struct {
	// +optional
	Dimension *BudgetManagementGroupSpecFilterNotDimension `json:"dimension,omitempty" tf:"dimension"`
	// +optional
	Tag *BudgetManagementGroupSpecFilterNotTag `json:"tag,omitempty" tf:"tag"`
}

type BudgetManagementGroupSpecFilterTag struct {
	Name *string `json:"name" tf:"name"`
	// +optional
	Operator *string  `json:"operator,omitempty" tf:"operator"`
	Values   []string `json:"values" tf:"values"`
}

type BudgetManagementGroupSpecFilter struct {
	// +optional
	Dimension []BudgetManagementGroupSpecFilterDimension `json:"dimension,omitempty" tf:"dimension"`
	// +optional
	Not *BudgetManagementGroupSpecFilterNot `json:"not,omitempty" tf:"not"`
	// +optional
	Tag []BudgetManagementGroupSpecFilterTag `json:"tag,omitempty" tf:"tag"`
}

type BudgetManagementGroupSpecNotification struct {
	// +kubebuilder:validation:MinItems=1
	ContactEmails []string `json:"contactEmails" tf:"contact_emails"`
	// +optional
	Enabled   *bool   `json:"enabled,omitempty" tf:"enabled"`
	Operator  *string `json:"operator" tf:"operator"`
	Threshold *int64  `json:"threshold" tf:"threshold"`
	// +optional
	ThresholdType *string `json:"thresholdType,omitempty" tf:"threshold_type"`
}

type BudgetManagementGroupSpecTimePeriod struct {
	// +optional
	EndDate   *string `json:"endDate,omitempty" tf:"end_date"`
	StartDate *string `json:"startDate" tf:"start_date"`
}

type BudgetManagementGroupSpec struct {
	State *BudgetManagementGroupSpecResource `json:"state,omitempty" tf:"-"`

	Resource BudgetManagementGroupSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type BudgetManagementGroupSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Amount *float64 `json:"amount" tf:"amount"`
	// +optional
	Etag *string `json:"etag,omitempty" tf:"etag"`
	// +optional
	Filter            *BudgetManagementGroupSpecFilter `json:"filter,omitempty" tf:"filter"`
	ManagementGroupID *string                          `json:"managementGroupID" tf:"management_group_id"`
	Name              *string                          `json:"name" tf:"name"`
	// +kubebuilder:validation:MaxItems=5
	// +kubebuilder:validation:MinItems=1
	Notification []BudgetManagementGroupSpecNotification `json:"notification" tf:"notification"`
	// +optional
	TimeGrain  *string                              `json:"timeGrain,omitempty" tf:"time_grain"`
	TimePeriod *BudgetManagementGroupSpecTimePeriod `json:"timePeriod" tf:"time_period"`
}

type BudgetManagementGroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BudgetManagementGroupList is a list of BudgetManagementGroups
type BudgetManagementGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BudgetManagementGroup CRD objects
	Items []BudgetManagementGroup `json:"items,omitempty"`
}
