/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ManagedInstanceFailoverGroup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagedInstanceFailoverGroupSpec   `json:"spec,omitempty"`
	Status            ManagedInstanceFailoverGroupStatus `json:"status,omitempty"`
}

type ManagedInstanceFailoverGroupSpecPartnerRegion struct {
	// +optional
	Location *string `json:"location,omitempty" tf:"location"`
	// +optional
	Role *string `json:"role,omitempty" tf:"role"`
}

type ManagedInstanceFailoverGroupSpecReadWriteEndpointFailoverPolicy struct {
	// +optional
	GraceMinutes *int64  `json:"graceMinutes,omitempty" tf:"grace_minutes"`
	Mode         *string `json:"mode" tf:"mode"`
}

type ManagedInstanceFailoverGroupSpec struct {
	State *ManagedInstanceFailoverGroupSpecResource `json:"state,omitempty" tf:"-"`

	Resource ManagedInstanceFailoverGroupSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ManagedInstanceFailoverGroupSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Location                 *string `json:"location" tf:"location"`
	ManagedInstanceID        *string `json:"managedInstanceID" tf:"managed_instance_id"`
	Name                     *string `json:"name" tf:"name"`
	PartnerManagedInstanceID *string `json:"partnerManagedInstanceID" tf:"partner_managed_instance_id"`
	// +optional
	PartnerRegion                   []ManagedInstanceFailoverGroupSpecPartnerRegion                  `json:"partnerRegion,omitempty" tf:"partner_region"`
	ReadWriteEndpointFailoverPolicy *ManagedInstanceFailoverGroupSpecReadWriteEndpointFailoverPolicy `json:"readWriteEndpointFailoverPolicy" tf:"read_write_endpoint_failover_policy"`
	// +optional
	ReadonlyEndpointFailoverPolicyEnabled *bool `json:"readonlyEndpointFailoverPolicyEnabled,omitempty" tf:"readonly_endpoint_failover_policy_enabled"`
	// +optional
	Role *string `json:"role,omitempty" tf:"role"`
}

type ManagedInstanceFailoverGroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ManagedInstanceFailoverGroupList is a list of ManagedInstanceFailoverGroups
type ManagedInstanceFailoverGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ManagedInstanceFailoverGroup CRD objects
	Items []ManagedInstanceFailoverGroup `json:"items,omitempty"`
}
