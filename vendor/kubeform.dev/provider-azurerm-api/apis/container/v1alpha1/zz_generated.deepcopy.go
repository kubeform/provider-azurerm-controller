//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Group) DeepCopyInto(out *Group) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Group.
func (in *Group) DeepCopy() *Group {
	if in == nil {
		return nil
	}
	out := new(Group)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Group) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupList) DeepCopyInto(out *GroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Group, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupList.
func (in *GroupList) DeepCopy() *GroupList {
	if in == nil {
		return nil
	}
	out := new(GroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpec) DeepCopyInto(out *GroupSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(GroupSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpec.
func (in *GroupSpec) DeepCopy() *GroupSpec {
	if in == nil {
		return nil
	}
	out := new(GroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecContainer) DeepCopyInto(out *GroupSpecContainer) {
	*out = *in
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Cpu != nil {
		in, out := &in.Cpu, &out.Cpu
		*out = new(float64)
		**out = **in
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = new(GroupSpecContainerGpu)
		(*in).DeepCopyInto(*out)
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(GroupSpecContainerLivenessProbe)
		(*in).DeepCopyInto(*out)
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]GroupSpecContainerPorts, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(GroupSpecContainerReadinessProbe)
		(*in).DeepCopyInto(*out)
	}
	if in.SecureEnvironmentVariables != nil {
		in, out := &in.SecureEnvironmentVariables, &out.SecureEnvironmentVariables
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = make([]GroupSpecContainerVolume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecContainer.
func (in *GroupSpecContainer) DeepCopy() *GroupSpecContainer {
	if in == nil {
		return nil
	}
	out := new(GroupSpecContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecContainerGpu) DeepCopyInto(out *GroupSpecContainerGpu) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int64)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecContainerGpu.
func (in *GroupSpecContainerGpu) DeepCopy() *GroupSpecContainerGpu {
	if in == nil {
		return nil
	}
	out := new(GroupSpecContainerGpu)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecContainerLivenessProbe) DeepCopyInto(out *GroupSpecContainerLivenessProbe) {
	*out = *in
	if in.Exec != nil {
		in, out := &in.Exec, &out.Exec
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailureThreshold != nil {
		in, out := &in.FailureThreshold, &out.FailureThreshold
		*out = new(int64)
		**out = **in
	}
	if in.HttpGet != nil {
		in, out := &in.HttpGet, &out.HttpGet
		*out = make([]GroupSpecContainerLivenessProbeHttpGet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitialDelaySeconds != nil {
		in, out := &in.InitialDelaySeconds, &out.InitialDelaySeconds
		*out = new(int64)
		**out = **in
	}
	if in.PeriodSeconds != nil {
		in, out := &in.PeriodSeconds, &out.PeriodSeconds
		*out = new(int64)
		**out = **in
	}
	if in.SuccessThreshold != nil {
		in, out := &in.SuccessThreshold, &out.SuccessThreshold
		*out = new(int64)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecContainerLivenessProbe.
func (in *GroupSpecContainerLivenessProbe) DeepCopy() *GroupSpecContainerLivenessProbe {
	if in == nil {
		return nil
	}
	out := new(GroupSpecContainerLivenessProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecContainerLivenessProbeHttpGet) DeepCopyInto(out *GroupSpecContainerLivenessProbeHttpGet) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.Scheme != nil {
		in, out := &in.Scheme, &out.Scheme
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecContainerLivenessProbeHttpGet.
func (in *GroupSpecContainerLivenessProbeHttpGet) DeepCopy() *GroupSpecContainerLivenessProbeHttpGet {
	if in == nil {
		return nil
	}
	out := new(GroupSpecContainerLivenessProbeHttpGet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecContainerPorts) DeepCopyInto(out *GroupSpecContainerPorts) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecContainerPorts.
func (in *GroupSpecContainerPorts) DeepCopy() *GroupSpecContainerPorts {
	if in == nil {
		return nil
	}
	out := new(GroupSpecContainerPorts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecContainerReadinessProbe) DeepCopyInto(out *GroupSpecContainerReadinessProbe) {
	*out = *in
	if in.Exec != nil {
		in, out := &in.Exec, &out.Exec
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailureThreshold != nil {
		in, out := &in.FailureThreshold, &out.FailureThreshold
		*out = new(int64)
		**out = **in
	}
	if in.HttpGet != nil {
		in, out := &in.HttpGet, &out.HttpGet
		*out = make([]GroupSpecContainerReadinessProbeHttpGet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitialDelaySeconds != nil {
		in, out := &in.InitialDelaySeconds, &out.InitialDelaySeconds
		*out = new(int64)
		**out = **in
	}
	if in.PeriodSeconds != nil {
		in, out := &in.PeriodSeconds, &out.PeriodSeconds
		*out = new(int64)
		**out = **in
	}
	if in.SuccessThreshold != nil {
		in, out := &in.SuccessThreshold, &out.SuccessThreshold
		*out = new(int64)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecContainerReadinessProbe.
func (in *GroupSpecContainerReadinessProbe) DeepCopy() *GroupSpecContainerReadinessProbe {
	if in == nil {
		return nil
	}
	out := new(GroupSpecContainerReadinessProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecContainerReadinessProbeHttpGet) DeepCopyInto(out *GroupSpecContainerReadinessProbeHttpGet) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.Scheme != nil {
		in, out := &in.Scheme, &out.Scheme
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecContainerReadinessProbeHttpGet.
func (in *GroupSpecContainerReadinessProbeHttpGet) DeepCopy() *GroupSpecContainerReadinessProbeHttpGet {
	if in == nil {
		return nil
	}
	out := new(GroupSpecContainerReadinessProbeHttpGet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecContainerVolume) DeepCopyInto(out *GroupSpecContainerVolume) {
	*out = *in
	if in.EmptyDir != nil {
		in, out := &in.EmptyDir, &out.EmptyDir
		*out = new(bool)
		**out = **in
	}
	if in.GitRepo != nil {
		in, out := &in.GitRepo, &out.GitRepo
		*out = new(GroupSpecContainerVolumeGitRepo)
		(*in).DeepCopyInto(*out)
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ShareName != nil {
		in, out := &in.ShareName, &out.ShareName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountKey != nil {
		in, out := &in.StorageAccountKey, &out.StorageAccountKey
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecContainerVolume.
func (in *GroupSpecContainerVolume) DeepCopy() *GroupSpecContainerVolume {
	if in == nil {
		return nil
	}
	out := new(GroupSpecContainerVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecContainerVolumeGitRepo) DeepCopyInto(out *GroupSpecContainerVolumeGitRepo) {
	*out = *in
	if in.Directory != nil {
		in, out := &in.Directory, &out.Directory
		*out = new(string)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecContainerVolumeGitRepo.
func (in *GroupSpecContainerVolumeGitRepo) DeepCopy() *GroupSpecContainerVolumeGitRepo {
	if in == nil {
		return nil
	}
	out := new(GroupSpecContainerVolumeGitRepo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecDiagnostics) DeepCopyInto(out *GroupSpecDiagnostics) {
	*out = *in
	if in.LogAnalytics != nil {
		in, out := &in.LogAnalytics, &out.LogAnalytics
		*out = new(GroupSpecDiagnosticsLogAnalytics)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecDiagnostics.
func (in *GroupSpecDiagnostics) DeepCopy() *GroupSpecDiagnostics {
	if in == nil {
		return nil
	}
	out := new(GroupSpecDiagnostics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecDiagnosticsLogAnalytics) DeepCopyInto(out *GroupSpecDiagnosticsLogAnalytics) {
	*out = *in
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.WorkspaceID != nil {
		in, out := &in.WorkspaceID, &out.WorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.WorkspaceKey != nil {
		in, out := &in.WorkspaceKey, &out.WorkspaceKey
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecDiagnosticsLogAnalytics.
func (in *GroupSpecDiagnosticsLogAnalytics) DeepCopy() *GroupSpecDiagnosticsLogAnalytics {
	if in == nil {
		return nil
	}
	out := new(GroupSpecDiagnosticsLogAnalytics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecDnsConfig) DeepCopyInto(out *GroupSpecDnsConfig) {
	*out = *in
	if in.Nameservers != nil {
		in, out := &in.Nameservers, &out.Nameservers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SearchDomains != nil {
		in, out := &in.SearchDomains, &out.SearchDomains
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecDnsConfig.
func (in *GroupSpecDnsConfig) DeepCopy() *GroupSpecDnsConfig {
	if in == nil {
		return nil
	}
	out := new(GroupSpecDnsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecExposedPort) DeepCopyInto(out *GroupSpecExposedPort) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecExposedPort.
func (in *GroupSpecExposedPort) DeepCopy() *GroupSpecExposedPort {
	if in == nil {
		return nil
	}
	out := new(GroupSpecExposedPort)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecIdentity) DeepCopyInto(out *GroupSpecIdentity) {
	*out = *in
	if in.IdentityIDS != nil {
		in, out := &in.IdentityIDS, &out.IdentityIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecIdentity.
func (in *GroupSpecIdentity) DeepCopy() *GroupSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(GroupSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecImageRegistryCredential) DeepCopyInto(out *GroupSpecImageRegistryCredential) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecImageRegistryCredential.
func (in *GroupSpecImageRegistryCredential) DeepCopy() *GroupSpecImageRegistryCredential {
	if in == nil {
		return nil
	}
	out := new(GroupSpecImageRegistryCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpecResource) DeepCopyInto(out *GroupSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = make([]GroupSpecContainer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Diagnostics != nil {
		in, out := &in.Diagnostics, &out.Diagnostics
		*out = new(GroupSpecDiagnostics)
		(*in).DeepCopyInto(*out)
	}
	if in.DnsConfig != nil {
		in, out := &in.DnsConfig, &out.DnsConfig
		*out = new(GroupSpecDnsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DnsNameLabel != nil {
		in, out := &in.DnsNameLabel, &out.DnsNameLabel
		*out = new(string)
		**out = **in
	}
	if in.ExposedPort != nil {
		in, out := &in.ExposedPort, &out.ExposedPort
		*out = make([]GroupSpecExposedPort, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(GroupSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.ImageRegistryCredential != nil {
		in, out := &in.ImageRegistryCredential, &out.ImageRegistryCredential
		*out = make([]GroupSpecImageRegistryCredential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpAddress != nil {
		in, out := &in.IpAddress, &out.IpAddress
		*out = new(string)
		**out = **in
	}
	if in.IpAddressType != nil {
		in, out := &in.IpAddressType, &out.IpAddressType
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkProfileID != nil {
		in, out := &in.NetworkProfileID, &out.NetworkProfileID
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RestartPolicy != nil {
		in, out := &in.RestartPolicy, &out.RestartPolicy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpecResource.
func (in *GroupSpecResource) DeepCopy() *GroupSpecResource {
	if in == nil {
		return nil
	}
	out := new(GroupSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupStatus) DeepCopyInto(out *GroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupStatus.
func (in *GroupStatus) DeepCopy() *GroupStatus {
	if in == nil {
		return nil
	}
	out := new(GroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Registry) DeepCopyInto(out *Registry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Registry.
func (in *Registry) DeepCopy() *Registry {
	if in == nil {
		return nil
	}
	out := new(Registry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Registry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryList) DeepCopyInto(out *RegistryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Registry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryList.
func (in *RegistryList) DeepCopy() *RegistryList {
	if in == nil {
		return nil
	}
	out := new(RegistryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryScopeMap) DeepCopyInto(out *RegistryScopeMap) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryScopeMap.
func (in *RegistryScopeMap) DeepCopy() *RegistryScopeMap {
	if in == nil {
		return nil
	}
	out := new(RegistryScopeMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryScopeMap) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryScopeMapList) DeepCopyInto(out *RegistryScopeMapList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegistryScopeMap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryScopeMapList.
func (in *RegistryScopeMapList) DeepCopy() *RegistryScopeMapList {
	if in == nil {
		return nil
	}
	out := new(RegistryScopeMapList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryScopeMapList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryScopeMapSpec) DeepCopyInto(out *RegistryScopeMapSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(RegistryScopeMapSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryScopeMapSpec.
func (in *RegistryScopeMapSpec) DeepCopy() *RegistryScopeMapSpec {
	if in == nil {
		return nil
	}
	out := new(RegistryScopeMapSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryScopeMapSpecResource) DeepCopyInto(out *RegistryScopeMapSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContainerRegistryName != nil {
		in, out := &in.ContainerRegistryName, &out.ContainerRegistryName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryScopeMapSpecResource.
func (in *RegistryScopeMapSpecResource) DeepCopy() *RegistryScopeMapSpecResource {
	if in == nil {
		return nil
	}
	out := new(RegistryScopeMapSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryScopeMapStatus) DeepCopyInto(out *RegistryScopeMapStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryScopeMapStatus.
func (in *RegistryScopeMapStatus) DeepCopy() *RegistryScopeMapStatus {
	if in == nil {
		return nil
	}
	out := new(RegistryScopeMapStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpec) DeepCopyInto(out *RegistrySpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(RegistrySpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpec.
func (in *RegistrySpec) DeepCopy() *RegistrySpec {
	if in == nil {
		return nil
	}
	out := new(RegistrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpecEncryption) DeepCopyInto(out *RegistrySpecEncryption) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IdentityClientID != nil {
		in, out := &in.IdentityClientID, &out.IdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpecEncryption.
func (in *RegistrySpecEncryption) DeepCopy() *RegistrySpecEncryption {
	if in == nil {
		return nil
	}
	out := new(RegistrySpecEncryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpecGeoreplications) DeepCopyInto(out *RegistrySpecGeoreplications) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.RegionalEndpointEnabled != nil {
		in, out := &in.RegionalEndpointEnabled, &out.RegionalEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ZoneRedundancyEnabled != nil {
		in, out := &in.ZoneRedundancyEnabled, &out.ZoneRedundancyEnabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpecGeoreplications.
func (in *RegistrySpecGeoreplications) DeepCopy() *RegistrySpecGeoreplications {
	if in == nil {
		return nil
	}
	out := new(RegistrySpecGeoreplications)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpecIdentity) DeepCopyInto(out *RegistrySpecIdentity) {
	*out = *in
	if in.IdentityIDS != nil {
		in, out := &in.IdentityIDS, &out.IdentityIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpecIdentity.
func (in *RegistrySpecIdentity) DeepCopy() *RegistrySpecIdentity {
	if in == nil {
		return nil
	}
	out := new(RegistrySpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpecNetworkRuleSet) DeepCopyInto(out *RegistrySpecNetworkRuleSet) {
	*out = *in
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.IpRule != nil {
		in, out := &in.IpRule, &out.IpRule
		*out = make([]RegistrySpecNetworkRuleSetIpRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualNetwork != nil {
		in, out := &in.VirtualNetwork, &out.VirtualNetwork
		*out = make([]RegistrySpecNetworkRuleSetVirtualNetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpecNetworkRuleSet.
func (in *RegistrySpecNetworkRuleSet) DeepCopy() *RegistrySpecNetworkRuleSet {
	if in == nil {
		return nil
	}
	out := new(RegistrySpecNetworkRuleSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpecNetworkRuleSetIpRule) DeepCopyInto(out *RegistrySpecNetworkRuleSetIpRule) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.IpRange != nil {
		in, out := &in.IpRange, &out.IpRange
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpecNetworkRuleSetIpRule.
func (in *RegistrySpecNetworkRuleSetIpRule) DeepCopy() *RegistrySpecNetworkRuleSetIpRule {
	if in == nil {
		return nil
	}
	out := new(RegistrySpecNetworkRuleSetIpRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpecNetworkRuleSetVirtualNetwork) DeepCopyInto(out *RegistrySpecNetworkRuleSetVirtualNetwork) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpecNetworkRuleSetVirtualNetwork.
func (in *RegistrySpecNetworkRuleSetVirtualNetwork) DeepCopy() *RegistrySpecNetworkRuleSetVirtualNetwork {
	if in == nil {
		return nil
	}
	out := new(RegistrySpecNetworkRuleSetVirtualNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpecResource) DeepCopyInto(out *RegistrySpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AdminEnabled != nil {
		in, out := &in.AdminEnabled, &out.AdminEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AdminPassword != nil {
		in, out := &in.AdminPassword, &out.AdminPassword
		*out = new(string)
		**out = **in
	}
	if in.AdminUsername != nil {
		in, out := &in.AdminUsername, &out.AdminUsername
		*out = new(string)
		**out = **in
	}
	if in.AnonymousPullEnabled != nil {
		in, out := &in.AnonymousPullEnabled, &out.AnonymousPullEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DataEndpointEnabled != nil {
		in, out := &in.DataEndpointEnabled, &out.DataEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Encryption != nil {
		in, out := &in.Encryption, &out.Encryption
		*out = new(RegistrySpecEncryption)
		(*in).DeepCopyInto(*out)
	}
	if in.GeoreplicationLocations != nil {
		in, out := &in.GeoreplicationLocations, &out.GeoreplicationLocations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Georeplications != nil {
		in, out := &in.Georeplications, &out.Georeplications
		*out = make([]RegistrySpecGeoreplications, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(RegistrySpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.LoginServer != nil {
		in, out := &in.LoginServer, &out.LoginServer
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkRuleBypassOption != nil {
		in, out := &in.NetworkRuleBypassOption, &out.NetworkRuleBypassOption
		*out = new(string)
		**out = **in
	}
	if in.NetworkRuleSet != nil {
		in, out := &in.NetworkRuleSet, &out.NetworkRuleSet
		*out = new(RegistrySpecNetworkRuleSet)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.QuarantinePolicyEnabled != nil {
		in, out := &in.QuarantinePolicyEnabled, &out.QuarantinePolicyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(RegistrySpecRetentionPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TrustPolicy != nil {
		in, out := &in.TrustPolicy, &out.TrustPolicy
		*out = new(RegistrySpecTrustPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneRedundancyEnabled != nil {
		in, out := &in.ZoneRedundancyEnabled, &out.ZoneRedundancyEnabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpecResource.
func (in *RegistrySpecResource) DeepCopy() *RegistrySpecResource {
	if in == nil {
		return nil
	}
	out := new(RegistrySpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpecRetentionPolicy) DeepCopyInto(out *RegistrySpecRetentionPolicy) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(int64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpecRetentionPolicy.
func (in *RegistrySpecRetentionPolicy) DeepCopy() *RegistrySpecRetentionPolicy {
	if in == nil {
		return nil
	}
	out := new(RegistrySpecRetentionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpecTrustPolicy) DeepCopyInto(out *RegistrySpecTrustPolicy) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpecTrustPolicy.
func (in *RegistrySpecTrustPolicy) DeepCopy() *RegistrySpecTrustPolicy {
	if in == nil {
		return nil
	}
	out := new(RegistrySpecTrustPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryStatus) DeepCopyInto(out *RegistryStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryStatus.
func (in *RegistryStatus) DeepCopy() *RegistryStatus {
	if in == nil {
		return nil
	}
	out := new(RegistryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTask) DeepCopyInto(out *RegistryTask) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTask.
func (in *RegistryTask) DeepCopy() *RegistryTask {
	if in == nil {
		return nil
	}
	out := new(RegistryTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryTask) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskList) DeepCopyInto(out *RegistryTaskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegistryTask, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskList.
func (in *RegistryTaskList) DeepCopy() *RegistryTaskList {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryTaskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpec) DeepCopyInto(out *RegistryTaskSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(RegistryTaskSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpec.
func (in *RegistryTaskSpec) DeepCopy() *RegistryTaskSpec {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecAgentSetting) DeepCopyInto(out *RegistryTaskSpecAgentSetting) {
	*out = *in
	if in.Cpu != nil {
		in, out := &in.Cpu, &out.Cpu
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecAgentSetting.
func (in *RegistryTaskSpecAgentSetting) DeepCopy() *RegistryTaskSpecAgentSetting {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecAgentSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecBaseImageTrigger) DeepCopyInto(out *RegistryTaskSpecBaseImageTrigger) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpdateTriggerEndpoint != nil {
		in, out := &in.UpdateTriggerEndpoint, &out.UpdateTriggerEndpoint
		*out = new(string)
		**out = **in
	}
	if in.UpdateTriggerPayloadType != nil {
		in, out := &in.UpdateTriggerPayloadType, &out.UpdateTriggerPayloadType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecBaseImageTrigger.
func (in *RegistryTaskSpecBaseImageTrigger) DeepCopy() *RegistryTaskSpecBaseImageTrigger {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecBaseImageTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecDockerStep) DeepCopyInto(out *RegistryTaskSpecDockerStep) {
	*out = *in
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.CacheEnabled != nil {
		in, out := &in.CacheEnabled, &out.CacheEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ContextAccessToken != nil {
		in, out := &in.ContextAccessToken, &out.ContextAccessToken
		*out = new(string)
		**out = **in
	}
	if in.ContextPath != nil {
		in, out := &in.ContextPath, &out.ContextPath
		*out = new(string)
		**out = **in
	}
	if in.DockerfilePath != nil {
		in, out := &in.DockerfilePath, &out.DockerfilePath
		*out = new(string)
		**out = **in
	}
	if in.ImageNames != nil {
		in, out := &in.ImageNames, &out.ImageNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PushEnabled != nil {
		in, out := &in.PushEnabled, &out.PushEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SecretArguments != nil {
		in, out := &in.SecretArguments, &out.SecretArguments
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecDockerStep.
func (in *RegistryTaskSpecDockerStep) DeepCopy() *RegistryTaskSpecDockerStep {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecDockerStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecEncodedStep) DeepCopyInto(out *RegistryTaskSpecEncodedStep) {
	*out = *in
	if in.ContextAccessToken != nil {
		in, out := &in.ContextAccessToken, &out.ContextAccessToken
		*out = new(string)
		**out = **in
	}
	if in.ContextPath != nil {
		in, out := &in.ContextPath, &out.ContextPath
		*out = new(string)
		**out = **in
	}
	if in.SecretValues != nil {
		in, out := &in.SecretValues, &out.SecretValues
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TaskContent != nil {
		in, out := &in.TaskContent, &out.TaskContent
		*out = new(string)
		**out = **in
	}
	if in.ValueContent != nil {
		in, out := &in.ValueContent, &out.ValueContent
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecEncodedStep.
func (in *RegistryTaskSpecEncodedStep) DeepCopy() *RegistryTaskSpecEncodedStep {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecEncodedStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecFileStep) DeepCopyInto(out *RegistryTaskSpecFileStep) {
	*out = *in
	if in.ContextAccessToken != nil {
		in, out := &in.ContextAccessToken, &out.ContextAccessToken
		*out = new(string)
		**out = **in
	}
	if in.ContextPath != nil {
		in, out := &in.ContextPath, &out.ContextPath
		*out = new(string)
		**out = **in
	}
	if in.SecretValues != nil {
		in, out := &in.SecretValues, &out.SecretValues
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TaskFilePath != nil {
		in, out := &in.TaskFilePath, &out.TaskFilePath
		*out = new(string)
		**out = **in
	}
	if in.ValueFilePath != nil {
		in, out := &in.ValueFilePath, &out.ValueFilePath
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecFileStep.
func (in *RegistryTaskSpecFileStep) DeepCopy() *RegistryTaskSpecFileStep {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecFileStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecIdentity) DeepCopyInto(out *RegistryTaskSpecIdentity) {
	*out = *in
	if in.IdentityIDS != nil {
		in, out := &in.IdentityIDS, &out.IdentityIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecIdentity.
func (in *RegistryTaskSpecIdentity) DeepCopy() *RegistryTaskSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecPlatform) DeepCopyInto(out *RegistryTaskSpecPlatform) {
	*out = *in
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.Os != nil {
		in, out := &in.Os, &out.Os
		*out = new(string)
		**out = **in
	}
	if in.Variant != nil {
		in, out := &in.Variant, &out.Variant
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecPlatform.
func (in *RegistryTaskSpecPlatform) DeepCopy() *RegistryTaskSpecPlatform {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecPlatform)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecRegistryCredential) DeepCopyInto(out *RegistryTaskSpecRegistryCredential) {
	*out = *in
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = make([]RegistryTaskSpecRegistryCredentialCustom, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(RegistryTaskSpecRegistryCredentialSource)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecRegistryCredential.
func (in *RegistryTaskSpecRegistryCredential) DeepCopy() *RegistryTaskSpecRegistryCredential {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecRegistryCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecRegistryCredentialCustom) DeepCopyInto(out *RegistryTaskSpecRegistryCredentialCustom) {
	*out = *in
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
	if in.LoginServer != nil {
		in, out := &in.LoginServer, &out.LoginServer
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecRegistryCredentialCustom.
func (in *RegistryTaskSpecRegistryCredentialCustom) DeepCopy() *RegistryTaskSpecRegistryCredentialCustom {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecRegistryCredentialCustom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecRegistryCredentialSource) DeepCopyInto(out *RegistryTaskSpecRegistryCredentialSource) {
	*out = *in
	if in.LoginMode != nil {
		in, out := &in.LoginMode, &out.LoginMode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecRegistryCredentialSource.
func (in *RegistryTaskSpecRegistryCredentialSource) DeepCopy() *RegistryTaskSpecRegistryCredentialSource {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecRegistryCredentialSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecResource) DeepCopyInto(out *RegistryTaskSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AgentPoolName != nil {
		in, out := &in.AgentPoolName, &out.AgentPoolName
		*out = new(string)
		**out = **in
	}
	if in.AgentSetting != nil {
		in, out := &in.AgentSetting, &out.AgentSetting
		*out = new(RegistryTaskSpecAgentSetting)
		(*in).DeepCopyInto(*out)
	}
	if in.BaseImageTrigger != nil {
		in, out := &in.BaseImageTrigger, &out.BaseImageTrigger
		*out = new(RegistryTaskSpecBaseImageTrigger)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerRegistryID != nil {
		in, out := &in.ContainerRegistryID, &out.ContainerRegistryID
		*out = new(string)
		**out = **in
	}
	if in.DockerStep != nil {
		in, out := &in.DockerStep, &out.DockerStep
		*out = new(RegistryTaskSpecDockerStep)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EncodedStep != nil {
		in, out := &in.EncodedStep, &out.EncodedStep
		*out = new(RegistryTaskSpecEncodedStep)
		(*in).DeepCopyInto(*out)
	}
	if in.FileStep != nil {
		in, out := &in.FileStep, &out.FileStep
		*out = new(RegistryTaskSpecFileStep)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(RegistryTaskSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.IsSystemTask != nil {
		in, out := &in.IsSystemTask, &out.IsSystemTask
		*out = new(bool)
		**out = **in
	}
	if in.LogTemplate != nil {
		in, out := &in.LogTemplate, &out.LogTemplate
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Platform != nil {
		in, out := &in.Platform, &out.Platform
		*out = new(RegistryTaskSpecPlatform)
		(*in).DeepCopyInto(*out)
	}
	if in.RegistryCredential != nil {
		in, out := &in.RegistryCredential, &out.RegistryCredential
		*out = new(RegistryTaskSpecRegistryCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceTrigger != nil {
		in, out := &in.SourceTrigger, &out.SourceTrigger
		*out = make([]RegistryTaskSpecSourceTrigger, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TimeoutInSeconds != nil {
		in, out := &in.TimeoutInSeconds, &out.TimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.TimerTrigger != nil {
		in, out := &in.TimerTrigger, &out.TimerTrigger
		*out = make([]RegistryTaskSpecTimerTrigger, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecResource.
func (in *RegistryTaskSpecResource) DeepCopy() *RegistryTaskSpecResource {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecSourceTrigger) DeepCopyInto(out *RegistryTaskSpecSourceTrigger) {
	*out = *in
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = new(RegistryTaskSpecSourceTriggerAuthentication)
		(*in).DeepCopyInto(*out)
	}
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RepositoryURL != nil {
		in, out := &in.RepositoryURL, &out.RepositoryURL
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecSourceTrigger.
func (in *RegistryTaskSpecSourceTrigger) DeepCopy() *RegistryTaskSpecSourceTrigger {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecSourceTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecSourceTriggerAuthentication) DeepCopyInto(out *RegistryTaskSpecSourceTriggerAuthentication) {
	*out = *in
	if in.ExpireInSeconds != nil {
		in, out := &in.ExpireInSeconds, &out.ExpireInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.RefreshToken != nil {
		in, out := &in.RefreshToken, &out.RefreshToken
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(string)
		**out = **in
	}
	if in.TokenType != nil {
		in, out := &in.TokenType, &out.TokenType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecSourceTriggerAuthentication.
func (in *RegistryTaskSpecSourceTriggerAuthentication) DeepCopy() *RegistryTaskSpecSourceTriggerAuthentication {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecSourceTriggerAuthentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskSpecTimerTrigger) DeepCopyInto(out *RegistryTaskSpecTimerTrigger) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskSpecTimerTrigger.
func (in *RegistryTaskSpecTimerTrigger) DeepCopy() *RegistryTaskSpecTimerTrigger {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskSpecTimerTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTaskStatus) DeepCopyInto(out *RegistryTaskStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTaskStatus.
func (in *RegistryTaskStatus) DeepCopy() *RegistryTaskStatus {
	if in == nil {
		return nil
	}
	out := new(RegistryTaskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryToken) DeepCopyInto(out *RegistryToken) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryToken.
func (in *RegistryToken) DeepCopy() *RegistryToken {
	if in == nil {
		return nil
	}
	out := new(RegistryToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryToken) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTokenList) DeepCopyInto(out *RegistryTokenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegistryToken, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTokenList.
func (in *RegistryTokenList) DeepCopy() *RegistryTokenList {
	if in == nil {
		return nil
	}
	out := new(RegistryTokenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryTokenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTokenSpec) DeepCopyInto(out *RegistryTokenSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(RegistryTokenSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTokenSpec.
func (in *RegistryTokenSpec) DeepCopy() *RegistryTokenSpec {
	if in == nil {
		return nil
	}
	out := new(RegistryTokenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTokenSpecResource) DeepCopyInto(out *RegistryTokenSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.ContainerRegistryName != nil {
		in, out := &in.ContainerRegistryName, &out.ContainerRegistryName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ScopeMapID != nil {
		in, out := &in.ScopeMapID, &out.ScopeMapID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTokenSpecResource.
func (in *RegistryTokenSpecResource) DeepCopy() *RegistryTokenSpecResource {
	if in == nil {
		return nil
	}
	out := new(RegistryTokenSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryTokenStatus) DeepCopyInto(out *RegistryTokenStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryTokenStatus.
func (in *RegistryTokenStatus) DeepCopy() *RegistryTokenStatus {
	if in == nil {
		return nil
	}
	out := new(RegistryTokenStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryWebhook) DeepCopyInto(out *RegistryWebhook) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryWebhook.
func (in *RegistryWebhook) DeepCopy() *RegistryWebhook {
	if in == nil {
		return nil
	}
	out := new(RegistryWebhook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryWebhook) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryWebhookList) DeepCopyInto(out *RegistryWebhookList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegistryWebhook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryWebhookList.
func (in *RegistryWebhookList) DeepCopy() *RegistryWebhookList {
	if in == nil {
		return nil
	}
	out := new(RegistryWebhookList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryWebhookList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryWebhookSpec) DeepCopyInto(out *RegistryWebhookSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(RegistryWebhookSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryWebhookSpec.
func (in *RegistryWebhookSpec) DeepCopy() *RegistryWebhookSpec {
	if in == nil {
		return nil
	}
	out := new(RegistryWebhookSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryWebhookSpecResource) DeepCopyInto(out *RegistryWebhookSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CustomHeaders != nil {
		in, out := &in.CustomHeaders, &out.CustomHeaders
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryName != nil {
		in, out := &in.RegistryName, &out.RegistryName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.ServiceURI != nil {
		in, out := &in.ServiceURI, &out.ServiceURI
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryWebhookSpecResource.
func (in *RegistryWebhookSpecResource) DeepCopy() *RegistryWebhookSpecResource {
	if in == nil {
		return nil
	}
	out := new(RegistryWebhookSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryWebhookStatus) DeepCopyInto(out *RegistryWebhookStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryWebhookStatus.
func (in *RegistryWebhookStatus) DeepCopy() *RegistryWebhookStatus {
	if in == nil {
		return nil
	}
	out := new(RegistryWebhookStatus)
	in.DeepCopyInto(out)
	return out
}
